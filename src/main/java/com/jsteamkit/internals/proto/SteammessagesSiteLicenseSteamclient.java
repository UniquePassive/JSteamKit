// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_site_license.steamclient.proto
package com.jsteamkit.internals.proto;

public final class SteammessagesSiteLicenseSteamclient {
  private SteammessagesSiteLicenseSteamclient() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CSiteManagerClient_IncomingClient_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSiteManagerClient_IncomingClient_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 site_instanceid = 1;</code>
     */
    boolean hasSiteInstanceid();
    /**
     * <code>optional fixed64 site_instanceid = 1;</code>
     */
    long getSiteInstanceid();

    /**
     * <code>optional fixed64 client_steamid = 2;</code>
     */
    boolean hasClientSteamid();
    /**
     * <code>optional fixed64 client_steamid = 2;</code>
     */
    long getClientSteamid();

    /**
     * <code>optional fixed32 client_local_ip = 3;</code>
     */
    boolean hasClientLocalIp();
    /**
     * <code>optional fixed32 client_local_ip = 3;</code>
     */
    int getClientLocalIp();

    /**
     * <code>optional bytes connection_key = 4;</code>
     */
    boolean hasConnectionKey();
    /**
     * <code>optional bytes connection_key = 4;</code>
     */
    com.google.protobuf.ByteString getConnectionKey();
  }
  /**
   * Protobuf type {@code CSiteManagerClient_IncomingClient_Request}
   */
  public  static final class CSiteManagerClient_IncomingClient_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSiteManagerClient_IncomingClient_Request)
      CSiteManagerClient_IncomingClient_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSiteManagerClient_IncomingClient_Request.newBuilder() to construct.
    private CSiteManagerClient_IncomingClient_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSiteManagerClient_IncomingClient_Request() {
      siteInstanceid_ = 0L;
      clientSteamid_ = 0L;
      clientLocalIp_ = 0;
      connectionKey_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSiteManagerClient_IncomingClient_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              siteInstanceid_ = input.readFixed64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              clientSteamid_ = input.readFixed64();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              clientLocalIp_ = input.readFixed32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              connectionKey_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteManagerClient_IncomingClient_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteManagerClient_IncomingClient_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request.class, SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request.Builder.class);
    }

    private int bitField0_;
    public static final int SITE_INSTANCEID_FIELD_NUMBER = 1;
    private long siteInstanceid_;
    /**
     * <code>optional fixed64 site_instanceid = 1;</code>
     */
    public boolean hasSiteInstanceid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 site_instanceid = 1;</code>
     */
    public long getSiteInstanceid() {
      return siteInstanceid_;
    }

    public static final int CLIENT_STEAMID_FIELD_NUMBER = 2;
    private long clientSteamid_;
    /**
     * <code>optional fixed64 client_steamid = 2;</code>
     */
    public boolean hasClientSteamid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 client_steamid = 2;</code>
     */
    public long getClientSteamid() {
      return clientSteamid_;
    }

    public static final int CLIENT_LOCAL_IP_FIELD_NUMBER = 3;
    private int clientLocalIp_;
    /**
     * <code>optional fixed32 client_local_ip = 3;</code>
     */
    public boolean hasClientLocalIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional fixed32 client_local_ip = 3;</code>
     */
    public int getClientLocalIp() {
      return clientLocalIp_;
    }

    public static final int CONNECTION_KEY_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString connectionKey_;
    /**
     * <code>optional bytes connection_key = 4;</code>
     */
    public boolean hasConnectionKey() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes connection_key = 4;</code>
     */
    public com.google.protobuf.ByteString getConnectionKey() {
      return connectionKey_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, siteInstanceid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, clientSteamid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFixed32(3, clientLocalIp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, connectionKey_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, siteInstanceid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, clientSteamid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, clientLocalIp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, connectionKey_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request)) {
        return super.equals(obj);
      }
      SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request other = (SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request) obj;

      boolean result = true;
      result = result && (hasSiteInstanceid() == other.hasSiteInstanceid());
      if (hasSiteInstanceid()) {
        result = result && (getSiteInstanceid()
            == other.getSiteInstanceid());
      }
      result = result && (hasClientSteamid() == other.hasClientSteamid());
      if (hasClientSteamid()) {
        result = result && (getClientSteamid()
            == other.getClientSteamid());
      }
      result = result && (hasClientLocalIp() == other.hasClientLocalIp());
      if (hasClientLocalIp()) {
        result = result && (getClientLocalIp()
            == other.getClientLocalIp());
      }
      result = result && (hasConnectionKey() == other.hasConnectionKey());
      if (hasConnectionKey()) {
        result = result && getConnectionKey()
            .equals(other.getConnectionKey());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSiteInstanceid()) {
        hash = (37 * hash) + SITE_INSTANCEID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSiteInstanceid());
      }
      if (hasClientSteamid()) {
        hash = (37 * hash) + CLIENT_STEAMID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getClientSteamid());
      }
      if (hasClientLocalIp()) {
        hash = (37 * hash) + CLIENT_LOCAL_IP_FIELD_NUMBER;
        hash = (53 * hash) + getClientLocalIp();
      }
      if (hasConnectionKey()) {
        hash = (37 * hash) + CONNECTION_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getConnectionKey().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSiteManagerClient_IncomingClient_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSiteManagerClient_IncomingClient_Request)
        SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteManagerClient_IncomingClient_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteManagerClient_IncomingClient_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request.class, SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request.Builder.class);
      }

      // Construct using SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        siteInstanceid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        clientSteamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        clientLocalIp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        connectionKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteManagerClient_IncomingClient_Request_descriptor;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request getDefaultInstanceForType() {
        return SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request.getDefaultInstance();
      }

      public SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request build() {
        SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request buildPartial() {
        SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request result = new SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.siteInstanceid_ = siteInstanceid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientSteamid_ = clientSteamid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientLocalIp_ = clientLocalIp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.connectionKey_ = connectionKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request) {
          return mergeFrom((SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request other) {
        if (other == SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request.getDefaultInstance()) return this;
        if (other.hasSiteInstanceid()) {
          setSiteInstanceid(other.getSiteInstanceid());
        }
        if (other.hasClientSteamid()) {
          setClientSteamid(other.getClientSteamid());
        }
        if (other.hasClientLocalIp()) {
          setClientLocalIp(other.getClientLocalIp());
        }
        if (other.hasConnectionKey()) {
          setConnectionKey(other.getConnectionKey());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long siteInstanceid_ ;
      /**
       * <code>optional fixed64 site_instanceid = 1;</code>
       */
      public boolean hasSiteInstanceid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 site_instanceid = 1;</code>
       */
      public long getSiteInstanceid() {
        return siteInstanceid_;
      }
      /**
       * <code>optional fixed64 site_instanceid = 1;</code>
       */
      public Builder setSiteInstanceid(long value) {
        bitField0_ |= 0x00000001;
        siteInstanceid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 site_instanceid = 1;</code>
       */
      public Builder clearSiteInstanceid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        siteInstanceid_ = 0L;
        onChanged();
        return this;
      }

      private long clientSteamid_ ;
      /**
       * <code>optional fixed64 client_steamid = 2;</code>
       */
      public boolean hasClientSteamid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 client_steamid = 2;</code>
       */
      public long getClientSteamid() {
        return clientSteamid_;
      }
      /**
       * <code>optional fixed64 client_steamid = 2;</code>
       */
      public Builder setClientSteamid(long value) {
        bitField0_ |= 0x00000002;
        clientSteamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 client_steamid = 2;</code>
       */
      public Builder clearClientSteamid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientSteamid_ = 0L;
        onChanged();
        return this;
      }

      private int clientLocalIp_ ;
      /**
       * <code>optional fixed32 client_local_ip = 3;</code>
       */
      public boolean hasClientLocalIp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional fixed32 client_local_ip = 3;</code>
       */
      public int getClientLocalIp() {
        return clientLocalIp_;
      }
      /**
       * <code>optional fixed32 client_local_ip = 3;</code>
       */
      public Builder setClientLocalIp(int value) {
        bitField0_ |= 0x00000004;
        clientLocalIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 client_local_ip = 3;</code>
       */
      public Builder clearClientLocalIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientLocalIp_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString connectionKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes connection_key = 4;</code>
       */
      public boolean hasConnectionKey() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes connection_key = 4;</code>
       */
      public com.google.protobuf.ByteString getConnectionKey() {
        return connectionKey_;
      }
      /**
       * <code>optional bytes connection_key = 4;</code>
       */
      public Builder setConnectionKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        connectionKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes connection_key = 4;</code>
       */
      public Builder clearConnectionKey() {
        bitField0_ = (bitField0_ & ~0x00000008);
        connectionKey_ = getDefaultInstance().getConnectionKey();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSiteManagerClient_IncomingClient_Request)
    }

    // @@protoc_insertion_point(class_scope:CSiteManagerClient_IncomingClient_Request)
    private static final SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request();
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSiteManagerClient_IncomingClient_Request>
        PARSER = new com.google.protobuf.AbstractParser<CSiteManagerClient_IncomingClient_Request>() {
      public CSiteManagerClient_IncomingClient_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CSiteManagerClient_IncomingClient_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSiteManagerClient_IncomingClient_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSiteManagerClient_IncomingClient_Request> getParserForType() {
      return PARSER;
    }

    public SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSiteManagerClient_IncomingClient_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSiteManagerClient_IncomingClient_Response)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CSiteManagerClient_IncomingClient_Response}
   */
  public  static final class CSiteManagerClient_IncomingClient_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSiteManagerClient_IncomingClient_Response)
      CSiteManagerClient_IncomingClient_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSiteManagerClient_IncomingClient_Response.newBuilder() to construct.
    private CSiteManagerClient_IncomingClient_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSiteManagerClient_IncomingClient_Response() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSiteManagerClient_IncomingClient_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteManagerClient_IncomingClient_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteManagerClient_IncomingClient_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response.class, SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response)) {
        return super.equals(obj);
      }
      SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response other = (SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSiteManagerClient_IncomingClient_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSiteManagerClient_IncomingClient_Response)
        SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteManagerClient_IncomingClient_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteManagerClient_IncomingClient_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response.class, SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response.Builder.class);
      }

      // Construct using SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteManagerClient_IncomingClient_Response_descriptor;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response getDefaultInstanceForType() {
        return SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response.getDefaultInstance();
      }

      public SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response build() {
        SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response buildPartial() {
        SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response result = new SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response) {
          return mergeFrom((SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response other) {
        if (other == SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSiteManagerClient_IncomingClient_Response)
    }

    // @@protoc_insertion_point(class_scope:CSiteManagerClient_IncomingClient_Response)
    private static final SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response();
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSiteManagerClient_IncomingClient_Response>
        PARSER = new com.google.protobuf.AbstractParser<CSiteManagerClient_IncomingClient_Response>() {
      public CSiteManagerClient_IncomingClient_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CSiteManagerClient_IncomingClient_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSiteManagerClient_IncomingClient_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSiteManagerClient_IncomingClient_Response> getParserForType() {
      return PARSER;
    }

    public SteammessagesSiteLicenseSteamclient.CSiteManagerClient_IncomingClient_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSiteLicense_InitiateAssociation_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSiteLicense_InitiateAssociation_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 site_steamid = 1;</code>
     */
    boolean hasSiteSteamid();
    /**
     * <code>optional fixed64 site_steamid = 1;</code>
     */
    long getSiteSteamid();

    /**
     * <code>optional fixed64 site_instanceid = 2;</code>
     */
    boolean hasSiteInstanceid();
    /**
     * <code>optional fixed64 site_instanceid = 2;</code>
     */
    long getSiteInstanceid();

    /**
     * <code>optional fixed32 client_local_ip = 3;</code>
     */
    boolean hasClientLocalIp();
    /**
     * <code>optional fixed32 client_local_ip = 3;</code>
     */
    int getClientLocalIp();
  }
  /**
   * Protobuf type {@code CSiteLicense_InitiateAssociation_Request}
   */
  public  static final class CSiteLicense_InitiateAssociation_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSiteLicense_InitiateAssociation_Request)
      CSiteLicense_InitiateAssociation_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSiteLicense_InitiateAssociation_Request.newBuilder() to construct.
    private CSiteLicense_InitiateAssociation_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSiteLicense_InitiateAssociation_Request() {
      siteSteamid_ = 0L;
      siteInstanceid_ = 0L;
      clientLocalIp_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSiteLicense_InitiateAssociation_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              siteSteamid_ = input.readFixed64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              siteInstanceid_ = input.readFixed64();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              clientLocalIp_ = input.readFixed32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_InitiateAssociation_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_InitiateAssociation_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request.Builder.class);
    }

    private int bitField0_;
    public static final int SITE_STEAMID_FIELD_NUMBER = 1;
    private long siteSteamid_;
    /**
     * <code>optional fixed64 site_steamid = 1;</code>
     */
    public boolean hasSiteSteamid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 site_steamid = 1;</code>
     */
    public long getSiteSteamid() {
      return siteSteamid_;
    }

    public static final int SITE_INSTANCEID_FIELD_NUMBER = 2;
    private long siteInstanceid_;
    /**
     * <code>optional fixed64 site_instanceid = 2;</code>
     */
    public boolean hasSiteInstanceid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 site_instanceid = 2;</code>
     */
    public long getSiteInstanceid() {
      return siteInstanceid_;
    }

    public static final int CLIENT_LOCAL_IP_FIELD_NUMBER = 3;
    private int clientLocalIp_;
    /**
     * <code>optional fixed32 client_local_ip = 3;</code>
     */
    public boolean hasClientLocalIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional fixed32 client_local_ip = 3;</code>
     */
    public int getClientLocalIp() {
      return clientLocalIp_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, siteSteamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, siteInstanceid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFixed32(3, clientLocalIp_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, siteSteamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, siteInstanceid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, clientLocalIp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request)) {
        return super.equals(obj);
      }
      SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request other = (SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request) obj;

      boolean result = true;
      result = result && (hasSiteSteamid() == other.hasSiteSteamid());
      if (hasSiteSteamid()) {
        result = result && (getSiteSteamid()
            == other.getSiteSteamid());
      }
      result = result && (hasSiteInstanceid() == other.hasSiteInstanceid());
      if (hasSiteInstanceid()) {
        result = result && (getSiteInstanceid()
            == other.getSiteInstanceid());
      }
      result = result && (hasClientLocalIp() == other.hasClientLocalIp());
      if (hasClientLocalIp()) {
        result = result && (getClientLocalIp()
            == other.getClientLocalIp());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSiteSteamid()) {
        hash = (37 * hash) + SITE_STEAMID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSiteSteamid());
      }
      if (hasSiteInstanceid()) {
        hash = (37 * hash) + SITE_INSTANCEID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSiteInstanceid());
      }
      if (hasClientLocalIp()) {
        hash = (37 * hash) + CLIENT_LOCAL_IP_FIELD_NUMBER;
        hash = (53 * hash) + getClientLocalIp();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSiteLicense_InitiateAssociation_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSiteLicense_InitiateAssociation_Request)
        SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_InitiateAssociation_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_InitiateAssociation_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request.Builder.class);
      }

      // Construct using SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        siteSteamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        siteInstanceid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        clientLocalIp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_InitiateAssociation_Request_descriptor;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request getDefaultInstanceForType() {
        return SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request.getDefaultInstance();
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request build() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request buildPartial() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request result = new SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.siteSteamid_ = siteSteamid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.siteInstanceid_ = siteInstanceid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientLocalIp_ = clientLocalIp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request) {
          return mergeFrom((SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request other) {
        if (other == SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request.getDefaultInstance()) return this;
        if (other.hasSiteSteamid()) {
          setSiteSteamid(other.getSiteSteamid());
        }
        if (other.hasSiteInstanceid()) {
          setSiteInstanceid(other.getSiteInstanceid());
        }
        if (other.hasClientLocalIp()) {
          setClientLocalIp(other.getClientLocalIp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long siteSteamid_ ;
      /**
       * <code>optional fixed64 site_steamid = 1;</code>
       */
      public boolean hasSiteSteamid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 site_steamid = 1;</code>
       */
      public long getSiteSteamid() {
        return siteSteamid_;
      }
      /**
       * <code>optional fixed64 site_steamid = 1;</code>
       */
      public Builder setSiteSteamid(long value) {
        bitField0_ |= 0x00000001;
        siteSteamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 site_steamid = 1;</code>
       */
      public Builder clearSiteSteamid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        siteSteamid_ = 0L;
        onChanged();
        return this;
      }

      private long siteInstanceid_ ;
      /**
       * <code>optional fixed64 site_instanceid = 2;</code>
       */
      public boolean hasSiteInstanceid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 site_instanceid = 2;</code>
       */
      public long getSiteInstanceid() {
        return siteInstanceid_;
      }
      /**
       * <code>optional fixed64 site_instanceid = 2;</code>
       */
      public Builder setSiteInstanceid(long value) {
        bitField0_ |= 0x00000002;
        siteInstanceid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 site_instanceid = 2;</code>
       */
      public Builder clearSiteInstanceid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        siteInstanceid_ = 0L;
        onChanged();
        return this;
      }

      private int clientLocalIp_ ;
      /**
       * <code>optional fixed32 client_local_ip = 3;</code>
       */
      public boolean hasClientLocalIp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional fixed32 client_local_ip = 3;</code>
       */
      public int getClientLocalIp() {
        return clientLocalIp_;
      }
      /**
       * <code>optional fixed32 client_local_ip = 3;</code>
       */
      public Builder setClientLocalIp(int value) {
        bitField0_ |= 0x00000004;
        clientLocalIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 client_local_ip = 3;</code>
       */
      public Builder clearClientLocalIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientLocalIp_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSiteLicense_InitiateAssociation_Request)
    }

    // @@protoc_insertion_point(class_scope:CSiteLicense_InitiateAssociation_Request)
    private static final SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request();
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSiteLicense_InitiateAssociation_Request>
        PARSER = new com.google.protobuf.AbstractParser<CSiteLicense_InitiateAssociation_Request>() {
      public CSiteLicense_InitiateAssociation_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CSiteLicense_InitiateAssociation_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSiteLicense_InitiateAssociation_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSiteLicense_InitiateAssociation_Request> getParserForType() {
      return PARSER;
    }

    public SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSiteLicense_InitiateAssociation_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSiteLicense_InitiateAssociation_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes connection_key = 1;</code>
     */
    boolean hasConnectionKey();
    /**
     * <code>optional bytes connection_key = 1;</code>
     */
    com.google.protobuf.ByteString getConnectionKey();
  }
  /**
   * Protobuf type {@code CSiteLicense_InitiateAssociation_Response}
   */
  public  static final class CSiteLicense_InitiateAssociation_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSiteLicense_InitiateAssociation_Response)
      CSiteLicense_InitiateAssociation_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSiteLicense_InitiateAssociation_Response.newBuilder() to construct.
    private CSiteLicense_InitiateAssociation_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSiteLicense_InitiateAssociation_Response() {
      connectionKey_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSiteLicense_InitiateAssociation_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              connectionKey_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_InitiateAssociation_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_InitiateAssociation_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response.Builder.class);
    }

    private int bitField0_;
    public static final int CONNECTION_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString connectionKey_;
    /**
     * <code>optional bytes connection_key = 1;</code>
     */
    public boolean hasConnectionKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes connection_key = 1;</code>
     */
    public com.google.protobuf.ByteString getConnectionKey() {
      return connectionKey_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, connectionKey_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, connectionKey_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response)) {
        return super.equals(obj);
      }
      SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response other = (SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response) obj;

      boolean result = true;
      result = result && (hasConnectionKey() == other.hasConnectionKey());
      if (hasConnectionKey()) {
        result = result && getConnectionKey()
            .equals(other.getConnectionKey());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasConnectionKey()) {
        hash = (37 * hash) + CONNECTION_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getConnectionKey().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSiteLicense_InitiateAssociation_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSiteLicense_InitiateAssociation_Response)
        SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_InitiateAssociation_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_InitiateAssociation_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response.Builder.class);
      }

      // Construct using SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        connectionKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_InitiateAssociation_Response_descriptor;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response getDefaultInstanceForType() {
        return SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response.getDefaultInstance();
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response build() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response buildPartial() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response result = new SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.connectionKey_ = connectionKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response) {
          return mergeFrom((SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response other) {
        if (other == SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response.getDefaultInstance()) return this;
        if (other.hasConnectionKey()) {
          setConnectionKey(other.getConnectionKey());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString connectionKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes connection_key = 1;</code>
       */
      public boolean hasConnectionKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes connection_key = 1;</code>
       */
      public com.google.protobuf.ByteString getConnectionKey() {
        return connectionKey_;
      }
      /**
       * <code>optional bytes connection_key = 1;</code>
       */
      public Builder setConnectionKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        connectionKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes connection_key = 1;</code>
       */
      public Builder clearConnectionKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        connectionKey_ = getDefaultInstance().getConnectionKey();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSiteLicense_InitiateAssociation_Response)
    }

    // @@protoc_insertion_point(class_scope:CSiteLicense_InitiateAssociation_Response)
    private static final SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response();
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSiteLicense_InitiateAssociation_Response>
        PARSER = new com.google.protobuf.AbstractParser<CSiteLicense_InitiateAssociation_Response>() {
      public CSiteLicense_InitiateAssociation_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CSiteLicense_InitiateAssociation_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSiteLicense_InitiateAssociation_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSiteLicense_InitiateAssociation_Response> getParserForType() {
      return PARSER;
    }

    public SteammessagesSiteLicenseSteamclient.CSiteLicense_InitiateAssociation_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSiteLicense_LCSAuthenticate_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSiteLicense_LCSAuthenticate_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 instanceid = 1;</code>
     */
    boolean hasInstanceid();
    /**
     * <code>optional fixed64 instanceid = 1;</code>
     */
    long getInstanceid();
  }
  /**
   * Protobuf type {@code CSiteLicense_LCSAuthenticate_Request}
   */
  public  static final class CSiteLicense_LCSAuthenticate_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSiteLicense_LCSAuthenticate_Request)
      CSiteLicense_LCSAuthenticate_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSiteLicense_LCSAuthenticate_Request.newBuilder() to construct.
    private CSiteLicense_LCSAuthenticate_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSiteLicense_LCSAuthenticate_Request() {
      instanceid_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSiteLicense_LCSAuthenticate_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              instanceid_ = input.readFixed64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAuthenticate_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAuthenticate_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request.Builder.class);
    }

    private int bitField0_;
    public static final int INSTANCEID_FIELD_NUMBER = 1;
    private long instanceid_;
    /**
     * <code>optional fixed64 instanceid = 1;</code>
     */
    public boolean hasInstanceid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 instanceid = 1;</code>
     */
    public long getInstanceid() {
      return instanceid_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, instanceid_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, instanceid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request)) {
        return super.equals(obj);
      }
      SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request other = (SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request) obj;

      boolean result = true;
      result = result && (hasInstanceid() == other.hasInstanceid());
      if (hasInstanceid()) {
        result = result && (getInstanceid()
            == other.getInstanceid());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInstanceid()) {
        hash = (37 * hash) + INSTANCEID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getInstanceid());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSiteLicense_LCSAuthenticate_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSiteLicense_LCSAuthenticate_Request)
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAuthenticate_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAuthenticate_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request.Builder.class);
      }

      // Construct using SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        instanceid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAuthenticate_Request_descriptor;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request getDefaultInstanceForType() {
        return SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request.getDefaultInstance();
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request build() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request buildPartial() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request result = new SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.instanceid_ = instanceid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request) {
          return mergeFrom((SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request other) {
        if (other == SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request.getDefaultInstance()) return this;
        if (other.hasInstanceid()) {
          setInstanceid(other.getInstanceid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long instanceid_ ;
      /**
       * <code>optional fixed64 instanceid = 1;</code>
       */
      public boolean hasInstanceid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 instanceid = 1;</code>
       */
      public long getInstanceid() {
        return instanceid_;
      }
      /**
       * <code>optional fixed64 instanceid = 1;</code>
       */
      public Builder setInstanceid(long value) {
        bitField0_ |= 0x00000001;
        instanceid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 instanceid = 1;</code>
       */
      public Builder clearInstanceid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        instanceid_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSiteLicense_LCSAuthenticate_Request)
    }

    // @@protoc_insertion_point(class_scope:CSiteLicense_LCSAuthenticate_Request)
    private static final SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request();
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSiteLicense_LCSAuthenticate_Request>
        PARSER = new com.google.protobuf.AbstractParser<CSiteLicense_LCSAuthenticate_Request>() {
      public CSiteLicense_LCSAuthenticate_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CSiteLicense_LCSAuthenticate_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSiteLicense_LCSAuthenticate_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSiteLicense_LCSAuthenticate_Request> getParserForType() {
      return PARSER;
    }

    public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSiteLicense_LCSAuthenticate_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSiteLicense_LCSAuthenticate_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 site_id = 1;</code>
     */
    boolean hasSiteId();
    /**
     * <code>optional uint64 site_id = 1;</code>
     */
    long getSiteId();

    /**
     * <code>optional string site_name = 2;</code>
     */
    boolean hasSiteName();
    /**
     * <code>optional string site_name = 2;</code>
     */
    java.lang.String getSiteName();
    /**
     * <code>optional string site_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getSiteNameBytes();

    /**
     * <code>optional bool new_session = 3;</code>
     */
    boolean hasNewSession();
    /**
     * <code>optional bool new_session = 3;</code>
     */
    boolean getNewSession();
  }
  /**
   * Protobuf type {@code CSiteLicense_LCSAuthenticate_Response}
   */
  public  static final class CSiteLicense_LCSAuthenticate_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSiteLicense_LCSAuthenticate_Response)
      CSiteLicense_LCSAuthenticate_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSiteLicense_LCSAuthenticate_Response.newBuilder() to construct.
    private CSiteLicense_LCSAuthenticate_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSiteLicense_LCSAuthenticate_Response() {
      siteId_ = 0L;
      siteName_ = "";
      newSession_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSiteLicense_LCSAuthenticate_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              siteId_ = input.readUInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              siteName_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              newSession_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAuthenticate_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAuthenticate_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response.Builder.class);
    }

    private int bitField0_;
    public static final int SITE_ID_FIELD_NUMBER = 1;
    private long siteId_;
    /**
     * <code>optional uint64 site_id = 1;</code>
     */
    public boolean hasSiteId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 site_id = 1;</code>
     */
    public long getSiteId() {
      return siteId_;
    }

    public static final int SITE_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object siteName_;
    /**
     * <code>optional string site_name = 2;</code>
     */
    public boolean hasSiteName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string site_name = 2;</code>
     */
    public java.lang.String getSiteName() {
      java.lang.Object ref = siteName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          siteName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string site_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSiteNameBytes() {
      java.lang.Object ref = siteName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        siteName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NEW_SESSION_FIELD_NUMBER = 3;
    private boolean newSession_;
    /**
     * <code>optional bool new_session = 3;</code>
     */
    public boolean hasNewSession() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool new_session = 3;</code>
     */
    public boolean getNewSession() {
      return newSession_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, siteId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, siteName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, newSession_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, siteId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, siteName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, newSession_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response)) {
        return super.equals(obj);
      }
      SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response other = (SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response) obj;

      boolean result = true;
      result = result && (hasSiteId() == other.hasSiteId());
      if (hasSiteId()) {
        result = result && (getSiteId()
            == other.getSiteId());
      }
      result = result && (hasSiteName() == other.hasSiteName());
      if (hasSiteName()) {
        result = result && getSiteName()
            .equals(other.getSiteName());
      }
      result = result && (hasNewSession() == other.hasNewSession());
      if (hasNewSession()) {
        result = result && (getNewSession()
            == other.getNewSession());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSiteId()) {
        hash = (37 * hash) + SITE_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSiteId());
      }
      if (hasSiteName()) {
        hash = (37 * hash) + SITE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getSiteName().hashCode();
      }
      if (hasNewSession()) {
        hash = (37 * hash) + NEW_SESSION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getNewSession());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSiteLicense_LCSAuthenticate_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSiteLicense_LCSAuthenticate_Response)
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAuthenticate_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAuthenticate_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response.Builder.class);
      }

      // Construct using SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        siteId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        siteName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        newSession_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAuthenticate_Response_descriptor;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response getDefaultInstanceForType() {
        return SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response.getDefaultInstance();
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response build() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response buildPartial() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response result = new SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.siteId_ = siteId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.siteName_ = siteName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.newSession_ = newSession_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response) {
          return mergeFrom((SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response other) {
        if (other == SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response.getDefaultInstance()) return this;
        if (other.hasSiteId()) {
          setSiteId(other.getSiteId());
        }
        if (other.hasSiteName()) {
          bitField0_ |= 0x00000002;
          siteName_ = other.siteName_;
          onChanged();
        }
        if (other.hasNewSession()) {
          setNewSession(other.getNewSession());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long siteId_ ;
      /**
       * <code>optional uint64 site_id = 1;</code>
       */
      public boolean hasSiteId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 site_id = 1;</code>
       */
      public long getSiteId() {
        return siteId_;
      }
      /**
       * <code>optional uint64 site_id = 1;</code>
       */
      public Builder setSiteId(long value) {
        bitField0_ |= 0x00000001;
        siteId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 site_id = 1;</code>
       */
      public Builder clearSiteId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        siteId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object siteName_ = "";
      /**
       * <code>optional string site_name = 2;</code>
       */
      public boolean hasSiteName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string site_name = 2;</code>
       */
      public java.lang.String getSiteName() {
        java.lang.Object ref = siteName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            siteName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string site_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSiteNameBytes() {
        java.lang.Object ref = siteName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          siteName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string site_name = 2;</code>
       */
      public Builder setSiteName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        siteName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string site_name = 2;</code>
       */
      public Builder clearSiteName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        siteName_ = getDefaultInstance().getSiteName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string site_name = 2;</code>
       */
      public Builder setSiteNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        siteName_ = value;
        onChanged();
        return this;
      }

      private boolean newSession_ ;
      /**
       * <code>optional bool new_session = 3;</code>
       */
      public boolean hasNewSession() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool new_session = 3;</code>
       */
      public boolean getNewSession() {
        return newSession_;
      }
      /**
       * <code>optional bool new_session = 3;</code>
       */
      public Builder setNewSession(boolean value) {
        bitField0_ |= 0x00000004;
        newSession_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool new_session = 3;</code>
       */
      public Builder clearNewSession() {
        bitField0_ = (bitField0_ & ~0x00000004);
        newSession_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSiteLicense_LCSAuthenticate_Response)
    }

    // @@protoc_insertion_point(class_scope:CSiteLicense_LCSAuthenticate_Response)
    private static final SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response();
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSiteLicense_LCSAuthenticate_Response>
        PARSER = new com.google.protobuf.AbstractParser<CSiteLicense_LCSAuthenticate_Response>() {
      public CSiteLicense_LCSAuthenticate_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CSiteLicense_LCSAuthenticate_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSiteLicense_LCSAuthenticate_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSiteLicense_LCSAuthenticate_Response> getParserForType() {
      return PARSER;
    }

    public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAuthenticate_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSiteLicense_LCSAssociateUser_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSiteLicense_LCSAssociateUser_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    boolean hasSteamid();
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    long getSteamid();

    /**
     * <code>optional fixed32 local_ip = 2;</code>
     */
    boolean hasLocalIp();
    /**
     * <code>optional fixed32 local_ip = 2;</code>
     */
    int getLocalIp();

    /**
     * <code>optional fixed64 instanceid = 3;</code>
     */
    boolean hasInstanceid();
    /**
     * <code>optional fixed64 instanceid = 3;</code>
     */
    long getInstanceid();
  }
  /**
   * Protobuf type {@code CSiteLicense_LCSAssociateUser_Request}
   */
  public  static final class CSiteLicense_LCSAssociateUser_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSiteLicense_LCSAssociateUser_Request)
      CSiteLicense_LCSAssociateUser_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSiteLicense_LCSAssociateUser_Request.newBuilder() to construct.
    private CSiteLicense_LCSAssociateUser_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSiteLicense_LCSAssociateUser_Request() {
      steamid_ = 0L;
      localIp_ = 0;
      instanceid_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSiteLicense_LCSAssociateUser_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              steamid_ = input.readFixed64();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              localIp_ = input.readFixed32();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              instanceid_ = input.readFixed64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAssociateUser_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAssociateUser_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request.Builder.class);
    }

    private int bitField0_;
    public static final int STEAMID_FIELD_NUMBER = 1;
    private long steamid_;
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public boolean hasSteamid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public long getSteamid() {
      return steamid_;
    }

    public static final int LOCAL_IP_FIELD_NUMBER = 2;
    private int localIp_;
    /**
     * <code>optional fixed32 local_ip = 2;</code>
     */
    public boolean hasLocalIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed32 local_ip = 2;</code>
     */
    public int getLocalIp() {
      return localIp_;
    }

    public static final int INSTANCEID_FIELD_NUMBER = 3;
    private long instanceid_;
    /**
     * <code>optional fixed64 instanceid = 3;</code>
     */
    public boolean hasInstanceid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional fixed64 instanceid = 3;</code>
     */
    public long getInstanceid() {
      return instanceid_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed32(2, localIp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFixed64(3, instanceid_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, localIp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, instanceid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request)) {
        return super.equals(obj);
      }
      SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request other = (SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request) obj;

      boolean result = true;
      result = result && (hasSteamid() == other.hasSteamid());
      if (hasSteamid()) {
        result = result && (getSteamid()
            == other.getSteamid());
      }
      result = result && (hasLocalIp() == other.hasLocalIp());
      if (hasLocalIp()) {
        result = result && (getLocalIp()
            == other.getLocalIp());
      }
      result = result && (hasInstanceid() == other.hasInstanceid());
      if (hasInstanceid()) {
        result = result && (getInstanceid()
            == other.getInstanceid());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSteamid()) {
        hash = (37 * hash) + STEAMID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSteamid());
      }
      if (hasLocalIp()) {
        hash = (37 * hash) + LOCAL_IP_FIELD_NUMBER;
        hash = (53 * hash) + getLocalIp();
      }
      if (hasInstanceid()) {
        hash = (37 * hash) + INSTANCEID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getInstanceid());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSiteLicense_LCSAssociateUser_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSiteLicense_LCSAssociateUser_Request)
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAssociateUser_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAssociateUser_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request.Builder.class);
      }

      // Construct using SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        steamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        localIp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        instanceid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAssociateUser_Request_descriptor;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request getDefaultInstanceForType() {
        return SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request.getDefaultInstance();
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request build() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request buildPartial() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request result = new SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.steamid_ = steamid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.localIp_ = localIp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.instanceid_ = instanceid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request) {
          return mergeFrom((SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request other) {
        if (other == SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request.getDefaultInstance()) return this;
        if (other.hasSteamid()) {
          setSteamid(other.getSteamid());
        }
        if (other.hasLocalIp()) {
          setLocalIp(other.getLocalIp());
        }
        if (other.hasInstanceid()) {
          setInstanceid(other.getInstanceid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long steamid_ ;
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public boolean hasSteamid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public long getSteamid() {
        return steamid_;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder setSteamid(long value) {
        bitField0_ |= 0x00000001;
        steamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder clearSteamid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamid_ = 0L;
        onChanged();
        return this;
      }

      private int localIp_ ;
      /**
       * <code>optional fixed32 local_ip = 2;</code>
       */
      public boolean hasLocalIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed32 local_ip = 2;</code>
       */
      public int getLocalIp() {
        return localIp_;
      }
      /**
       * <code>optional fixed32 local_ip = 2;</code>
       */
      public Builder setLocalIp(int value) {
        bitField0_ |= 0x00000002;
        localIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 local_ip = 2;</code>
       */
      public Builder clearLocalIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        localIp_ = 0;
        onChanged();
        return this;
      }

      private long instanceid_ ;
      /**
       * <code>optional fixed64 instanceid = 3;</code>
       */
      public boolean hasInstanceid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional fixed64 instanceid = 3;</code>
       */
      public long getInstanceid() {
        return instanceid_;
      }
      /**
       * <code>optional fixed64 instanceid = 3;</code>
       */
      public Builder setInstanceid(long value) {
        bitField0_ |= 0x00000004;
        instanceid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 instanceid = 3;</code>
       */
      public Builder clearInstanceid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        instanceid_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSiteLicense_LCSAssociateUser_Request)
    }

    // @@protoc_insertion_point(class_scope:CSiteLicense_LCSAssociateUser_Request)
    private static final SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request();
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSiteLicense_LCSAssociateUser_Request>
        PARSER = new com.google.protobuf.AbstractParser<CSiteLicense_LCSAssociateUser_Request>() {
      public CSiteLicense_LCSAssociateUser_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CSiteLicense_LCSAssociateUser_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSiteLicense_LCSAssociateUser_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSiteLicense_LCSAssociateUser_Request> getParserForType() {
      return PARSER;
    }

    public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSiteLicense_LCSAssociateUser_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSiteLicense_LCSAssociateUser_Response)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CSiteLicense_LCSAssociateUser_Response}
   */
  public  static final class CSiteLicense_LCSAssociateUser_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSiteLicense_LCSAssociateUser_Response)
      CSiteLicense_LCSAssociateUser_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSiteLicense_LCSAssociateUser_Response.newBuilder() to construct.
    private CSiteLicense_LCSAssociateUser_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSiteLicense_LCSAssociateUser_Response() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSiteLicense_LCSAssociateUser_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAssociateUser_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAssociateUser_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response)) {
        return super.equals(obj);
      }
      SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response other = (SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSiteLicense_LCSAssociateUser_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSiteLicense_LCSAssociateUser_Response)
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAssociateUser_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAssociateUser_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response.Builder.class);
      }

      // Construct using SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_LCSAssociateUser_Response_descriptor;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response getDefaultInstanceForType() {
        return SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response.getDefaultInstance();
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response build() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response buildPartial() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response result = new SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response) {
          return mergeFrom((SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response other) {
        if (other == SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSiteLicense_LCSAssociateUser_Response)
    }

    // @@protoc_insertion_point(class_scope:CSiteLicense_LCSAssociateUser_Response)
    private static final SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response();
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSiteLicense_LCSAssociateUser_Response>
        PARSER = new com.google.protobuf.AbstractParser<CSiteLicense_LCSAssociateUser_Response>() {
      public CSiteLicense_LCSAssociateUser_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CSiteLicense_LCSAssociateUser_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSiteLicense_LCSAssociateUser_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSiteLicense_LCSAssociateUser_Response> getParserForType() {
      return PARSER;
    }

    public SteammessagesSiteLicenseSteamclient.CSiteLicense_LCSAssociateUser_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSiteLicense_ClientSeatCheckout_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSiteLicense_ClientSeatCheckout_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    boolean hasSteamid();
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    long getSteamid();

    /**
     * <code>optional fixed64 instanceid = 2;</code>
     */
    boolean hasInstanceid();
    /**
     * <code>optional fixed64 instanceid = 2;</code>
     */
    long getInstanceid();

    /**
     * <code>optional uint32 appid = 3;</code>
     */
    boolean hasAppid();
    /**
     * <code>optional uint32 appid = 3;</code>
     */
    int getAppid();
  }
  /**
   * Protobuf type {@code CSiteLicense_ClientSeatCheckout_Request}
   */
  public  static final class CSiteLicense_ClientSeatCheckout_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSiteLicense_ClientSeatCheckout_Request)
      CSiteLicense_ClientSeatCheckout_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSiteLicense_ClientSeatCheckout_Request.newBuilder() to construct.
    private CSiteLicense_ClientSeatCheckout_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSiteLicense_ClientSeatCheckout_Request() {
      steamid_ = 0L;
      instanceid_ = 0L;
      appid_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSiteLicense_ClientSeatCheckout_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              steamid_ = input.readFixed64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              instanceid_ = input.readFixed64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              appid_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientSeatCheckout_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientSeatCheckout_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request.Builder.class);
    }

    private int bitField0_;
    public static final int STEAMID_FIELD_NUMBER = 1;
    private long steamid_;
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public boolean hasSteamid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public long getSteamid() {
      return steamid_;
    }

    public static final int INSTANCEID_FIELD_NUMBER = 2;
    private long instanceid_;
    /**
     * <code>optional fixed64 instanceid = 2;</code>
     */
    public boolean hasInstanceid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 instanceid = 2;</code>
     */
    public long getInstanceid() {
      return instanceid_;
    }

    public static final int APPID_FIELD_NUMBER = 3;
    private int appid_;
    /**
     * <code>optional uint32 appid = 3;</code>
     */
    public boolean hasAppid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 appid = 3;</code>
     */
    public int getAppid() {
      return appid_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, instanceid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, appid_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, instanceid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, appid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request)) {
        return super.equals(obj);
      }
      SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request other = (SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request) obj;

      boolean result = true;
      result = result && (hasSteamid() == other.hasSteamid());
      if (hasSteamid()) {
        result = result && (getSteamid()
            == other.getSteamid());
      }
      result = result && (hasInstanceid() == other.hasInstanceid());
      if (hasInstanceid()) {
        result = result && (getInstanceid()
            == other.getInstanceid());
      }
      result = result && (hasAppid() == other.hasAppid());
      if (hasAppid()) {
        result = result && (getAppid()
            == other.getAppid());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSteamid()) {
        hash = (37 * hash) + STEAMID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSteamid());
      }
      if (hasInstanceid()) {
        hash = (37 * hash) + INSTANCEID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getInstanceid());
      }
      if (hasAppid()) {
        hash = (37 * hash) + APPID_FIELD_NUMBER;
        hash = (53 * hash) + getAppid();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSiteLicense_ClientSeatCheckout_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSiteLicense_ClientSeatCheckout_Request)
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientSeatCheckout_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientSeatCheckout_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request.Builder.class);
      }

      // Construct using SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        steamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        instanceid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        appid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientSeatCheckout_Request_descriptor;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request getDefaultInstanceForType() {
        return SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request.getDefaultInstance();
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request build() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request buildPartial() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request result = new SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.steamid_ = steamid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.instanceid_ = instanceid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.appid_ = appid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request) {
          return mergeFrom((SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request other) {
        if (other == SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request.getDefaultInstance()) return this;
        if (other.hasSteamid()) {
          setSteamid(other.getSteamid());
        }
        if (other.hasInstanceid()) {
          setInstanceid(other.getInstanceid());
        }
        if (other.hasAppid()) {
          setAppid(other.getAppid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long steamid_ ;
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public boolean hasSteamid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public long getSteamid() {
        return steamid_;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder setSteamid(long value) {
        bitField0_ |= 0x00000001;
        steamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder clearSteamid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamid_ = 0L;
        onChanged();
        return this;
      }

      private long instanceid_ ;
      /**
       * <code>optional fixed64 instanceid = 2;</code>
       */
      public boolean hasInstanceid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 instanceid = 2;</code>
       */
      public long getInstanceid() {
        return instanceid_;
      }
      /**
       * <code>optional fixed64 instanceid = 2;</code>
       */
      public Builder setInstanceid(long value) {
        bitField0_ |= 0x00000002;
        instanceid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 instanceid = 2;</code>
       */
      public Builder clearInstanceid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        instanceid_ = 0L;
        onChanged();
        return this;
      }

      private int appid_ ;
      /**
       * <code>optional uint32 appid = 3;</code>
       */
      public boolean hasAppid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 appid = 3;</code>
       */
      public int getAppid() {
        return appid_;
      }
      /**
       * <code>optional uint32 appid = 3;</code>
       */
      public Builder setAppid(int value) {
        bitField0_ |= 0x00000004;
        appid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 appid = 3;</code>
       */
      public Builder clearAppid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        appid_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSiteLicense_ClientSeatCheckout_Request)
    }

    // @@protoc_insertion_point(class_scope:CSiteLicense_ClientSeatCheckout_Request)
    private static final SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request();
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSiteLicense_ClientSeatCheckout_Request>
        PARSER = new com.google.protobuf.AbstractParser<CSiteLicense_ClientSeatCheckout_Request>() {
      public CSiteLicense_ClientSeatCheckout_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CSiteLicense_ClientSeatCheckout_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSiteLicense_ClientSeatCheckout_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSiteLicense_ClientSeatCheckout_Request> getParserForType() {
      return PARSER;
    }

    public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSiteLicense_ClientSeatCheckout_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSiteLicense_ClientSeatCheckout_Response)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CSiteLicense_ClientSeatCheckout_Response}
   */
  public  static final class CSiteLicense_ClientSeatCheckout_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSiteLicense_ClientSeatCheckout_Response)
      CSiteLicense_ClientSeatCheckout_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSiteLicense_ClientSeatCheckout_Response.newBuilder() to construct.
    private CSiteLicense_ClientSeatCheckout_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSiteLicense_ClientSeatCheckout_Response() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSiteLicense_ClientSeatCheckout_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientSeatCheckout_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientSeatCheckout_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response)) {
        return super.equals(obj);
      }
      SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response other = (SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSiteLicense_ClientSeatCheckout_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSiteLicense_ClientSeatCheckout_Response)
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientSeatCheckout_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientSeatCheckout_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response.Builder.class);
      }

      // Construct using SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientSeatCheckout_Response_descriptor;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response getDefaultInstanceForType() {
        return SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response.getDefaultInstance();
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response build() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response buildPartial() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response result = new SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response) {
          return mergeFrom((SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response other) {
        if (other == SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSiteLicense_ClientSeatCheckout_Response)
    }

    // @@protoc_insertion_point(class_scope:CSiteLicense_ClientSeatCheckout_Response)
    private static final SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response();
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSiteLicense_ClientSeatCheckout_Response>
        PARSER = new com.google.protobuf.AbstractParser<CSiteLicense_ClientSeatCheckout_Response>() {
      public CSiteLicense_ClientSeatCheckout_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CSiteLicense_ClientSeatCheckout_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSiteLicense_ClientSeatCheckout_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSiteLicense_ClientSeatCheckout_Response> getParserForType() {
      return PARSER;
    }

    public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientSeatCheckout_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSiteLicense_ClientGetAvailableSeats_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSiteLicense_ClientGetAvailableSeats_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    boolean hasSteamid();
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    long getSteamid();

    /**
     * <code>optional fixed64 instanceid = 2;</code>
     */
    boolean hasInstanceid();
    /**
     * <code>optional fixed64 instanceid = 2;</code>
     */
    long getInstanceid();

    /**
     * <code>optional uint32 appid = 3;</code>
     */
    boolean hasAppid();
    /**
     * <code>optional uint32 appid = 3;</code>
     */
    int getAppid();
  }
  /**
   * Protobuf type {@code CSiteLicense_ClientGetAvailableSeats_Request}
   */
  public  static final class CSiteLicense_ClientGetAvailableSeats_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSiteLicense_ClientGetAvailableSeats_Request)
      CSiteLicense_ClientGetAvailableSeats_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSiteLicense_ClientGetAvailableSeats_Request.newBuilder() to construct.
    private CSiteLicense_ClientGetAvailableSeats_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSiteLicense_ClientGetAvailableSeats_Request() {
      steamid_ = 0L;
      instanceid_ = 0L;
      appid_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSiteLicense_ClientGetAvailableSeats_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              steamid_ = input.readFixed64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              instanceid_ = input.readFixed64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              appid_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientGetAvailableSeats_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientGetAvailableSeats_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request.Builder.class);
    }

    private int bitField0_;
    public static final int STEAMID_FIELD_NUMBER = 1;
    private long steamid_;
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public boolean hasSteamid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public long getSteamid() {
      return steamid_;
    }

    public static final int INSTANCEID_FIELD_NUMBER = 2;
    private long instanceid_;
    /**
     * <code>optional fixed64 instanceid = 2;</code>
     */
    public boolean hasInstanceid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 instanceid = 2;</code>
     */
    public long getInstanceid() {
      return instanceid_;
    }

    public static final int APPID_FIELD_NUMBER = 3;
    private int appid_;
    /**
     * <code>optional uint32 appid = 3;</code>
     */
    public boolean hasAppid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 appid = 3;</code>
     */
    public int getAppid() {
      return appid_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, instanceid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, appid_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, instanceid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, appid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request)) {
        return super.equals(obj);
      }
      SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request other = (SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request) obj;

      boolean result = true;
      result = result && (hasSteamid() == other.hasSteamid());
      if (hasSteamid()) {
        result = result && (getSteamid()
            == other.getSteamid());
      }
      result = result && (hasInstanceid() == other.hasInstanceid());
      if (hasInstanceid()) {
        result = result && (getInstanceid()
            == other.getInstanceid());
      }
      result = result && (hasAppid() == other.hasAppid());
      if (hasAppid()) {
        result = result && (getAppid()
            == other.getAppid());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSteamid()) {
        hash = (37 * hash) + STEAMID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSteamid());
      }
      if (hasInstanceid()) {
        hash = (37 * hash) + INSTANCEID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getInstanceid());
      }
      if (hasAppid()) {
        hash = (37 * hash) + APPID_FIELD_NUMBER;
        hash = (53 * hash) + getAppid();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSiteLicense_ClientGetAvailableSeats_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSiteLicense_ClientGetAvailableSeats_Request)
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientGetAvailableSeats_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientGetAvailableSeats_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request.Builder.class);
      }

      // Construct using SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        steamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        instanceid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        appid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientGetAvailableSeats_Request_descriptor;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request getDefaultInstanceForType() {
        return SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request.getDefaultInstance();
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request build() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request buildPartial() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request result = new SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.steamid_ = steamid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.instanceid_ = instanceid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.appid_ = appid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request) {
          return mergeFrom((SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request other) {
        if (other == SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request.getDefaultInstance()) return this;
        if (other.hasSteamid()) {
          setSteamid(other.getSteamid());
        }
        if (other.hasInstanceid()) {
          setInstanceid(other.getInstanceid());
        }
        if (other.hasAppid()) {
          setAppid(other.getAppid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long steamid_ ;
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public boolean hasSteamid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public long getSteamid() {
        return steamid_;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder setSteamid(long value) {
        bitField0_ |= 0x00000001;
        steamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder clearSteamid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamid_ = 0L;
        onChanged();
        return this;
      }

      private long instanceid_ ;
      /**
       * <code>optional fixed64 instanceid = 2;</code>
       */
      public boolean hasInstanceid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 instanceid = 2;</code>
       */
      public long getInstanceid() {
        return instanceid_;
      }
      /**
       * <code>optional fixed64 instanceid = 2;</code>
       */
      public Builder setInstanceid(long value) {
        bitField0_ |= 0x00000002;
        instanceid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 instanceid = 2;</code>
       */
      public Builder clearInstanceid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        instanceid_ = 0L;
        onChanged();
        return this;
      }

      private int appid_ ;
      /**
       * <code>optional uint32 appid = 3;</code>
       */
      public boolean hasAppid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 appid = 3;</code>
       */
      public int getAppid() {
        return appid_;
      }
      /**
       * <code>optional uint32 appid = 3;</code>
       */
      public Builder setAppid(int value) {
        bitField0_ |= 0x00000004;
        appid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 appid = 3;</code>
       */
      public Builder clearAppid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        appid_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSiteLicense_ClientGetAvailableSeats_Request)
    }

    // @@protoc_insertion_point(class_scope:CSiteLicense_ClientGetAvailableSeats_Request)
    private static final SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request();
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSiteLicense_ClientGetAvailableSeats_Request>
        PARSER = new com.google.protobuf.AbstractParser<CSiteLicense_ClientGetAvailableSeats_Request>() {
      public CSiteLicense_ClientGetAvailableSeats_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CSiteLicense_ClientGetAvailableSeats_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSiteLicense_ClientGetAvailableSeats_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSiteLicense_ClientGetAvailableSeats_Request> getParserForType() {
      return PARSER;
    }

    public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSiteLicense_ClientGetAvailableSeats_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSiteLicense_ClientGetAvailableSeats_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 available_seats = 1;</code>
     */
    boolean hasAvailableSeats();
    /**
     * <code>optional uint32 available_seats = 1;</code>
     */
    int getAvailableSeats();
  }
  /**
   * Protobuf type {@code CSiteLicense_ClientGetAvailableSeats_Response}
   */
  public  static final class CSiteLicense_ClientGetAvailableSeats_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSiteLicense_ClientGetAvailableSeats_Response)
      CSiteLicense_ClientGetAvailableSeats_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSiteLicense_ClientGetAvailableSeats_Response.newBuilder() to construct.
    private CSiteLicense_ClientGetAvailableSeats_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSiteLicense_ClientGetAvailableSeats_Response() {
      availableSeats_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSiteLicense_ClientGetAvailableSeats_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              availableSeats_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientGetAvailableSeats_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientGetAvailableSeats_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response.Builder.class);
    }

    private int bitField0_;
    public static final int AVAILABLE_SEATS_FIELD_NUMBER = 1;
    private int availableSeats_;
    /**
     * <code>optional uint32 available_seats = 1;</code>
     */
    public boolean hasAvailableSeats() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 available_seats = 1;</code>
     */
    public int getAvailableSeats() {
      return availableSeats_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, availableSeats_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, availableSeats_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response)) {
        return super.equals(obj);
      }
      SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response other = (SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response) obj;

      boolean result = true;
      result = result && (hasAvailableSeats() == other.hasAvailableSeats());
      if (hasAvailableSeats()) {
        result = result && (getAvailableSeats()
            == other.getAvailableSeats());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAvailableSeats()) {
        hash = (37 * hash) + AVAILABLE_SEATS_FIELD_NUMBER;
        hash = (53 * hash) + getAvailableSeats();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSiteLicense_ClientGetAvailableSeats_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSiteLicense_ClientGetAvailableSeats_Response)
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientGetAvailableSeats_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientGetAvailableSeats_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response.class, SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response.Builder.class);
      }

      // Construct using SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        availableSeats_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesSiteLicenseSteamclient.internal_static_CSiteLicense_ClientGetAvailableSeats_Response_descriptor;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response getDefaultInstanceForType() {
        return SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response.getDefaultInstance();
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response build() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response buildPartial() {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response result = new SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.availableSeats_ = availableSeats_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response) {
          return mergeFrom((SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response other) {
        if (other == SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response.getDefaultInstance()) return this;
        if (other.hasAvailableSeats()) {
          setAvailableSeats(other.getAvailableSeats());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int availableSeats_ ;
      /**
       * <code>optional uint32 available_seats = 1;</code>
       */
      public boolean hasAvailableSeats() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 available_seats = 1;</code>
       */
      public int getAvailableSeats() {
        return availableSeats_;
      }
      /**
       * <code>optional uint32 available_seats = 1;</code>
       */
      public Builder setAvailableSeats(int value) {
        bitField0_ |= 0x00000001;
        availableSeats_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 available_seats = 1;</code>
       */
      public Builder clearAvailableSeats() {
        bitField0_ = (bitField0_ & ~0x00000001);
        availableSeats_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSiteLicense_ClientGetAvailableSeats_Response)
    }

    // @@protoc_insertion_point(class_scope:CSiteLicense_ClientGetAvailableSeats_Response)
    private static final SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response();
    }

    public static SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSiteLicense_ClientGetAvailableSeats_Response>
        PARSER = new com.google.protobuf.AbstractParser<CSiteLicense_ClientGetAvailableSeats_Response>() {
      public CSiteLicense_ClientGetAvailableSeats_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CSiteLicense_ClientGetAvailableSeats_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSiteLicense_ClientGetAvailableSeats_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSiteLicense_ClientGetAvailableSeats_Response> getParserForType() {
      return PARSER;
    }

    public SteammessagesSiteLicenseSteamclient.CSiteLicense_ClientGetAvailableSeats_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSiteManagerClient_IncomingClient_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSiteManagerClient_IncomingClient_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSiteManagerClient_IncomingClient_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSiteManagerClient_IncomingClient_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSiteLicense_InitiateAssociation_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSiteLicense_InitiateAssociation_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSiteLicense_InitiateAssociation_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSiteLicense_InitiateAssociation_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSiteLicense_LCSAuthenticate_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSiteLicense_LCSAuthenticate_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSiteLicense_LCSAuthenticate_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSiteLicense_LCSAuthenticate_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSiteLicense_LCSAssociateUser_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSiteLicense_LCSAssociateUser_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSiteLicense_LCSAssociateUser_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSiteLicense_LCSAssociateUser_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSiteLicense_ClientSeatCheckout_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSiteLicense_ClientSeatCheckout_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSiteLicense_ClientSeatCheckout_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSiteLicense_ClientSeatCheckout_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSiteLicense_ClientGetAvailableSeats_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSiteLicense_ClientGetAvailableSeats_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSiteLicense_ClientGetAvailableSeats_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSiteLicense_ClientGetAvailableSeats_Response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,steammessages_site_license.steamclient" +
      ".proto\032,steammessages_unified_base.steam" +
      "client.proto\"\215\001\n)CSiteManagerClient_Inco" +
      "mingClient_Request\022\027\n\017site_instanceid\030\001 " +
      "\001(\006\022\026\n\016client_steamid\030\002 \001(\006\022\027\n\017client_lo" +
      "cal_ip\030\003 \001(\007\022\026\n\016connection_key\030\004 \001(\014\",\n*" +
      "CSiteManagerClient_IncomingClient_Respon" +
      "se\"r\n(CSiteLicense_InitiateAssociation_R" +
      "equest\022\024\n\014site_steamid\030\001 \001(\006\022\027\n\017site_ins" +
      "tanceid\030\002 \001(\006\022\027\n\017client_local_ip\030\003 \001(\007\"C",
      "\n)CSiteLicense_InitiateAssociation_Respo" +
      "nse\022\026\n\016connection_key\030\001 \001(\014\":\n$CSiteLice" +
      "nse_LCSAuthenticate_Request\022\022\n\ninstancei" +
      "d\030\001 \001(\006\"`\n%CSiteLicense_LCSAuthenticate_" +
      "Response\022\017\n\007site_id\030\001 \001(\004\022\021\n\tsite_name\030\002" +
      " \001(\t\022\023\n\013new_session\030\003 \001(\010\"^\n%CSiteLicens" +
      "e_LCSAssociateUser_Request\022\017\n\007steamid\030\001 " +
      "\001(\006\022\020\n\010local_ip\030\002 \001(\007\022\022\n\ninstanceid\030\003 \001(" +
      "\006\"(\n&CSiteLicense_LCSAssociateUser_Respo" +
      "nse\"]\n\'CSiteLicense_ClientSeatCheckout_R",
      "equest\022\017\n\007steamid\030\001 \001(\006\022\022\n\ninstanceid\030\002 " +
      "\001(\006\022\r\n\005appid\030\003 \001(\r\"*\n(CSiteLicense_Clien" +
      "tSeatCheckout_Response\"b\n,CSiteLicense_C" +
      "lientGetAvailableSeats_Request\022\017\n\007steami" +
      "d\030\001 \001(\006\022\022\n\ninstanceid\030\002 \001(\006\022\r\n\005appid\030\003 \001" +
      "(\r\"H\n-CSiteLicense_ClientGetAvailableSea" +
      "ts_Response\022\027\n\017available_seats\030\001 \001(\r2\360\001\n" +
      "\021SiteManagerClient\022\257\001\n\016IncomingClient\022*." +
      "CSiteManagerClient_IncomingClient_Reques" +
      "t\032+.CSiteManagerClient_IncomingClient_Re",
      "sponse\"D\202\265\030@Rack informing site manager " +
      "of new inbound client PSK connection\032)\202\265" +
      "\030!Local site manager client service\300\265\030\0022" +
      "\325\006\n\013SiteLicense\022\244\001\n\023InitiateAssociation\022" +
      ").CSiteLicense_InitiateAssociation_Reque" +
      "st\032*.CSiteLicense_InitiateAssociation_Re" +
      "sponse\"6\202\265\0302Client is requesting conneti" +
      "on info for local site\022\206\001\n\017LCSAuthentica" +
      "te\022%.CSiteLicense_LCSAuthenticate_Reques" +
      "t\032&.CSiteLicense_LCSAuthenticate_Respons",
      "e\"$\202\265\030 Local cafe server authentication\022" +
      "\235\001\n\020LCSAssociateUser\022&.CSiteLicense_LCSA" +
      "ssociateUser_Request\032\'.CSiteLicense_LCSA" +
      "ssociateUser_Response\"8\202\265\0304Local cafe se" +
      "rver wants to grant user access to site\022" +
      "\236\001\n\022ClientSeatCheckout\022(.CSiteLicense_Cl" +
      "ientSeatCheckout_Request\032).CSiteLicense_" +
      "ClientSeatCheckout_Response\"3\202\265\030/Client " +
      "is requesting use of a site license seat" +
      "\022\272\001\n\027ClientGetAvailableSeats\022-.CSiteLice",
      "nse_ClientGetAvailableSeats_Request\032..CS" +
      "iteLicense_ClientGetAvailableSeats_Respo" +
      "nse\"@\202\265\030<Client is requesting the number" +
      " of currently available seats\032\030\202\265\030\024Site " +
      "License serviceB\003\200\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          SteammessagesUnifiedBaseSteamclient.getDescriptor(),
        }, assigner);
    internal_static_CSiteManagerClient_IncomingClient_Request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CSiteManagerClient_IncomingClient_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSiteManagerClient_IncomingClient_Request_descriptor,
        new java.lang.String[] { "SiteInstanceid", "ClientSteamid", "ClientLocalIp", "ConnectionKey", });
    internal_static_CSiteManagerClient_IncomingClient_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CSiteManagerClient_IncomingClient_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSiteManagerClient_IncomingClient_Response_descriptor,
        new java.lang.String[] { });
    internal_static_CSiteLicense_InitiateAssociation_Request_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CSiteLicense_InitiateAssociation_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSiteLicense_InitiateAssociation_Request_descriptor,
        new java.lang.String[] { "SiteSteamid", "SiteInstanceid", "ClientLocalIp", });
    internal_static_CSiteLicense_InitiateAssociation_Response_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CSiteLicense_InitiateAssociation_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSiteLicense_InitiateAssociation_Response_descriptor,
        new java.lang.String[] { "ConnectionKey", });
    internal_static_CSiteLicense_LCSAuthenticate_Request_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CSiteLicense_LCSAuthenticate_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSiteLicense_LCSAuthenticate_Request_descriptor,
        new java.lang.String[] { "Instanceid", });
    internal_static_CSiteLicense_LCSAuthenticate_Response_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CSiteLicense_LCSAuthenticate_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSiteLicense_LCSAuthenticate_Response_descriptor,
        new java.lang.String[] { "SiteId", "SiteName", "NewSession", });
    internal_static_CSiteLicense_LCSAssociateUser_Request_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_CSiteLicense_LCSAssociateUser_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSiteLicense_LCSAssociateUser_Request_descriptor,
        new java.lang.String[] { "Steamid", "LocalIp", "Instanceid", });
    internal_static_CSiteLicense_LCSAssociateUser_Response_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CSiteLicense_LCSAssociateUser_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSiteLicense_LCSAssociateUser_Response_descriptor,
        new java.lang.String[] { });
    internal_static_CSiteLicense_ClientSeatCheckout_Request_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CSiteLicense_ClientSeatCheckout_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSiteLicense_ClientSeatCheckout_Request_descriptor,
        new java.lang.String[] { "Steamid", "Instanceid", "Appid", });
    internal_static_CSiteLicense_ClientSeatCheckout_Response_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CSiteLicense_ClientSeatCheckout_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSiteLicense_ClientSeatCheckout_Response_descriptor,
        new java.lang.String[] { });
    internal_static_CSiteLicense_ClientGetAvailableSeats_Request_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_CSiteLicense_ClientGetAvailableSeats_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSiteLicense_ClientGetAvailableSeats_Request_descriptor,
        new java.lang.String[] { "Steamid", "Instanceid", "Appid", });
    internal_static_CSiteLicense_ClientGetAvailableSeats_Response_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_CSiteLicense_ClientGetAvailableSeats_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSiteLicense_ClientGetAvailableSeats_Response_descriptor,
        new java.lang.String[] { "AvailableSeats", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.serviceDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.serviceExecutionSite);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    SteammessagesUnifiedBaseSteamclient.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
