// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_hiddevices.proto
package com.jsteamkit.internals.proto;

public final class SteammessagesHiddevices {
  private SteammessagesHiddevices() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code EHIDDeviceLocation}
   */
  public enum EHIDDeviceLocation
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EDeviceLocationLocal = 0;</code>
     */
    k_EDeviceLocationLocal(0),
    /**
     * <code>k_EDeviceLocationRemote = 2;</code>
     */
    k_EDeviceLocationRemote(2),
    /**
     * <code>k_EDeviceLocationAny = 3;</code>
     */
    k_EDeviceLocationAny(3),
    ;

    /**
     * <code>k_EDeviceLocationLocal = 0;</code>
     */
    public static final int k_EDeviceLocationLocal_VALUE = 0;
    /**
     * <code>k_EDeviceLocationRemote = 2;</code>
     */
    public static final int k_EDeviceLocationRemote_VALUE = 2;
    /**
     * <code>k_EDeviceLocationAny = 3;</code>
     */
    public static final int k_EDeviceLocationAny_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EHIDDeviceLocation valueOf(int value) {
      return forNumber(value);
    }

    public static EHIDDeviceLocation forNumber(int value) {
      switch (value) {
        case 0: return k_EDeviceLocationLocal;
        case 2: return k_EDeviceLocationRemote;
        case 3: return k_EDeviceLocationAny;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EHIDDeviceLocation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EHIDDeviceLocation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EHIDDeviceLocation>() {
            public EHIDDeviceLocation findValueByNumber(int number) {
              return EHIDDeviceLocation.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return SteammessagesHiddevices.getDescriptor().getEnumTypes().get(0);
    }

    private static final EHIDDeviceLocation[] VALUES = values();

    public static EHIDDeviceLocation valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EHIDDeviceLocation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EHIDDeviceLocation)
  }

  /**
   * Protobuf enum {@code EHIDDeviceDisconnectMethod}
   */
  public enum EHIDDeviceDisconnectMethod
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EDeviceDisconnectMethodUnknown = 0;</code>
     */
    k_EDeviceDisconnectMethodUnknown(0),
    /**
     * <code>k_EDeviceDisconnectMethodBluetooth = 1;</code>
     */
    k_EDeviceDisconnectMethodBluetooth(1),
    /**
     * <code>k_EDeviceDisconnectMethodFeatureReport = 2;</code>
     */
    k_EDeviceDisconnectMethodFeatureReport(2),
    ;

    /**
     * <code>k_EDeviceDisconnectMethodUnknown = 0;</code>
     */
    public static final int k_EDeviceDisconnectMethodUnknown_VALUE = 0;
    /**
     * <code>k_EDeviceDisconnectMethodBluetooth = 1;</code>
     */
    public static final int k_EDeviceDisconnectMethodBluetooth_VALUE = 1;
    /**
     * <code>k_EDeviceDisconnectMethodFeatureReport = 2;</code>
     */
    public static final int k_EDeviceDisconnectMethodFeatureReport_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EHIDDeviceDisconnectMethod valueOf(int value) {
      return forNumber(value);
    }

    public static EHIDDeviceDisconnectMethod forNumber(int value) {
      switch (value) {
        case 0: return k_EDeviceDisconnectMethodUnknown;
        case 1: return k_EDeviceDisconnectMethodBluetooth;
        case 2: return k_EDeviceDisconnectMethodFeatureReport;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EHIDDeviceDisconnectMethod>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EHIDDeviceDisconnectMethod> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EHIDDeviceDisconnectMethod>() {
            public EHIDDeviceDisconnectMethod findValueByNumber(int number) {
              return EHIDDeviceDisconnectMethod.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return SteammessagesHiddevices.getDescriptor().getEnumTypes().get(1);
    }

    private static final EHIDDeviceDisconnectMethod[] VALUES = values();

    public static EHIDDeviceDisconnectMethod valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EHIDDeviceDisconnectMethod(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EHIDDeviceDisconnectMethod)
  }

  public interface CHIDDeviceInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CHIDDeviceInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .EHIDDeviceLocation location = 1 [default = k_EDeviceLocationLocal];</code>
     */
    boolean hasLocation();
    /**
     * <code>optional .EHIDDeviceLocation location = 1 [default = k_EDeviceLocationLocal];</code>
     */
    SteammessagesHiddevices.EHIDDeviceLocation getLocation();

    /**
     * <code>optional string path = 2;</code>
     */
    boolean hasPath();
    /**
     * <code>optional string path = 2;</code>
     */
    java.lang.String getPath();
    /**
     * <code>optional string path = 2;</code>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <code>optional uint32 vendor_id = 3;</code>
     */
    boolean hasVendorId();
    /**
     * <code>optional uint32 vendor_id = 3;</code>
     */
    int getVendorId();

    /**
     * <code>optional uint32 product_id = 4;</code>
     */
    boolean hasProductId();
    /**
     * <code>optional uint32 product_id = 4;</code>
     */
    int getProductId();

    /**
     * <code>optional string serial_number = 5;</code>
     */
    boolean hasSerialNumber();
    /**
     * <code>optional string serial_number = 5;</code>
     */
    java.lang.String getSerialNumber();
    /**
     * <code>optional string serial_number = 5;</code>
     */
    com.google.protobuf.ByteString
        getSerialNumberBytes();

    /**
     * <code>optional uint32 release_number = 6;</code>
     */
    boolean hasReleaseNumber();
    /**
     * <code>optional uint32 release_number = 6;</code>
     */
    int getReleaseNumber();

    /**
     * <code>optional string manufacturer_string = 7;</code>
     */
    boolean hasManufacturerString();
    /**
     * <code>optional string manufacturer_string = 7;</code>
     */
    java.lang.String getManufacturerString();
    /**
     * <code>optional string manufacturer_string = 7;</code>
     */
    com.google.protobuf.ByteString
        getManufacturerStringBytes();

    /**
     * <code>optional string product_string = 8;</code>
     */
    boolean hasProductString();
    /**
     * <code>optional string product_string = 8;</code>
     */
    java.lang.String getProductString();
    /**
     * <code>optional string product_string = 8;</code>
     */
    com.google.protobuf.ByteString
        getProductStringBytes();

    /**
     * <code>optional uint32 usage_page = 9;</code>
     */
    boolean hasUsagePage();
    /**
     * <code>optional uint32 usage_page = 9;</code>
     */
    int getUsagePage();

    /**
     * <code>optional uint32 usage = 10;</code>
     */
    boolean hasUsage();
    /**
     * <code>optional uint32 usage = 10;</code>
     */
    int getUsage();

    /**
     * <code>optional int32 interface_number = 11 [default = -1];</code>
     */
    boolean hasInterfaceNumber();
    /**
     * <code>optional int32 interface_number = 11 [default = -1];</code>
     */
    int getInterfaceNumber();

    /**
     * <code>optional int32 ostype = 12 [default = -1];</code>
     */
    boolean hasOstype();
    /**
     * <code>optional int32 ostype = 12 [default = -1];</code>
     */
    int getOstype();

    /**
     * <code>optional bool is_generic_gamepad = 13;</code>
     */
    boolean hasIsGenericGamepad();
    /**
     * <code>optional bool is_generic_gamepad = 13;</code>
     */
    boolean getIsGenericGamepad();

    /**
     * <code>optional bool is_generic_joystick = 14;</code>
     */
    boolean hasIsGenericJoystick();
    /**
     * <code>optional bool is_generic_joystick = 14;</code>
     */
    boolean getIsGenericJoystick();
  }
  /**
   * Protobuf type {@code CHIDDeviceInfo}
   */
  public  static final class CHIDDeviceInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CHIDDeviceInfo)
      CHIDDeviceInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CHIDDeviceInfo.newBuilder() to construct.
    private CHIDDeviceInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CHIDDeviceInfo() {
      location_ = 0;
      path_ = "";
      vendorId_ = 0;
      productId_ = 0;
      serialNumber_ = "";
      releaseNumber_ = 0;
      manufacturerString_ = "";
      productString_ = "";
      usagePage_ = 0;
      usage_ = 0;
      interfaceNumber_ = -1;
      ostype_ = -1;
      isGenericGamepad_ = false;
      isGenericJoystick_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CHIDDeviceInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              SteammessagesHiddevices.EHIDDeviceLocation value = SteammessagesHiddevices.EHIDDeviceLocation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                location_ = rawValue;
              }
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              path_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              vendorId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              productId_ = input.readUInt32();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              serialNumber_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              releaseNumber_ = input.readUInt32();
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              manufacturerString_ = bs;
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              productString_ = bs;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              usagePage_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              usage_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              interfaceNumber_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              ostype_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              isGenericGamepad_ = input.readBool();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              isGenericJoystick_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesHiddevices.internal_static_CHIDDeviceInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesHiddevices.internal_static_CHIDDeviceInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesHiddevices.CHIDDeviceInfo.class, SteammessagesHiddevices.CHIDDeviceInfo.Builder.class);
    }

    private int bitField0_;
    public static final int LOCATION_FIELD_NUMBER = 1;
    private int location_;
    /**
     * <code>optional .EHIDDeviceLocation location = 1 [default = k_EDeviceLocationLocal];</code>
     */
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .EHIDDeviceLocation location = 1 [default = k_EDeviceLocationLocal];</code>
     */
    public SteammessagesHiddevices.EHIDDeviceLocation getLocation() {
      SteammessagesHiddevices.EHIDDeviceLocation result = SteammessagesHiddevices.EHIDDeviceLocation.valueOf(location_);
      return result == null ? SteammessagesHiddevices.EHIDDeviceLocation.k_EDeviceLocationLocal : result;
    }

    public static final int PATH_FIELD_NUMBER = 2;
    private volatile java.lang.Object path_;
    /**
     * <code>optional string path = 2;</code>
     */
    public boolean hasPath() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string path = 2;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          path_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string path = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VENDOR_ID_FIELD_NUMBER = 3;
    private int vendorId_;
    /**
     * <code>optional uint32 vendor_id = 3;</code>
     */
    public boolean hasVendorId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 vendor_id = 3;</code>
     */
    public int getVendorId() {
      return vendorId_;
    }

    public static final int PRODUCT_ID_FIELD_NUMBER = 4;
    private int productId_;
    /**
     * <code>optional uint32 product_id = 4;</code>
     */
    public boolean hasProductId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 product_id = 4;</code>
     */
    public int getProductId() {
      return productId_;
    }

    public static final int SERIAL_NUMBER_FIELD_NUMBER = 5;
    private volatile java.lang.Object serialNumber_;
    /**
     * <code>optional string serial_number = 5;</code>
     */
    public boolean hasSerialNumber() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string serial_number = 5;</code>
     */
    public java.lang.String getSerialNumber() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serialNumber_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string serial_number = 5;</code>
     */
    public com.google.protobuf.ByteString
        getSerialNumberBytes() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serialNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RELEASE_NUMBER_FIELD_NUMBER = 6;
    private int releaseNumber_;
    /**
     * <code>optional uint32 release_number = 6;</code>
     */
    public boolean hasReleaseNumber() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 release_number = 6;</code>
     */
    public int getReleaseNumber() {
      return releaseNumber_;
    }

    public static final int MANUFACTURER_STRING_FIELD_NUMBER = 7;
    private volatile java.lang.Object manufacturerString_;
    /**
     * <code>optional string manufacturer_string = 7;</code>
     */
    public boolean hasManufacturerString() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string manufacturer_string = 7;</code>
     */
    public java.lang.String getManufacturerString() {
      java.lang.Object ref = manufacturerString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          manufacturerString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string manufacturer_string = 7;</code>
     */
    public com.google.protobuf.ByteString
        getManufacturerStringBytes() {
      java.lang.Object ref = manufacturerString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        manufacturerString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRODUCT_STRING_FIELD_NUMBER = 8;
    private volatile java.lang.Object productString_;
    /**
     * <code>optional string product_string = 8;</code>
     */
    public boolean hasProductString() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string product_string = 8;</code>
     */
    public java.lang.String getProductString() {
      java.lang.Object ref = productString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          productString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string product_string = 8;</code>
     */
    public com.google.protobuf.ByteString
        getProductStringBytes() {
      java.lang.Object ref = productString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        productString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USAGE_PAGE_FIELD_NUMBER = 9;
    private int usagePage_;
    /**
     * <code>optional uint32 usage_page = 9;</code>
     */
    public boolean hasUsagePage() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 usage_page = 9;</code>
     */
    public int getUsagePage() {
      return usagePage_;
    }

    public static final int USAGE_FIELD_NUMBER = 10;
    private int usage_;
    /**
     * <code>optional uint32 usage = 10;</code>
     */
    public boolean hasUsage() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 usage = 10;</code>
     */
    public int getUsage() {
      return usage_;
    }

    public static final int INTERFACE_NUMBER_FIELD_NUMBER = 11;
    private int interfaceNumber_;
    /**
     * <code>optional int32 interface_number = 11 [default = -1];</code>
     */
    public boolean hasInterfaceNumber() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 interface_number = 11 [default = -1];</code>
     */
    public int getInterfaceNumber() {
      return interfaceNumber_;
    }

    public static final int OSTYPE_FIELD_NUMBER = 12;
    private int ostype_;
    /**
     * <code>optional int32 ostype = 12 [default = -1];</code>
     */
    public boolean hasOstype() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 ostype = 12 [default = -1];</code>
     */
    public int getOstype() {
      return ostype_;
    }

    public static final int IS_GENERIC_GAMEPAD_FIELD_NUMBER = 13;
    private boolean isGenericGamepad_;
    /**
     * <code>optional bool is_generic_gamepad = 13;</code>
     */
    public boolean hasIsGenericGamepad() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool is_generic_gamepad = 13;</code>
     */
    public boolean getIsGenericGamepad() {
      return isGenericGamepad_;
    }

    public static final int IS_GENERIC_JOYSTICK_FIELD_NUMBER = 14;
    private boolean isGenericJoystick_;
    /**
     * <code>optional bool is_generic_joystick = 14;</code>
     */
    public boolean hasIsGenericJoystick() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bool is_generic_joystick = 14;</code>
     */
    public boolean getIsGenericJoystick() {
      return isGenericJoystick_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, location_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, path_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, vendorId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, productId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, serialNumber_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, releaseNumber_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, manufacturerString_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, productString_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, usagePage_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, usage_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, interfaceNumber_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, ostype_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(13, isGenericGamepad_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(14, isGenericJoystick_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, location_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, path_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, vendorId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, productId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, serialNumber_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, releaseNumber_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, manufacturerString_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, productString_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, usagePage_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, usage_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, interfaceNumber_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, ostype_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, isGenericGamepad_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, isGenericJoystick_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesHiddevices.CHIDDeviceInfo)) {
        return super.equals(obj);
      }
      SteammessagesHiddevices.CHIDDeviceInfo other = (SteammessagesHiddevices.CHIDDeviceInfo) obj;

      boolean result = true;
      result = result && (hasLocation() == other.hasLocation());
      if (hasLocation()) {
        result = result && location_ == other.location_;
      }
      result = result && (hasPath() == other.hasPath());
      if (hasPath()) {
        result = result && getPath()
            .equals(other.getPath());
      }
      result = result && (hasVendorId() == other.hasVendorId());
      if (hasVendorId()) {
        result = result && (getVendorId()
            == other.getVendorId());
      }
      result = result && (hasProductId() == other.hasProductId());
      if (hasProductId()) {
        result = result && (getProductId()
            == other.getProductId());
      }
      result = result && (hasSerialNumber() == other.hasSerialNumber());
      if (hasSerialNumber()) {
        result = result && getSerialNumber()
            .equals(other.getSerialNumber());
      }
      result = result && (hasReleaseNumber() == other.hasReleaseNumber());
      if (hasReleaseNumber()) {
        result = result && (getReleaseNumber()
            == other.getReleaseNumber());
      }
      result = result && (hasManufacturerString() == other.hasManufacturerString());
      if (hasManufacturerString()) {
        result = result && getManufacturerString()
            .equals(other.getManufacturerString());
      }
      result = result && (hasProductString() == other.hasProductString());
      if (hasProductString()) {
        result = result && getProductString()
            .equals(other.getProductString());
      }
      result = result && (hasUsagePage() == other.hasUsagePage());
      if (hasUsagePage()) {
        result = result && (getUsagePage()
            == other.getUsagePage());
      }
      result = result && (hasUsage() == other.hasUsage());
      if (hasUsage()) {
        result = result && (getUsage()
            == other.getUsage());
      }
      result = result && (hasInterfaceNumber() == other.hasInterfaceNumber());
      if (hasInterfaceNumber()) {
        result = result && (getInterfaceNumber()
            == other.getInterfaceNumber());
      }
      result = result && (hasOstype() == other.hasOstype());
      if (hasOstype()) {
        result = result && (getOstype()
            == other.getOstype());
      }
      result = result && (hasIsGenericGamepad() == other.hasIsGenericGamepad());
      if (hasIsGenericGamepad()) {
        result = result && (getIsGenericGamepad()
            == other.getIsGenericGamepad());
      }
      result = result && (hasIsGenericJoystick() == other.hasIsGenericJoystick());
      if (hasIsGenericJoystick()) {
        result = result && (getIsGenericJoystick()
            == other.getIsGenericJoystick());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLocation()) {
        hash = (37 * hash) + LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + location_;
      }
      if (hasPath()) {
        hash = (37 * hash) + PATH_FIELD_NUMBER;
        hash = (53 * hash) + getPath().hashCode();
      }
      if (hasVendorId()) {
        hash = (37 * hash) + VENDOR_ID_FIELD_NUMBER;
        hash = (53 * hash) + getVendorId();
      }
      if (hasProductId()) {
        hash = (37 * hash) + PRODUCT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getProductId();
      }
      if (hasSerialNumber()) {
        hash = (37 * hash) + SERIAL_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSerialNumber().hashCode();
      }
      if (hasReleaseNumber()) {
        hash = (37 * hash) + RELEASE_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getReleaseNumber();
      }
      if (hasManufacturerString()) {
        hash = (37 * hash) + MANUFACTURER_STRING_FIELD_NUMBER;
        hash = (53 * hash) + getManufacturerString().hashCode();
      }
      if (hasProductString()) {
        hash = (37 * hash) + PRODUCT_STRING_FIELD_NUMBER;
        hash = (53 * hash) + getProductString().hashCode();
      }
      if (hasUsagePage()) {
        hash = (37 * hash) + USAGE_PAGE_FIELD_NUMBER;
        hash = (53 * hash) + getUsagePage();
      }
      if (hasUsage()) {
        hash = (37 * hash) + USAGE_FIELD_NUMBER;
        hash = (53 * hash) + getUsage();
      }
      if (hasInterfaceNumber()) {
        hash = (37 * hash) + INTERFACE_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getInterfaceNumber();
      }
      if (hasOstype()) {
        hash = (37 * hash) + OSTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getOstype();
      }
      if (hasIsGenericGamepad()) {
        hash = (37 * hash) + IS_GENERIC_GAMEPAD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsGenericGamepad());
      }
      if (hasIsGenericJoystick()) {
        hash = (37 * hash) + IS_GENERIC_JOYSTICK_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsGenericJoystick());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesHiddevices.CHIDDeviceInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesHiddevices.CHIDDeviceInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDDeviceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesHiddevices.CHIDDeviceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDDeviceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesHiddevices.CHIDDeviceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDDeviceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesHiddevices.CHIDDeviceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDDeviceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesHiddevices.CHIDDeviceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDDeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesHiddevices.CHIDDeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesHiddevices.CHIDDeviceInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CHIDDeviceInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CHIDDeviceInfo)
        SteammessagesHiddevices.CHIDDeviceInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDDeviceInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDDeviceInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDDeviceInfo.class, SteammessagesHiddevices.CHIDDeviceInfo.Builder.class);
      }

      // Construct using SteammessagesHiddevices.CHIDDeviceInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        location_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        path_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        vendorId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        productId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        serialNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        releaseNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        manufacturerString_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        productString_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        usagePage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        usage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        interfaceNumber_ = -1;
        bitField0_ = (bitField0_ & ~0x00000400);
        ostype_ = -1;
        bitField0_ = (bitField0_ & ~0x00000800);
        isGenericGamepad_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        isGenericJoystick_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesHiddevices.internal_static_CHIDDeviceInfo_descriptor;
      }

      public SteammessagesHiddevices.CHIDDeviceInfo getDefaultInstanceForType() {
        return SteammessagesHiddevices.CHIDDeviceInfo.getDefaultInstance();
      }

      public SteammessagesHiddevices.CHIDDeviceInfo build() {
        SteammessagesHiddevices.CHIDDeviceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesHiddevices.CHIDDeviceInfo buildPartial() {
        SteammessagesHiddevices.CHIDDeviceInfo result = new SteammessagesHiddevices.CHIDDeviceInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.location_ = location_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.path_ = path_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.vendorId_ = vendorId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.productId_ = productId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.serialNumber_ = serialNumber_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.releaseNumber_ = releaseNumber_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.manufacturerString_ = manufacturerString_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.productString_ = productString_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.usagePage_ = usagePage_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.usage_ = usage_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.interfaceNumber_ = interfaceNumber_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.ostype_ = ostype_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.isGenericGamepad_ = isGenericGamepad_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.isGenericJoystick_ = isGenericJoystick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesHiddevices.CHIDDeviceInfo) {
          return mergeFrom((SteammessagesHiddevices.CHIDDeviceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesHiddevices.CHIDDeviceInfo other) {
        if (other == SteammessagesHiddevices.CHIDDeviceInfo.getDefaultInstance()) return this;
        if (other.hasLocation()) {
          setLocation(other.getLocation());
        }
        if (other.hasPath()) {
          bitField0_ |= 0x00000002;
          path_ = other.path_;
          onChanged();
        }
        if (other.hasVendorId()) {
          setVendorId(other.getVendorId());
        }
        if (other.hasProductId()) {
          setProductId(other.getProductId());
        }
        if (other.hasSerialNumber()) {
          bitField0_ |= 0x00000010;
          serialNumber_ = other.serialNumber_;
          onChanged();
        }
        if (other.hasReleaseNumber()) {
          setReleaseNumber(other.getReleaseNumber());
        }
        if (other.hasManufacturerString()) {
          bitField0_ |= 0x00000040;
          manufacturerString_ = other.manufacturerString_;
          onChanged();
        }
        if (other.hasProductString()) {
          bitField0_ |= 0x00000080;
          productString_ = other.productString_;
          onChanged();
        }
        if (other.hasUsagePage()) {
          setUsagePage(other.getUsagePage());
        }
        if (other.hasUsage()) {
          setUsage(other.getUsage());
        }
        if (other.hasInterfaceNumber()) {
          setInterfaceNumber(other.getInterfaceNumber());
        }
        if (other.hasOstype()) {
          setOstype(other.getOstype());
        }
        if (other.hasIsGenericGamepad()) {
          setIsGenericGamepad(other.getIsGenericGamepad());
        }
        if (other.hasIsGenericJoystick()) {
          setIsGenericJoystick(other.getIsGenericJoystick());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesHiddevices.CHIDDeviceInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesHiddevices.CHIDDeviceInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int location_ = 0;
      /**
       * <code>optional .EHIDDeviceLocation location = 1 [default = k_EDeviceLocationLocal];</code>
       */
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .EHIDDeviceLocation location = 1 [default = k_EDeviceLocationLocal];</code>
       */
      public SteammessagesHiddevices.EHIDDeviceLocation getLocation() {
        SteammessagesHiddevices.EHIDDeviceLocation result = SteammessagesHiddevices.EHIDDeviceLocation.valueOf(location_);
        return result == null ? SteammessagesHiddevices.EHIDDeviceLocation.k_EDeviceLocationLocal : result;
      }
      /**
       * <code>optional .EHIDDeviceLocation location = 1 [default = k_EDeviceLocationLocal];</code>
       */
      public Builder setLocation(SteammessagesHiddevices.EHIDDeviceLocation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        location_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .EHIDDeviceLocation location = 1 [default = k_EDeviceLocationLocal];</code>
       */
      public Builder clearLocation() {
        bitField0_ = (bitField0_ & ~0x00000001);
        location_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object path_ = "";
      /**
       * <code>optional string path = 2;</code>
       */
      public boolean hasPath() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string path = 2;</code>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            path_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string path = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string path = 2;</code>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string path = 2;</code>
       */
      public Builder clearPath() {
        bitField0_ = (bitField0_ & ~0x00000002);
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <code>optional string path = 2;</code>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        path_ = value;
        onChanged();
        return this;
      }

      private int vendorId_ ;
      /**
       * <code>optional uint32 vendor_id = 3;</code>
       */
      public boolean hasVendorId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 vendor_id = 3;</code>
       */
      public int getVendorId() {
        return vendorId_;
      }
      /**
       * <code>optional uint32 vendor_id = 3;</code>
       */
      public Builder setVendorId(int value) {
        bitField0_ |= 0x00000004;
        vendorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 vendor_id = 3;</code>
       */
      public Builder clearVendorId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        vendorId_ = 0;
        onChanged();
        return this;
      }

      private int productId_ ;
      /**
       * <code>optional uint32 product_id = 4;</code>
       */
      public boolean hasProductId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 product_id = 4;</code>
       */
      public int getProductId() {
        return productId_;
      }
      /**
       * <code>optional uint32 product_id = 4;</code>
       */
      public Builder setProductId(int value) {
        bitField0_ |= 0x00000008;
        productId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 product_id = 4;</code>
       */
      public Builder clearProductId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        productId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object serialNumber_ = "";
      /**
       * <code>optional string serial_number = 5;</code>
       */
      public boolean hasSerialNumber() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string serial_number = 5;</code>
       */
      public java.lang.String getSerialNumber() {
        java.lang.Object ref = serialNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serialNumber_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string serial_number = 5;</code>
       */
      public com.google.protobuf.ByteString
          getSerialNumberBytes() {
        java.lang.Object ref = serialNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serialNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string serial_number = 5;</code>
       */
      public Builder setSerialNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 5;</code>
       */
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x00000010);
        serialNumber_ = getDefaultInstance().getSerialNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 5;</code>
       */
      public Builder setSerialNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        serialNumber_ = value;
        onChanged();
        return this;
      }

      private int releaseNumber_ ;
      /**
       * <code>optional uint32 release_number = 6;</code>
       */
      public boolean hasReleaseNumber() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 release_number = 6;</code>
       */
      public int getReleaseNumber() {
        return releaseNumber_;
      }
      /**
       * <code>optional uint32 release_number = 6;</code>
       */
      public Builder setReleaseNumber(int value) {
        bitField0_ |= 0x00000020;
        releaseNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 release_number = 6;</code>
       */
      public Builder clearReleaseNumber() {
        bitField0_ = (bitField0_ & ~0x00000020);
        releaseNumber_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object manufacturerString_ = "";
      /**
       * <code>optional string manufacturer_string = 7;</code>
       */
      public boolean hasManufacturerString() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string manufacturer_string = 7;</code>
       */
      public java.lang.String getManufacturerString() {
        java.lang.Object ref = manufacturerString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            manufacturerString_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string manufacturer_string = 7;</code>
       */
      public com.google.protobuf.ByteString
          getManufacturerStringBytes() {
        java.lang.Object ref = manufacturerString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          manufacturerString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string manufacturer_string = 7;</code>
       */
      public Builder setManufacturerString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        manufacturerString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string manufacturer_string = 7;</code>
       */
      public Builder clearManufacturerString() {
        bitField0_ = (bitField0_ & ~0x00000040);
        manufacturerString_ = getDefaultInstance().getManufacturerString();
        onChanged();
        return this;
      }
      /**
       * <code>optional string manufacturer_string = 7;</code>
       */
      public Builder setManufacturerStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        manufacturerString_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object productString_ = "";
      /**
       * <code>optional string product_string = 8;</code>
       */
      public boolean hasProductString() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string product_string = 8;</code>
       */
      public java.lang.String getProductString() {
        java.lang.Object ref = productString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            productString_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string product_string = 8;</code>
       */
      public com.google.protobuf.ByteString
          getProductStringBytes() {
        java.lang.Object ref = productString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          productString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string product_string = 8;</code>
       */
      public Builder setProductString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        productString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string product_string = 8;</code>
       */
      public Builder clearProductString() {
        bitField0_ = (bitField0_ & ~0x00000080);
        productString_ = getDefaultInstance().getProductString();
        onChanged();
        return this;
      }
      /**
       * <code>optional string product_string = 8;</code>
       */
      public Builder setProductStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        productString_ = value;
        onChanged();
        return this;
      }

      private int usagePage_ ;
      /**
       * <code>optional uint32 usage_page = 9;</code>
       */
      public boolean hasUsagePage() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 usage_page = 9;</code>
       */
      public int getUsagePage() {
        return usagePage_;
      }
      /**
       * <code>optional uint32 usage_page = 9;</code>
       */
      public Builder setUsagePage(int value) {
        bitField0_ |= 0x00000100;
        usagePage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 usage_page = 9;</code>
       */
      public Builder clearUsagePage() {
        bitField0_ = (bitField0_ & ~0x00000100);
        usagePage_ = 0;
        onChanged();
        return this;
      }

      private int usage_ ;
      /**
       * <code>optional uint32 usage = 10;</code>
       */
      public boolean hasUsage() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 usage = 10;</code>
       */
      public int getUsage() {
        return usage_;
      }
      /**
       * <code>optional uint32 usage = 10;</code>
       */
      public Builder setUsage(int value) {
        bitField0_ |= 0x00000200;
        usage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 usage = 10;</code>
       */
      public Builder clearUsage() {
        bitField0_ = (bitField0_ & ~0x00000200);
        usage_ = 0;
        onChanged();
        return this;
      }

      private int interfaceNumber_ = -1;
      /**
       * <code>optional int32 interface_number = 11 [default = -1];</code>
       */
      public boolean hasInterfaceNumber() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 interface_number = 11 [default = -1];</code>
       */
      public int getInterfaceNumber() {
        return interfaceNumber_;
      }
      /**
       * <code>optional int32 interface_number = 11 [default = -1];</code>
       */
      public Builder setInterfaceNumber(int value) {
        bitField0_ |= 0x00000400;
        interfaceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 interface_number = 11 [default = -1];</code>
       */
      public Builder clearInterfaceNumber() {
        bitField0_ = (bitField0_ & ~0x00000400);
        interfaceNumber_ = -1;
        onChanged();
        return this;
      }

      private int ostype_ = -1;
      /**
       * <code>optional int32 ostype = 12 [default = -1];</code>
       */
      public boolean hasOstype() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 ostype = 12 [default = -1];</code>
       */
      public int getOstype() {
        return ostype_;
      }
      /**
       * <code>optional int32 ostype = 12 [default = -1];</code>
       */
      public Builder setOstype(int value) {
        bitField0_ |= 0x00000800;
        ostype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ostype = 12 [default = -1];</code>
       */
      public Builder clearOstype() {
        bitField0_ = (bitField0_ & ~0x00000800);
        ostype_ = -1;
        onChanged();
        return this;
      }

      private boolean isGenericGamepad_ ;
      /**
       * <code>optional bool is_generic_gamepad = 13;</code>
       */
      public boolean hasIsGenericGamepad() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool is_generic_gamepad = 13;</code>
       */
      public boolean getIsGenericGamepad() {
        return isGenericGamepad_;
      }
      /**
       * <code>optional bool is_generic_gamepad = 13;</code>
       */
      public Builder setIsGenericGamepad(boolean value) {
        bitField0_ |= 0x00001000;
        isGenericGamepad_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_generic_gamepad = 13;</code>
       */
      public Builder clearIsGenericGamepad() {
        bitField0_ = (bitField0_ & ~0x00001000);
        isGenericGamepad_ = false;
        onChanged();
        return this;
      }

      private boolean isGenericJoystick_ ;
      /**
       * <code>optional bool is_generic_joystick = 14;</code>
       */
      public boolean hasIsGenericJoystick() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional bool is_generic_joystick = 14;</code>
       */
      public boolean getIsGenericJoystick() {
        return isGenericJoystick_;
      }
      /**
       * <code>optional bool is_generic_joystick = 14;</code>
       */
      public Builder setIsGenericJoystick(boolean value) {
        bitField0_ |= 0x00002000;
        isGenericJoystick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_generic_joystick = 14;</code>
       */
      public Builder clearIsGenericJoystick() {
        bitField0_ = (bitField0_ & ~0x00002000);
        isGenericJoystick_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CHIDDeviceInfo)
    }

    // @@protoc_insertion_point(class_scope:CHIDDeviceInfo)
    private static final SteammessagesHiddevices.CHIDDeviceInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDDeviceInfo();
    }

    public static SteammessagesHiddevices.CHIDDeviceInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CHIDDeviceInfo>
        PARSER = new com.google.protobuf.AbstractParser<CHIDDeviceInfo>() {
      public CHIDDeviceInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CHIDDeviceInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CHIDDeviceInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CHIDDeviceInfo> getParserForType() {
      return PARSER;
    }

    public SteammessagesHiddevices.CHIDDeviceInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CHIDDeviceInputReportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CHIDDeviceInputReport)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes full_report = 1;</code>
     */
    boolean hasFullReport();
    /**
     * <code>optional bytes full_report = 1;</code>
     */
    com.google.protobuf.ByteString getFullReport();

    /**
     * <code>optional bytes delta_report = 2;</code>
     */
    boolean hasDeltaReport();
    /**
     * <code>optional bytes delta_report = 2;</code>
     */
    com.google.protobuf.ByteString getDeltaReport();

    /**
     * <code>optional uint32 delta_report_size = 3;</code>
     */
    boolean hasDeltaReportSize();
    /**
     * <code>optional uint32 delta_report_size = 3;</code>
     */
    int getDeltaReportSize();

    /**
     * <code>optional uint32 delta_report_crc = 4;</code>
     */
    boolean hasDeltaReportCrc();
    /**
     * <code>optional uint32 delta_report_crc = 4;</code>
     */
    int getDeltaReportCrc();
  }
  /**
   * Protobuf type {@code CHIDDeviceInputReport}
   */
  public  static final class CHIDDeviceInputReport extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CHIDDeviceInputReport)
      CHIDDeviceInputReportOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CHIDDeviceInputReport.newBuilder() to construct.
    private CHIDDeviceInputReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CHIDDeviceInputReport() {
      fullReport_ = com.google.protobuf.ByteString.EMPTY;
      deltaReport_ = com.google.protobuf.ByteString.EMPTY;
      deltaReportSize_ = 0;
      deltaReportCrc_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CHIDDeviceInputReport(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              fullReport_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              deltaReport_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              deltaReportSize_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              deltaReportCrc_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesHiddevices.internal_static_CHIDDeviceInputReport_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesHiddevices.internal_static_CHIDDeviceInputReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesHiddevices.CHIDDeviceInputReport.class, SteammessagesHiddevices.CHIDDeviceInputReport.Builder.class);
    }

    private int bitField0_;
    public static final int FULL_REPORT_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString fullReport_;
    /**
     * <code>optional bytes full_report = 1;</code>
     */
    public boolean hasFullReport() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes full_report = 1;</code>
     */
    public com.google.protobuf.ByteString getFullReport() {
      return fullReport_;
    }

    public static final int DELTA_REPORT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString deltaReport_;
    /**
     * <code>optional bytes delta_report = 2;</code>
     */
    public boolean hasDeltaReport() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes delta_report = 2;</code>
     */
    public com.google.protobuf.ByteString getDeltaReport() {
      return deltaReport_;
    }

    public static final int DELTA_REPORT_SIZE_FIELD_NUMBER = 3;
    private int deltaReportSize_;
    /**
     * <code>optional uint32 delta_report_size = 3;</code>
     */
    public boolean hasDeltaReportSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 delta_report_size = 3;</code>
     */
    public int getDeltaReportSize() {
      return deltaReportSize_;
    }

    public static final int DELTA_REPORT_CRC_FIELD_NUMBER = 4;
    private int deltaReportCrc_;
    /**
     * <code>optional uint32 delta_report_crc = 4;</code>
     */
    public boolean hasDeltaReportCrc() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 delta_report_crc = 4;</code>
     */
    public int getDeltaReportCrc() {
      return deltaReportCrc_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, fullReport_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, deltaReport_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, deltaReportSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, deltaReportCrc_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, fullReport_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, deltaReport_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, deltaReportSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, deltaReportCrc_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesHiddevices.CHIDDeviceInputReport)) {
        return super.equals(obj);
      }
      SteammessagesHiddevices.CHIDDeviceInputReport other = (SteammessagesHiddevices.CHIDDeviceInputReport) obj;

      boolean result = true;
      result = result && (hasFullReport() == other.hasFullReport());
      if (hasFullReport()) {
        result = result && getFullReport()
            .equals(other.getFullReport());
      }
      result = result && (hasDeltaReport() == other.hasDeltaReport());
      if (hasDeltaReport()) {
        result = result && getDeltaReport()
            .equals(other.getDeltaReport());
      }
      result = result && (hasDeltaReportSize() == other.hasDeltaReportSize());
      if (hasDeltaReportSize()) {
        result = result && (getDeltaReportSize()
            == other.getDeltaReportSize());
      }
      result = result && (hasDeltaReportCrc() == other.hasDeltaReportCrc());
      if (hasDeltaReportCrc()) {
        result = result && (getDeltaReportCrc()
            == other.getDeltaReportCrc());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFullReport()) {
        hash = (37 * hash) + FULL_REPORT_FIELD_NUMBER;
        hash = (53 * hash) + getFullReport().hashCode();
      }
      if (hasDeltaReport()) {
        hash = (37 * hash) + DELTA_REPORT_FIELD_NUMBER;
        hash = (53 * hash) + getDeltaReport().hashCode();
      }
      if (hasDeltaReportSize()) {
        hash = (37 * hash) + DELTA_REPORT_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getDeltaReportSize();
      }
      if (hasDeltaReportCrc()) {
        hash = (37 * hash) + DELTA_REPORT_CRC_FIELD_NUMBER;
        hash = (53 * hash) + getDeltaReportCrc();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesHiddevices.CHIDDeviceInputReport parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesHiddevices.CHIDDeviceInputReport parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDDeviceInputReport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesHiddevices.CHIDDeviceInputReport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDDeviceInputReport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesHiddevices.CHIDDeviceInputReport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDDeviceInputReport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesHiddevices.CHIDDeviceInputReport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDDeviceInputReport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesHiddevices.CHIDDeviceInputReport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDDeviceInputReport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesHiddevices.CHIDDeviceInputReport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesHiddevices.CHIDDeviceInputReport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CHIDDeviceInputReport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CHIDDeviceInputReport)
        SteammessagesHiddevices.CHIDDeviceInputReportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDDeviceInputReport_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDDeviceInputReport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDDeviceInputReport.class, SteammessagesHiddevices.CHIDDeviceInputReport.Builder.class);
      }

      // Construct using SteammessagesHiddevices.CHIDDeviceInputReport.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fullReport_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        deltaReport_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        deltaReportSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        deltaReportCrc_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesHiddevices.internal_static_CHIDDeviceInputReport_descriptor;
      }

      public SteammessagesHiddevices.CHIDDeviceInputReport getDefaultInstanceForType() {
        return SteammessagesHiddevices.CHIDDeviceInputReport.getDefaultInstance();
      }

      public SteammessagesHiddevices.CHIDDeviceInputReport build() {
        SteammessagesHiddevices.CHIDDeviceInputReport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesHiddevices.CHIDDeviceInputReport buildPartial() {
        SteammessagesHiddevices.CHIDDeviceInputReport result = new SteammessagesHiddevices.CHIDDeviceInputReport(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fullReport_ = fullReport_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.deltaReport_ = deltaReport_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.deltaReportSize_ = deltaReportSize_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.deltaReportCrc_ = deltaReportCrc_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesHiddevices.CHIDDeviceInputReport) {
          return mergeFrom((SteammessagesHiddevices.CHIDDeviceInputReport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesHiddevices.CHIDDeviceInputReport other) {
        if (other == SteammessagesHiddevices.CHIDDeviceInputReport.getDefaultInstance()) return this;
        if (other.hasFullReport()) {
          setFullReport(other.getFullReport());
        }
        if (other.hasDeltaReport()) {
          setDeltaReport(other.getDeltaReport());
        }
        if (other.hasDeltaReportSize()) {
          setDeltaReportSize(other.getDeltaReportSize());
        }
        if (other.hasDeltaReportCrc()) {
          setDeltaReportCrc(other.getDeltaReportCrc());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesHiddevices.CHIDDeviceInputReport parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesHiddevices.CHIDDeviceInputReport) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString fullReport_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes full_report = 1;</code>
       */
      public boolean hasFullReport() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes full_report = 1;</code>
       */
      public com.google.protobuf.ByteString getFullReport() {
        return fullReport_;
      }
      /**
       * <code>optional bytes full_report = 1;</code>
       */
      public Builder setFullReport(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        fullReport_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes full_report = 1;</code>
       */
      public Builder clearFullReport() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fullReport_ = getDefaultInstance().getFullReport();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString deltaReport_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes delta_report = 2;</code>
       */
      public boolean hasDeltaReport() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes delta_report = 2;</code>
       */
      public com.google.protobuf.ByteString getDeltaReport() {
        return deltaReport_;
      }
      /**
       * <code>optional bytes delta_report = 2;</code>
       */
      public Builder setDeltaReport(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        deltaReport_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes delta_report = 2;</code>
       */
      public Builder clearDeltaReport() {
        bitField0_ = (bitField0_ & ~0x00000002);
        deltaReport_ = getDefaultInstance().getDeltaReport();
        onChanged();
        return this;
      }

      private int deltaReportSize_ ;
      /**
       * <code>optional uint32 delta_report_size = 3;</code>
       */
      public boolean hasDeltaReportSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 delta_report_size = 3;</code>
       */
      public int getDeltaReportSize() {
        return deltaReportSize_;
      }
      /**
       * <code>optional uint32 delta_report_size = 3;</code>
       */
      public Builder setDeltaReportSize(int value) {
        bitField0_ |= 0x00000004;
        deltaReportSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 delta_report_size = 3;</code>
       */
      public Builder clearDeltaReportSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        deltaReportSize_ = 0;
        onChanged();
        return this;
      }

      private int deltaReportCrc_ ;
      /**
       * <code>optional uint32 delta_report_crc = 4;</code>
       */
      public boolean hasDeltaReportCrc() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 delta_report_crc = 4;</code>
       */
      public int getDeltaReportCrc() {
        return deltaReportCrc_;
      }
      /**
       * <code>optional uint32 delta_report_crc = 4;</code>
       */
      public Builder setDeltaReportCrc(int value) {
        bitField0_ |= 0x00000008;
        deltaReportCrc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 delta_report_crc = 4;</code>
       */
      public Builder clearDeltaReportCrc() {
        bitField0_ = (bitField0_ & ~0x00000008);
        deltaReportCrc_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CHIDDeviceInputReport)
    }

    // @@protoc_insertion_point(class_scope:CHIDDeviceInputReport)
    private static final SteammessagesHiddevices.CHIDDeviceInputReport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDDeviceInputReport();
    }

    public static SteammessagesHiddevices.CHIDDeviceInputReport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CHIDDeviceInputReport>
        PARSER = new com.google.protobuf.AbstractParser<CHIDDeviceInputReport>() {
      public CHIDDeviceInputReport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CHIDDeviceInputReport(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CHIDDeviceInputReport> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CHIDDeviceInputReport> getParserForType() {
      return PARSER;
    }

    public SteammessagesHiddevices.CHIDDeviceInputReport getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CHIDMessageToRemoteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CHIDMessageToRemote)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 request_id = 1;</code>
     */
    boolean hasRequestId();
    /**
     * <code>optional uint32 request_id = 1;</code>
     */
    int getRequestId();

    /**
     * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
     */
    boolean hasDeviceOpen();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen getDeviceOpen();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpenOrBuilder getDeviceOpenOrBuilder();

    /**
     * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
     */
    boolean hasDeviceClose();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose getDeviceClose();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceCloseOrBuilder getDeviceCloseOrBuilder();

    /**
     * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
     */
    boolean hasDeviceWrite();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite getDeviceWrite();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceWriteOrBuilder getDeviceWriteOrBuilder();

    /**
     * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
     */
    boolean hasDeviceRead();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead getDeviceRead();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceReadOrBuilder getDeviceReadOrBuilder();

    /**
     * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
     */
    boolean hasDeviceSendFeatureReport();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport getDeviceSendFeatureReport();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReportOrBuilder getDeviceSendFeatureReportOrBuilder();

    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
     */
    boolean hasDeviceGetFeatureReport();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport getDeviceGetFeatureReport();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReportOrBuilder getDeviceGetFeatureReportOrBuilder();

    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
     */
    boolean hasDeviceGetVendorString();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString getDeviceGetVendorString();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorStringOrBuilder getDeviceGetVendorStringOrBuilder();

    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
     */
    boolean hasDeviceGetProductString();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString getDeviceGetProductString();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductStringOrBuilder getDeviceGetProductStringOrBuilder();

    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
     */
    boolean hasDeviceGetSerialNumberString();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString getDeviceGetSerialNumberString();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberStringOrBuilder getDeviceGetSerialNumberStringOrBuilder();

    /**
     * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
     */
    boolean hasDeviceStartInputReports();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports getDeviceStartInputReports();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReportsOrBuilder getDeviceStartInputReportsOrBuilder();

    /**
     * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
     */
    boolean hasDeviceRequestFullReport();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport getDeviceRequestFullReport();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReportOrBuilder getDeviceRequestFullReportOrBuilder();

    /**
     * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
     */
    boolean hasDeviceDisconnect();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect getDeviceDisconnect();
    /**
     * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
     */
    SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnectOrBuilder getDeviceDisconnectOrBuilder();

    public SteammessagesHiddevices.CHIDMessageToRemote.CommandCase getCommandCase();
  }
  /**
   * Protobuf type {@code CHIDMessageToRemote}
   */
  public  static final class CHIDMessageToRemote extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CHIDMessageToRemote)
      CHIDMessageToRemoteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CHIDMessageToRemote.newBuilder() to construct.
    private CHIDMessageToRemote(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CHIDMessageToRemote() {
      requestId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CHIDMessageToRemote(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              requestId_ = input.readUInt32();
              break;
            }
            case 18: {
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.Builder subBuilder = null;
              if (commandCase_ == 2) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 2;
              break;
            }
            case 26: {
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.Builder subBuilder = null;
              if (commandCase_ == 3) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 3;
              break;
            }
            case 34: {
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.Builder subBuilder = null;
              if (commandCase_ == 4) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 4;
              break;
            }
            case 42: {
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.Builder subBuilder = null;
              if (commandCase_ == 5) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 5;
              break;
            }
            case 50: {
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.Builder subBuilder = null;
              if (commandCase_ == 6) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 6;
              break;
            }
            case 58: {
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.Builder subBuilder = null;
              if (commandCase_ == 7) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 7;
              break;
            }
            case 66: {
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.Builder subBuilder = null;
              if (commandCase_ == 8) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 8;
              break;
            }
            case 74: {
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.Builder subBuilder = null;
              if (commandCase_ == 9) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 9;
              break;
            }
            case 82: {
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.Builder subBuilder = null;
              if (commandCase_ == 10) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 10;
              break;
            }
            case 90: {
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.Builder subBuilder = null;
              if (commandCase_ == 11) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 11;
              break;
            }
            case 98: {
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.Builder subBuilder = null;
              if (commandCase_ == 12) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 12;
              break;
            }
            case 106: {
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.Builder subBuilder = null;
              if (commandCase_ == 13) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 13;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesHiddevices.CHIDMessageToRemote.class, SteammessagesHiddevices.CHIDMessageToRemote.Builder.class);
    }

    public interface DeviceOpenOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageToRemote.DeviceOpen)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .CHIDDeviceInfo info = 1;</code>
       */
      boolean hasInfo();
      /**
       * <code>optional .CHIDDeviceInfo info = 1;</code>
       */
      SteammessagesHiddevices.CHIDDeviceInfo getInfo();
      /**
       * <code>optional .CHIDDeviceInfo info = 1;</code>
       */
      SteammessagesHiddevices.CHIDDeviceInfoOrBuilder getInfoOrBuilder();
    }
    /**
     * Protobuf type {@code CHIDMessageToRemote.DeviceOpen}
     */
    public  static final class DeviceOpen extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageToRemote.DeviceOpen)
        DeviceOpenOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceOpen.newBuilder() to construct.
      private DeviceOpen(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceOpen() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeviceOpen(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                SteammessagesHiddevices.CHIDDeviceInfo.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = info_.toBuilder();
                }
                info_ = input.readMessage(SteammessagesHiddevices.CHIDDeviceInfo.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(info_);
                  info_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceOpen_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceOpen_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.Builder.class);
      }

      private int bitField0_;
      public static final int INFO_FIELD_NUMBER = 1;
      private SteammessagesHiddevices.CHIDDeviceInfo info_;
      /**
       * <code>optional .CHIDDeviceInfo info = 1;</code>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CHIDDeviceInfo info = 1;</code>
       */
      public SteammessagesHiddevices.CHIDDeviceInfo getInfo() {
        return info_ == null ? SteammessagesHiddevices.CHIDDeviceInfo.getDefaultInstance() : info_;
      }
      /**
       * <code>optional .CHIDDeviceInfo info = 1;</code>
       */
      public SteammessagesHiddevices.CHIDDeviceInfoOrBuilder getInfoOrBuilder() {
        return info_ == null ? SteammessagesHiddevices.CHIDDeviceInfo.getDefaultInstance() : info_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, getInfo());
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getInfo());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen other = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen) obj;

        boolean result = true;
        result = result && (hasInfo() == other.hasInfo());
        if (hasInfo()) {
          result = result && getInfo()
              .equals(other.getInfo());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasInfo()) {
          hash = (37 * hash) + INFO_FIELD_NUMBER;
          hash = (53 * hash) + getInfo().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageToRemote.DeviceOpen}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageToRemote.DeviceOpen)
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpenOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceOpen_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceOpen_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getInfoFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (infoBuilder_ == null) {
            info_ = null;
          } else {
            infoBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceOpen_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen build() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen buildPartial() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen result = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (infoBuilder_ == null) {
            result.info_ = info_;
          } else {
            result.info_ = infoBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen other) {
          if (other == SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.getDefaultInstance()) return this;
          if (other.hasInfo()) {
            mergeInfo(other.getInfo());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private SteammessagesHiddevices.CHIDDeviceInfo info_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            SteammessagesHiddevices.CHIDDeviceInfo, SteammessagesHiddevices.CHIDDeviceInfo.Builder, SteammessagesHiddevices.CHIDDeviceInfoOrBuilder> infoBuilder_;
        /**
         * <code>optional .CHIDDeviceInfo info = 1;</code>
         */
        public boolean hasInfo() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .CHIDDeviceInfo info = 1;</code>
         */
        public SteammessagesHiddevices.CHIDDeviceInfo getInfo() {
          if (infoBuilder_ == null) {
            return info_ == null ? SteammessagesHiddevices.CHIDDeviceInfo.getDefaultInstance() : info_;
          } else {
            return infoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CHIDDeviceInfo info = 1;</code>
         */
        public Builder setInfo(SteammessagesHiddevices.CHIDDeviceInfo value) {
          if (infoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            info_ = value;
            onChanged();
          } else {
            infoBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .CHIDDeviceInfo info = 1;</code>
         */
        public Builder setInfo(
            SteammessagesHiddevices.CHIDDeviceInfo.Builder builderForValue) {
          if (infoBuilder_ == null) {
            info_ = builderForValue.build();
            onChanged();
          } else {
            infoBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .CHIDDeviceInfo info = 1;</code>
         */
        public Builder mergeInfo(SteammessagesHiddevices.CHIDDeviceInfo value) {
          if (infoBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                info_ != null &&
                info_ != SteammessagesHiddevices.CHIDDeviceInfo.getDefaultInstance()) {
              info_ =
                SteammessagesHiddevices.CHIDDeviceInfo.newBuilder(info_).mergeFrom(value).buildPartial();
            } else {
              info_ = value;
            }
            onChanged();
          } else {
            infoBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .CHIDDeviceInfo info = 1;</code>
         */
        public Builder clearInfo() {
          if (infoBuilder_ == null) {
            info_ = null;
            onChanged();
          } else {
            infoBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>optional .CHIDDeviceInfo info = 1;</code>
         */
        public SteammessagesHiddevices.CHIDDeviceInfo.Builder getInfoBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getInfoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CHIDDeviceInfo info = 1;</code>
         */
        public SteammessagesHiddevices.CHIDDeviceInfoOrBuilder getInfoOrBuilder() {
          if (infoBuilder_ != null) {
            return infoBuilder_.getMessageOrBuilder();
          } else {
            return info_ == null ?
                SteammessagesHiddevices.CHIDDeviceInfo.getDefaultInstance() : info_;
          }
        }
        /**
         * <code>optional .CHIDDeviceInfo info = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            SteammessagesHiddevices.CHIDDeviceInfo, SteammessagesHiddevices.CHIDDeviceInfo.Builder, SteammessagesHiddevices.CHIDDeviceInfoOrBuilder> 
            getInfoFieldBuilder() {
          if (infoBuilder_ == null) {
            infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                SteammessagesHiddevices.CHIDDeviceInfo, SteammessagesHiddevices.CHIDDeviceInfo.Builder, SteammessagesHiddevices.CHIDDeviceInfoOrBuilder>(
                    getInfo(),
                    getParentForChildren(),
                    isClean());
            info_ = null;
          }
          return infoBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageToRemote.DeviceOpen)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageToRemote.DeviceOpen)
      private static final SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen();
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceOpen>
          PARSER = new com.google.protobuf.AbstractParser<DeviceOpen>() {
        public DeviceOpen parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new DeviceOpen(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeviceOpen> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceOpen> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DeviceCloseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageToRemote.DeviceClose)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 device = 1;</code>
       */
      boolean hasDevice();
      /**
       * <code>optional uint32 device = 1;</code>
       */
      int getDevice();
    }
    /**
     * Protobuf type {@code CHIDMessageToRemote.DeviceClose}
     */
    public  static final class DeviceClose extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageToRemote.DeviceClose)
        DeviceCloseOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceClose.newBuilder() to construct.
      private DeviceClose(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceClose() {
        device_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeviceClose(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                device_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceClose_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceClose_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.Builder.class);
      }

      private int bitField0_;
      public static final int DEVICE_FIELD_NUMBER = 1;
      private int device_;
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public int getDevice() {
        return device_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, device_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, device_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose other = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose) obj;

        boolean result = true;
        result = result && (hasDevice() == other.hasDevice());
        if (hasDevice()) {
          result = result && (getDevice()
              == other.getDevice());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDevice()) {
          hash = (37 * hash) + DEVICE_FIELD_NUMBER;
          hash = (53 * hash) + getDevice();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageToRemote.DeviceClose}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageToRemote.DeviceClose)
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceCloseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceClose_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceClose_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          device_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceClose_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose build() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose buildPartial() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose result = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.device_ = device_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose other) {
          if (other == SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.getDefaultInstance()) return this;
          if (other.hasDevice()) {
            setDevice(other.getDevice());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int device_ ;
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public boolean hasDevice() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public int getDevice() {
          return device_;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder setDevice(int value) {
          bitField0_ |= 0x00000001;
          device_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder clearDevice() {
          bitField0_ = (bitField0_ & ~0x00000001);
          device_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageToRemote.DeviceClose)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageToRemote.DeviceClose)
      private static final SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose();
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceClose>
          PARSER = new com.google.protobuf.AbstractParser<DeviceClose>() {
        public DeviceClose parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new DeviceClose(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeviceClose> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceClose> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DeviceWriteOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageToRemote.DeviceWrite)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 device = 1;</code>
       */
      boolean hasDevice();
      /**
       * <code>optional uint32 device = 1;</code>
       */
      int getDevice();

      /**
       * <code>optional bytes data = 2;</code>
       */
      boolean hasData();
      /**
       * <code>optional bytes data = 2;</code>
       */
      com.google.protobuf.ByteString getData();
    }
    /**
     * Protobuf type {@code CHIDMessageToRemote.DeviceWrite}
     */
    public  static final class DeviceWrite extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageToRemote.DeviceWrite)
        DeviceWriteOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceWrite.newBuilder() to construct.
      private DeviceWrite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceWrite() {
        device_ = 0;
        data_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeviceWrite(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                device_ = input.readUInt32();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                data_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceWrite_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceWrite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.Builder.class);
      }

      private int bitField0_;
      public static final int DEVICE_FIELD_NUMBER = 1;
      private int device_;
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public int getDevice() {
        return device_;
      }

      public static final int DATA_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString data_;
      /**
       * <code>optional bytes data = 2;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, device_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, data_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, device_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, data_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite other = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite) obj;

        boolean result = true;
        result = result && (hasDevice() == other.hasDevice());
        if (hasDevice()) {
          result = result && (getDevice()
              == other.getDevice());
        }
        result = result && (hasData() == other.hasData());
        if (hasData()) {
          result = result && getData()
              .equals(other.getData());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDevice()) {
          hash = (37 * hash) + DEVICE_FIELD_NUMBER;
          hash = (53 * hash) + getDevice();
        }
        if (hasData()) {
          hash = (37 * hash) + DATA_FIELD_NUMBER;
          hash = (53 * hash) + getData().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageToRemote.DeviceWrite}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageToRemote.DeviceWrite)
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceWriteOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceWrite_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceWrite_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          device_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          data_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceWrite_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite build() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite buildPartial() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite result = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.device_ = device_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.data_ = data_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite other) {
          if (other == SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.getDefaultInstance()) return this;
          if (other.hasDevice()) {
            setDevice(other.getDevice());
          }
          if (other.hasData()) {
            setData(other.getData());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int device_ ;
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public boolean hasDevice() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public int getDevice() {
          return device_;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder setDevice(int value) {
          bitField0_ |= 0x00000001;
          device_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder clearDevice() {
          bitField0_ = (bitField0_ & ~0x00000001);
          device_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes data = 2;</code>
         */
        public boolean hasData() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bytes data = 2;</code>
         */
        public com.google.protobuf.ByteString getData() {
          return data_;
        }
        /**
         * <code>optional bytes data = 2;</code>
         */
        public Builder setData(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          data_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes data = 2;</code>
         */
        public Builder clearData() {
          bitField0_ = (bitField0_ & ~0x00000002);
          data_ = getDefaultInstance().getData();
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageToRemote.DeviceWrite)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageToRemote.DeviceWrite)
      private static final SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite();
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceWrite>
          PARSER = new com.google.protobuf.AbstractParser<DeviceWrite>() {
        public DeviceWrite parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new DeviceWrite(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeviceWrite> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceWrite> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DeviceReadOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageToRemote.DeviceRead)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 device = 1;</code>
       */
      boolean hasDevice();
      /**
       * <code>optional uint32 device = 1;</code>
       */
      int getDevice();

      /**
       * <code>optional uint32 length = 2;</code>
       */
      boolean hasLength();
      /**
       * <code>optional uint32 length = 2;</code>
       */
      int getLength();

      /**
       * <code>optional int32 timeout_ms = 3;</code>
       */
      boolean hasTimeoutMs();
      /**
       * <code>optional int32 timeout_ms = 3;</code>
       */
      int getTimeoutMs();
    }
    /**
     * Protobuf type {@code CHIDMessageToRemote.DeviceRead}
     */
    public  static final class DeviceRead extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageToRemote.DeviceRead)
        DeviceReadOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceRead.newBuilder() to construct.
      private DeviceRead(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceRead() {
        device_ = 0;
        length_ = 0;
        timeoutMs_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeviceRead(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                device_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                length_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                timeoutMs_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceRead_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceRead_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.Builder.class);
      }

      private int bitField0_;
      public static final int DEVICE_FIELD_NUMBER = 1;
      private int device_;
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public int getDevice() {
        return device_;
      }

      public static final int LENGTH_FIELD_NUMBER = 2;
      private int length_;
      /**
       * <code>optional uint32 length = 2;</code>
       */
      public boolean hasLength() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 length = 2;</code>
       */
      public int getLength() {
        return length_;
      }

      public static final int TIMEOUT_MS_FIELD_NUMBER = 3;
      private int timeoutMs_;
      /**
       * <code>optional int32 timeout_ms = 3;</code>
       */
      public boolean hasTimeoutMs() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 timeout_ms = 3;</code>
       */
      public int getTimeoutMs() {
        return timeoutMs_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, device_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, length_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, timeoutMs_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, device_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, length_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, timeoutMs_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead other = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead) obj;

        boolean result = true;
        result = result && (hasDevice() == other.hasDevice());
        if (hasDevice()) {
          result = result && (getDevice()
              == other.getDevice());
        }
        result = result && (hasLength() == other.hasLength());
        if (hasLength()) {
          result = result && (getLength()
              == other.getLength());
        }
        result = result && (hasTimeoutMs() == other.hasTimeoutMs());
        if (hasTimeoutMs()) {
          result = result && (getTimeoutMs()
              == other.getTimeoutMs());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDevice()) {
          hash = (37 * hash) + DEVICE_FIELD_NUMBER;
          hash = (53 * hash) + getDevice();
        }
        if (hasLength()) {
          hash = (37 * hash) + LENGTH_FIELD_NUMBER;
          hash = (53 * hash) + getLength();
        }
        if (hasTimeoutMs()) {
          hash = (37 * hash) + TIMEOUT_MS_FIELD_NUMBER;
          hash = (53 * hash) + getTimeoutMs();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageToRemote.DeviceRead}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageToRemote.DeviceRead)
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceReadOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceRead_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceRead_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          device_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          length_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          timeoutMs_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceRead_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead build() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead buildPartial() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead result = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.device_ = device_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.length_ = length_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.timeoutMs_ = timeoutMs_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead other) {
          if (other == SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.getDefaultInstance()) return this;
          if (other.hasDevice()) {
            setDevice(other.getDevice());
          }
          if (other.hasLength()) {
            setLength(other.getLength());
          }
          if (other.hasTimeoutMs()) {
            setTimeoutMs(other.getTimeoutMs());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int device_ ;
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public boolean hasDevice() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public int getDevice() {
          return device_;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder setDevice(int value) {
          bitField0_ |= 0x00000001;
          device_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder clearDevice() {
          bitField0_ = (bitField0_ & ~0x00000001);
          device_ = 0;
          onChanged();
          return this;
        }

        private int length_ ;
        /**
         * <code>optional uint32 length = 2;</code>
         */
        public boolean hasLength() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 length = 2;</code>
         */
        public int getLength() {
          return length_;
        }
        /**
         * <code>optional uint32 length = 2;</code>
         */
        public Builder setLength(int value) {
          bitField0_ |= 0x00000002;
          length_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 length = 2;</code>
         */
        public Builder clearLength() {
          bitField0_ = (bitField0_ & ~0x00000002);
          length_ = 0;
          onChanged();
          return this;
        }

        private int timeoutMs_ ;
        /**
         * <code>optional int32 timeout_ms = 3;</code>
         */
        public boolean hasTimeoutMs() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 timeout_ms = 3;</code>
         */
        public int getTimeoutMs() {
          return timeoutMs_;
        }
        /**
         * <code>optional int32 timeout_ms = 3;</code>
         */
        public Builder setTimeoutMs(int value) {
          bitField0_ |= 0x00000004;
          timeoutMs_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 timeout_ms = 3;</code>
         */
        public Builder clearTimeoutMs() {
          bitField0_ = (bitField0_ & ~0x00000004);
          timeoutMs_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageToRemote.DeviceRead)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageToRemote.DeviceRead)
      private static final SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead();
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceRead>
          PARSER = new com.google.protobuf.AbstractParser<DeviceRead>() {
        public DeviceRead parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new DeviceRead(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeviceRead> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceRead> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DeviceSendFeatureReportOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageToRemote.DeviceSendFeatureReport)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 device = 1;</code>
       */
      boolean hasDevice();
      /**
       * <code>optional uint32 device = 1;</code>
       */
      int getDevice();

      /**
       * <code>optional bytes data = 2;</code>
       */
      boolean hasData();
      /**
       * <code>optional bytes data = 2;</code>
       */
      com.google.protobuf.ByteString getData();
    }
    /**
     * Protobuf type {@code CHIDMessageToRemote.DeviceSendFeatureReport}
     */
    public  static final class DeviceSendFeatureReport extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageToRemote.DeviceSendFeatureReport)
        DeviceSendFeatureReportOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceSendFeatureReport.newBuilder() to construct.
      private DeviceSendFeatureReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceSendFeatureReport() {
        device_ = 0;
        data_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeviceSendFeatureReport(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                device_ = input.readUInt32();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                data_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceSendFeatureReport_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceSendFeatureReport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.Builder.class);
      }

      private int bitField0_;
      public static final int DEVICE_FIELD_NUMBER = 1;
      private int device_;
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public int getDevice() {
        return device_;
      }

      public static final int DATA_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString data_;
      /**
       * <code>optional bytes data = 2;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, device_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, data_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, device_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, data_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport other = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport) obj;

        boolean result = true;
        result = result && (hasDevice() == other.hasDevice());
        if (hasDevice()) {
          result = result && (getDevice()
              == other.getDevice());
        }
        result = result && (hasData() == other.hasData());
        if (hasData()) {
          result = result && getData()
              .equals(other.getData());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDevice()) {
          hash = (37 * hash) + DEVICE_FIELD_NUMBER;
          hash = (53 * hash) + getDevice();
        }
        if (hasData()) {
          hash = (37 * hash) + DATA_FIELD_NUMBER;
          hash = (53 * hash) + getData().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageToRemote.DeviceSendFeatureReport}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageToRemote.DeviceSendFeatureReport)
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReportOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceSendFeatureReport_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceSendFeatureReport_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          device_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          data_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceSendFeatureReport_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport build() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport buildPartial() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport result = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.device_ = device_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.data_ = data_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport other) {
          if (other == SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.getDefaultInstance()) return this;
          if (other.hasDevice()) {
            setDevice(other.getDevice());
          }
          if (other.hasData()) {
            setData(other.getData());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int device_ ;
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public boolean hasDevice() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public int getDevice() {
          return device_;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder setDevice(int value) {
          bitField0_ |= 0x00000001;
          device_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder clearDevice() {
          bitField0_ = (bitField0_ & ~0x00000001);
          device_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes data = 2;</code>
         */
        public boolean hasData() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bytes data = 2;</code>
         */
        public com.google.protobuf.ByteString getData() {
          return data_;
        }
        /**
         * <code>optional bytes data = 2;</code>
         */
        public Builder setData(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          data_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes data = 2;</code>
         */
        public Builder clearData() {
          bitField0_ = (bitField0_ & ~0x00000002);
          data_ = getDefaultInstance().getData();
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageToRemote.DeviceSendFeatureReport)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageToRemote.DeviceSendFeatureReport)
      private static final SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport();
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceSendFeatureReport>
          PARSER = new com.google.protobuf.AbstractParser<DeviceSendFeatureReport>() {
        public DeviceSendFeatureReport parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new DeviceSendFeatureReport(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeviceSendFeatureReport> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceSendFeatureReport> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DeviceGetFeatureReportOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageToRemote.DeviceGetFeatureReport)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 device = 1;</code>
       */
      boolean hasDevice();
      /**
       * <code>optional uint32 device = 1;</code>
       */
      int getDevice();

      /**
       * <code>optional bytes report_number = 2;</code>
       */
      boolean hasReportNumber();
      /**
       * <code>optional bytes report_number = 2;</code>
       */
      com.google.protobuf.ByteString getReportNumber();

      /**
       * <code>optional uint32 length = 3;</code>
       */
      boolean hasLength();
      /**
       * <code>optional uint32 length = 3;</code>
       */
      int getLength();
    }
    /**
     * Protobuf type {@code CHIDMessageToRemote.DeviceGetFeatureReport}
     */
    public  static final class DeviceGetFeatureReport extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageToRemote.DeviceGetFeatureReport)
        DeviceGetFeatureReportOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceGetFeatureReport.newBuilder() to construct.
      private DeviceGetFeatureReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceGetFeatureReport() {
        device_ = 0;
        reportNumber_ = com.google.protobuf.ByteString.EMPTY;
        length_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeviceGetFeatureReport(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                device_ = input.readUInt32();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                reportNumber_ = input.readBytes();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                length_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetFeatureReport_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetFeatureReport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.Builder.class);
      }

      private int bitField0_;
      public static final int DEVICE_FIELD_NUMBER = 1;
      private int device_;
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public int getDevice() {
        return device_;
      }

      public static final int REPORT_NUMBER_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString reportNumber_;
      /**
       * <code>optional bytes report_number = 2;</code>
       */
      public boolean hasReportNumber() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes report_number = 2;</code>
       */
      public com.google.protobuf.ByteString getReportNumber() {
        return reportNumber_;
      }

      public static final int LENGTH_FIELD_NUMBER = 3;
      private int length_;
      /**
       * <code>optional uint32 length = 3;</code>
       */
      public boolean hasLength() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 length = 3;</code>
       */
      public int getLength() {
        return length_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, device_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, reportNumber_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, length_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, device_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, reportNumber_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, length_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport other = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport) obj;

        boolean result = true;
        result = result && (hasDevice() == other.hasDevice());
        if (hasDevice()) {
          result = result && (getDevice()
              == other.getDevice());
        }
        result = result && (hasReportNumber() == other.hasReportNumber());
        if (hasReportNumber()) {
          result = result && getReportNumber()
              .equals(other.getReportNumber());
        }
        result = result && (hasLength() == other.hasLength());
        if (hasLength()) {
          result = result && (getLength()
              == other.getLength());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDevice()) {
          hash = (37 * hash) + DEVICE_FIELD_NUMBER;
          hash = (53 * hash) + getDevice();
        }
        if (hasReportNumber()) {
          hash = (37 * hash) + REPORT_NUMBER_FIELD_NUMBER;
          hash = (53 * hash) + getReportNumber().hashCode();
        }
        if (hasLength()) {
          hash = (37 * hash) + LENGTH_FIELD_NUMBER;
          hash = (53 * hash) + getLength();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageToRemote.DeviceGetFeatureReport}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageToRemote.DeviceGetFeatureReport)
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReportOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetFeatureReport_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetFeatureReport_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          device_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          reportNumber_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          length_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetFeatureReport_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport build() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport buildPartial() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport result = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.device_ = device_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.reportNumber_ = reportNumber_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.length_ = length_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport other) {
          if (other == SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.getDefaultInstance()) return this;
          if (other.hasDevice()) {
            setDevice(other.getDevice());
          }
          if (other.hasReportNumber()) {
            setReportNumber(other.getReportNumber());
          }
          if (other.hasLength()) {
            setLength(other.getLength());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int device_ ;
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public boolean hasDevice() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public int getDevice() {
          return device_;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder setDevice(int value) {
          bitField0_ |= 0x00000001;
          device_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder clearDevice() {
          bitField0_ = (bitField0_ & ~0x00000001);
          device_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString reportNumber_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes report_number = 2;</code>
         */
        public boolean hasReportNumber() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bytes report_number = 2;</code>
         */
        public com.google.protobuf.ByteString getReportNumber() {
          return reportNumber_;
        }
        /**
         * <code>optional bytes report_number = 2;</code>
         */
        public Builder setReportNumber(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          reportNumber_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes report_number = 2;</code>
         */
        public Builder clearReportNumber() {
          bitField0_ = (bitField0_ & ~0x00000002);
          reportNumber_ = getDefaultInstance().getReportNumber();
          onChanged();
          return this;
        }

        private int length_ ;
        /**
         * <code>optional uint32 length = 3;</code>
         */
        public boolean hasLength() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 length = 3;</code>
         */
        public int getLength() {
          return length_;
        }
        /**
         * <code>optional uint32 length = 3;</code>
         */
        public Builder setLength(int value) {
          bitField0_ |= 0x00000004;
          length_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 length = 3;</code>
         */
        public Builder clearLength() {
          bitField0_ = (bitField0_ & ~0x00000004);
          length_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageToRemote.DeviceGetFeatureReport)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageToRemote.DeviceGetFeatureReport)
      private static final SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport();
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceGetFeatureReport>
          PARSER = new com.google.protobuf.AbstractParser<DeviceGetFeatureReport>() {
        public DeviceGetFeatureReport parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new DeviceGetFeatureReport(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeviceGetFeatureReport> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceGetFeatureReport> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DeviceGetVendorStringOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageToRemote.DeviceGetVendorString)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 device = 1;</code>
       */
      boolean hasDevice();
      /**
       * <code>optional uint32 device = 1;</code>
       */
      int getDevice();
    }
    /**
     * Protobuf type {@code CHIDMessageToRemote.DeviceGetVendorString}
     */
    public  static final class DeviceGetVendorString extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageToRemote.DeviceGetVendorString)
        DeviceGetVendorStringOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceGetVendorString.newBuilder() to construct.
      private DeviceGetVendorString(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceGetVendorString() {
        device_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeviceGetVendorString(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                device_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetVendorString_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetVendorString_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.Builder.class);
      }

      private int bitField0_;
      public static final int DEVICE_FIELD_NUMBER = 1;
      private int device_;
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public int getDevice() {
        return device_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, device_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, device_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString other = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString) obj;

        boolean result = true;
        result = result && (hasDevice() == other.hasDevice());
        if (hasDevice()) {
          result = result && (getDevice()
              == other.getDevice());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDevice()) {
          hash = (37 * hash) + DEVICE_FIELD_NUMBER;
          hash = (53 * hash) + getDevice();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageToRemote.DeviceGetVendorString}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageToRemote.DeviceGetVendorString)
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorStringOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetVendorString_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetVendorString_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          device_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetVendorString_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString build() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString buildPartial() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString result = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.device_ = device_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString other) {
          if (other == SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.getDefaultInstance()) return this;
          if (other.hasDevice()) {
            setDevice(other.getDevice());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int device_ ;
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public boolean hasDevice() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public int getDevice() {
          return device_;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder setDevice(int value) {
          bitField0_ |= 0x00000001;
          device_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder clearDevice() {
          bitField0_ = (bitField0_ & ~0x00000001);
          device_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageToRemote.DeviceGetVendorString)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageToRemote.DeviceGetVendorString)
      private static final SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString();
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceGetVendorString>
          PARSER = new com.google.protobuf.AbstractParser<DeviceGetVendorString>() {
        public DeviceGetVendorString parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new DeviceGetVendorString(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeviceGetVendorString> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceGetVendorString> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DeviceGetProductStringOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageToRemote.DeviceGetProductString)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 device = 1;</code>
       */
      boolean hasDevice();
      /**
       * <code>optional uint32 device = 1;</code>
       */
      int getDevice();
    }
    /**
     * Protobuf type {@code CHIDMessageToRemote.DeviceGetProductString}
     */
    public  static final class DeviceGetProductString extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageToRemote.DeviceGetProductString)
        DeviceGetProductStringOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceGetProductString.newBuilder() to construct.
      private DeviceGetProductString(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceGetProductString() {
        device_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeviceGetProductString(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                device_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetProductString_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetProductString_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.Builder.class);
      }

      private int bitField0_;
      public static final int DEVICE_FIELD_NUMBER = 1;
      private int device_;
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public int getDevice() {
        return device_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, device_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, device_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString other = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString) obj;

        boolean result = true;
        result = result && (hasDevice() == other.hasDevice());
        if (hasDevice()) {
          result = result && (getDevice()
              == other.getDevice());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDevice()) {
          hash = (37 * hash) + DEVICE_FIELD_NUMBER;
          hash = (53 * hash) + getDevice();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageToRemote.DeviceGetProductString}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageToRemote.DeviceGetProductString)
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductStringOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetProductString_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetProductString_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          device_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetProductString_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString build() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString buildPartial() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString result = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.device_ = device_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString other) {
          if (other == SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.getDefaultInstance()) return this;
          if (other.hasDevice()) {
            setDevice(other.getDevice());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int device_ ;
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public boolean hasDevice() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public int getDevice() {
          return device_;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder setDevice(int value) {
          bitField0_ |= 0x00000001;
          device_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder clearDevice() {
          bitField0_ = (bitField0_ & ~0x00000001);
          device_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageToRemote.DeviceGetProductString)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageToRemote.DeviceGetProductString)
      private static final SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString();
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceGetProductString>
          PARSER = new com.google.protobuf.AbstractParser<DeviceGetProductString>() {
        public DeviceGetProductString parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new DeviceGetProductString(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeviceGetProductString> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceGetProductString> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DeviceGetSerialNumberStringOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageToRemote.DeviceGetSerialNumberString)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 device = 1;</code>
       */
      boolean hasDevice();
      /**
       * <code>optional uint32 device = 1;</code>
       */
      int getDevice();
    }
    /**
     * Protobuf type {@code CHIDMessageToRemote.DeviceGetSerialNumberString}
     */
    public  static final class DeviceGetSerialNumberString extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageToRemote.DeviceGetSerialNumberString)
        DeviceGetSerialNumberStringOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceGetSerialNumberString.newBuilder() to construct.
      private DeviceGetSerialNumberString(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceGetSerialNumberString() {
        device_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeviceGetSerialNumberString(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                device_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetSerialNumberString_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetSerialNumberString_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.Builder.class);
      }

      private int bitField0_;
      public static final int DEVICE_FIELD_NUMBER = 1;
      private int device_;
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public int getDevice() {
        return device_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, device_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, device_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString other = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString) obj;

        boolean result = true;
        result = result && (hasDevice() == other.hasDevice());
        if (hasDevice()) {
          result = result && (getDevice()
              == other.getDevice());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDevice()) {
          hash = (37 * hash) + DEVICE_FIELD_NUMBER;
          hash = (53 * hash) + getDevice();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageToRemote.DeviceGetSerialNumberString}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageToRemote.DeviceGetSerialNumberString)
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberStringOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetSerialNumberString_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetSerialNumberString_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          device_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceGetSerialNumberString_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString build() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString buildPartial() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString result = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.device_ = device_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString other) {
          if (other == SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.getDefaultInstance()) return this;
          if (other.hasDevice()) {
            setDevice(other.getDevice());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int device_ ;
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public boolean hasDevice() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public int getDevice() {
          return device_;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder setDevice(int value) {
          bitField0_ |= 0x00000001;
          device_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder clearDevice() {
          bitField0_ = (bitField0_ & ~0x00000001);
          device_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageToRemote.DeviceGetSerialNumberString)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageToRemote.DeviceGetSerialNumberString)
      private static final SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString();
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceGetSerialNumberString>
          PARSER = new com.google.protobuf.AbstractParser<DeviceGetSerialNumberString>() {
        public DeviceGetSerialNumberString parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new DeviceGetSerialNumberString(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeviceGetSerialNumberString> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceGetSerialNumberString> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DeviceStartInputReportsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageToRemote.DeviceStartInputReports)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 device = 1;</code>
       */
      boolean hasDevice();
      /**
       * <code>optional uint32 device = 1;</code>
       */
      int getDevice();

      /**
       * <code>optional uint32 length = 2;</code>
       */
      boolean hasLength();
      /**
       * <code>optional uint32 length = 2;</code>
       */
      int getLength();
    }
    /**
     * Protobuf type {@code CHIDMessageToRemote.DeviceStartInputReports}
     */
    public  static final class DeviceStartInputReports extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageToRemote.DeviceStartInputReports)
        DeviceStartInputReportsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceStartInputReports.newBuilder() to construct.
      private DeviceStartInputReports(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceStartInputReports() {
        device_ = 0;
        length_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeviceStartInputReports(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                device_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                length_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceStartInputReports_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceStartInputReports_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.Builder.class);
      }

      private int bitField0_;
      public static final int DEVICE_FIELD_NUMBER = 1;
      private int device_;
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public int getDevice() {
        return device_;
      }

      public static final int LENGTH_FIELD_NUMBER = 2;
      private int length_;
      /**
       * <code>optional uint32 length = 2;</code>
       */
      public boolean hasLength() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 length = 2;</code>
       */
      public int getLength() {
        return length_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, device_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, length_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, device_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, length_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports other = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports) obj;

        boolean result = true;
        result = result && (hasDevice() == other.hasDevice());
        if (hasDevice()) {
          result = result && (getDevice()
              == other.getDevice());
        }
        result = result && (hasLength() == other.hasLength());
        if (hasLength()) {
          result = result && (getLength()
              == other.getLength());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDevice()) {
          hash = (37 * hash) + DEVICE_FIELD_NUMBER;
          hash = (53 * hash) + getDevice();
        }
        if (hasLength()) {
          hash = (37 * hash) + LENGTH_FIELD_NUMBER;
          hash = (53 * hash) + getLength();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageToRemote.DeviceStartInputReports}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageToRemote.DeviceStartInputReports)
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReportsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceStartInputReports_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceStartInputReports_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          device_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          length_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceStartInputReports_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports build() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports buildPartial() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports result = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.device_ = device_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.length_ = length_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports other) {
          if (other == SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.getDefaultInstance()) return this;
          if (other.hasDevice()) {
            setDevice(other.getDevice());
          }
          if (other.hasLength()) {
            setLength(other.getLength());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int device_ ;
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public boolean hasDevice() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public int getDevice() {
          return device_;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder setDevice(int value) {
          bitField0_ |= 0x00000001;
          device_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder clearDevice() {
          bitField0_ = (bitField0_ & ~0x00000001);
          device_ = 0;
          onChanged();
          return this;
        }

        private int length_ ;
        /**
         * <code>optional uint32 length = 2;</code>
         */
        public boolean hasLength() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 length = 2;</code>
         */
        public int getLength() {
          return length_;
        }
        /**
         * <code>optional uint32 length = 2;</code>
         */
        public Builder setLength(int value) {
          bitField0_ |= 0x00000002;
          length_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 length = 2;</code>
         */
        public Builder clearLength() {
          bitField0_ = (bitField0_ & ~0x00000002);
          length_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageToRemote.DeviceStartInputReports)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageToRemote.DeviceStartInputReports)
      private static final SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports();
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceStartInputReports>
          PARSER = new com.google.protobuf.AbstractParser<DeviceStartInputReports>() {
        public DeviceStartInputReports parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new DeviceStartInputReports(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeviceStartInputReports> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceStartInputReports> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DeviceRequestFullReportOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageToRemote.DeviceRequestFullReport)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 device = 1;</code>
       */
      boolean hasDevice();
      /**
       * <code>optional uint32 device = 1;</code>
       */
      int getDevice();
    }
    /**
     * Protobuf type {@code CHIDMessageToRemote.DeviceRequestFullReport}
     */
    public  static final class DeviceRequestFullReport extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageToRemote.DeviceRequestFullReport)
        DeviceRequestFullReportOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceRequestFullReport.newBuilder() to construct.
      private DeviceRequestFullReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceRequestFullReport() {
        device_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeviceRequestFullReport(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                device_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceRequestFullReport_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceRequestFullReport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.Builder.class);
      }

      private int bitField0_;
      public static final int DEVICE_FIELD_NUMBER = 1;
      private int device_;
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public int getDevice() {
        return device_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, device_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, device_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport other = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport) obj;

        boolean result = true;
        result = result && (hasDevice() == other.hasDevice());
        if (hasDevice()) {
          result = result && (getDevice()
              == other.getDevice());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDevice()) {
          hash = (37 * hash) + DEVICE_FIELD_NUMBER;
          hash = (53 * hash) + getDevice();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageToRemote.DeviceRequestFullReport}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageToRemote.DeviceRequestFullReport)
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReportOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceRequestFullReport_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceRequestFullReport_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          device_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceRequestFullReport_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport build() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport buildPartial() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport result = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.device_ = device_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport other) {
          if (other == SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.getDefaultInstance()) return this;
          if (other.hasDevice()) {
            setDevice(other.getDevice());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int device_ ;
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public boolean hasDevice() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public int getDevice() {
          return device_;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder setDevice(int value) {
          bitField0_ |= 0x00000001;
          device_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder clearDevice() {
          bitField0_ = (bitField0_ & ~0x00000001);
          device_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageToRemote.DeviceRequestFullReport)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageToRemote.DeviceRequestFullReport)
      private static final SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport();
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceRequestFullReport>
          PARSER = new com.google.protobuf.AbstractParser<DeviceRequestFullReport>() {
        public DeviceRequestFullReport parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new DeviceRequestFullReport(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeviceRequestFullReport> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceRequestFullReport> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DeviceDisconnectOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageToRemote.DeviceDisconnect)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 device = 1;</code>
       */
      boolean hasDevice();
      /**
       * <code>optional uint32 device = 1;</code>
       */
      int getDevice();

      /**
       * <code>optional .EHIDDeviceDisconnectMethod disconnectMethod = 2 [default = k_EDeviceDisconnectMethodUnknown];</code>
       */
      boolean hasDisconnectMethod();
      /**
       * <code>optional .EHIDDeviceDisconnectMethod disconnectMethod = 2 [default = k_EDeviceDisconnectMethodUnknown];</code>
       */
      SteammessagesHiddevices.EHIDDeviceDisconnectMethod getDisconnectMethod();

      /**
       * <code>optional bytes data = 3;</code>
       */
      boolean hasData();
      /**
       * <code>optional bytes data = 3;</code>
       */
      com.google.protobuf.ByteString getData();
    }
    /**
     * Protobuf type {@code CHIDMessageToRemote.DeviceDisconnect}
     */
    public  static final class DeviceDisconnect extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageToRemote.DeviceDisconnect)
        DeviceDisconnectOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceDisconnect.newBuilder() to construct.
      private DeviceDisconnect(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceDisconnect() {
        device_ = 0;
        disconnectMethod_ = 0;
        data_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeviceDisconnect(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                device_ = input.readUInt32();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                SteammessagesHiddevices.EHIDDeviceDisconnectMethod value = SteammessagesHiddevices.EHIDDeviceDisconnectMethod.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  disconnectMethod_ = rawValue;
                }
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                data_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceDisconnect_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceDisconnect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.Builder.class);
      }

      private int bitField0_;
      public static final int DEVICE_FIELD_NUMBER = 1;
      private int device_;
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public int getDevice() {
        return device_;
      }

      public static final int DISCONNECTMETHOD_FIELD_NUMBER = 2;
      private int disconnectMethod_;
      /**
       * <code>optional .EHIDDeviceDisconnectMethod disconnectMethod = 2 [default = k_EDeviceDisconnectMethodUnknown];</code>
       */
      public boolean hasDisconnectMethod() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .EHIDDeviceDisconnectMethod disconnectMethod = 2 [default = k_EDeviceDisconnectMethodUnknown];</code>
       */
      public SteammessagesHiddevices.EHIDDeviceDisconnectMethod getDisconnectMethod() {
        SteammessagesHiddevices.EHIDDeviceDisconnectMethod result = SteammessagesHiddevices.EHIDDeviceDisconnectMethod.valueOf(disconnectMethod_);
        return result == null ? SteammessagesHiddevices.EHIDDeviceDisconnectMethod.k_EDeviceDisconnectMethodUnknown : result;
      }

      public static final int DATA_FIELD_NUMBER = 3;
      private com.google.protobuf.ByteString data_;
      /**
       * <code>optional bytes data = 3;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes data = 3;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, device_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, disconnectMethod_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, data_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, device_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, disconnectMethod_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, data_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect other = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect) obj;

        boolean result = true;
        result = result && (hasDevice() == other.hasDevice());
        if (hasDevice()) {
          result = result && (getDevice()
              == other.getDevice());
        }
        result = result && (hasDisconnectMethod() == other.hasDisconnectMethod());
        if (hasDisconnectMethod()) {
          result = result && disconnectMethod_ == other.disconnectMethod_;
        }
        result = result && (hasData() == other.hasData());
        if (hasData()) {
          result = result && getData()
              .equals(other.getData());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDevice()) {
          hash = (37 * hash) + DEVICE_FIELD_NUMBER;
          hash = (53 * hash) + getDevice();
        }
        if (hasDisconnectMethod()) {
          hash = (37 * hash) + DISCONNECTMETHOD_FIELD_NUMBER;
          hash = (53 * hash) + disconnectMethod_;
        }
        if (hasData()) {
          hash = (37 * hash) + DATA_FIELD_NUMBER;
          hash = (53 * hash) + getData().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageToRemote.DeviceDisconnect}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageToRemote.DeviceDisconnect)
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnectOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceDisconnect_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceDisconnect_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.class, SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          device_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          disconnectMethod_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          data_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_DeviceDisconnect_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect build() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect buildPartial() {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect result = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.device_ = device_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.disconnectMethod_ = disconnectMethod_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.data_ = data_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect other) {
          if (other == SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.getDefaultInstance()) return this;
          if (other.hasDevice()) {
            setDevice(other.getDevice());
          }
          if (other.hasDisconnectMethod()) {
            setDisconnectMethod(other.getDisconnectMethod());
          }
          if (other.hasData()) {
            setData(other.getData());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int device_ ;
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public boolean hasDevice() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public int getDevice() {
          return device_;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder setDevice(int value) {
          bitField0_ |= 0x00000001;
          device_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder clearDevice() {
          bitField0_ = (bitField0_ & ~0x00000001);
          device_ = 0;
          onChanged();
          return this;
        }

        private int disconnectMethod_ = 0;
        /**
         * <code>optional .EHIDDeviceDisconnectMethod disconnectMethod = 2 [default = k_EDeviceDisconnectMethodUnknown];</code>
         */
        public boolean hasDisconnectMethod() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .EHIDDeviceDisconnectMethod disconnectMethod = 2 [default = k_EDeviceDisconnectMethodUnknown];</code>
         */
        public SteammessagesHiddevices.EHIDDeviceDisconnectMethod getDisconnectMethod() {
          SteammessagesHiddevices.EHIDDeviceDisconnectMethod result = SteammessagesHiddevices.EHIDDeviceDisconnectMethod.valueOf(disconnectMethod_);
          return result == null ? SteammessagesHiddevices.EHIDDeviceDisconnectMethod.k_EDeviceDisconnectMethodUnknown : result;
        }
        /**
         * <code>optional .EHIDDeviceDisconnectMethod disconnectMethod = 2 [default = k_EDeviceDisconnectMethodUnknown];</code>
         */
        public Builder setDisconnectMethod(SteammessagesHiddevices.EHIDDeviceDisconnectMethod value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          disconnectMethod_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .EHIDDeviceDisconnectMethod disconnectMethod = 2 [default = k_EDeviceDisconnectMethodUnknown];</code>
         */
        public Builder clearDisconnectMethod() {
          bitField0_ = (bitField0_ & ~0x00000002);
          disconnectMethod_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes data = 3;</code>
         */
        public boolean hasData() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bytes data = 3;</code>
         */
        public com.google.protobuf.ByteString getData() {
          return data_;
        }
        /**
         * <code>optional bytes data = 3;</code>
         */
        public Builder setData(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          data_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes data = 3;</code>
         */
        public Builder clearData() {
          bitField0_ = (bitField0_ & ~0x00000004);
          data_ = getDefaultInstance().getData();
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageToRemote.DeviceDisconnect)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageToRemote.DeviceDisconnect)
      private static final SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect();
      }

      public static SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceDisconnect>
          PARSER = new com.google.protobuf.AbstractParser<DeviceDisconnect>() {
        public DeviceDisconnect parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new DeviceDisconnect(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeviceDisconnect> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceDisconnect> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    private int commandCase_ = 0;
    private java.lang.Object command_;
    public enum CommandCase
        implements com.google.protobuf.Internal.EnumLite {
      DEVICE_OPEN(2),
      DEVICE_CLOSE(3),
      DEVICE_WRITE(4),
      DEVICE_READ(5),
      DEVICE_SEND_FEATURE_REPORT(6),
      DEVICE_GET_FEATURE_REPORT(7),
      DEVICE_GET_VENDOR_STRING(8),
      DEVICE_GET_PRODUCT_STRING(9),
      DEVICE_GET_SERIAL_NUMBER_STRING(10),
      DEVICE_START_INPUT_REPORTS(11),
      DEVICE_REQUEST_FULL_REPORT(12),
      DEVICE_DISCONNECT(13),
      COMMAND_NOT_SET(0);
      private final int value;
      private CommandCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CommandCase valueOf(int value) {
        return forNumber(value);
      }

      public static CommandCase forNumber(int value) {
        switch (value) {
          case 2: return DEVICE_OPEN;
          case 3: return DEVICE_CLOSE;
          case 4: return DEVICE_WRITE;
          case 5: return DEVICE_READ;
          case 6: return DEVICE_SEND_FEATURE_REPORT;
          case 7: return DEVICE_GET_FEATURE_REPORT;
          case 8: return DEVICE_GET_VENDOR_STRING;
          case 9: return DEVICE_GET_PRODUCT_STRING;
          case 10: return DEVICE_GET_SERIAL_NUMBER_STRING;
          case 11: return DEVICE_START_INPUT_REPORTS;
          case 12: return DEVICE_REQUEST_FULL_REPORT;
          case 13: return DEVICE_DISCONNECT;
          case 0: return COMMAND_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public CommandCase
    getCommandCase() {
      return CommandCase.forNumber(
          commandCase_);
    }

    public static final int REQUEST_ID_FIELD_NUMBER = 1;
    private int requestId_;
    /**
     * <code>optional uint32 request_id = 1;</code>
     */
    public boolean hasRequestId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 request_id = 1;</code>
     */
    public int getRequestId() {
      return requestId_;
    }

    public static final int DEVICE_OPEN_FIELD_NUMBER = 2;
    /**
     * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
     */
    public boolean hasDeviceOpen() {
      return commandCase_ == 2;
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen getDeviceOpen() {
      if (commandCase_ == 2) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpenOrBuilder getDeviceOpenOrBuilder() {
      if (commandCase_ == 2) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.getDefaultInstance();
    }

    public static final int DEVICE_CLOSE_FIELD_NUMBER = 3;
    /**
     * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
     */
    public boolean hasDeviceClose() {
      return commandCase_ == 3;
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose getDeviceClose() {
      if (commandCase_ == 3) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceCloseOrBuilder getDeviceCloseOrBuilder() {
      if (commandCase_ == 3) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.getDefaultInstance();
    }

    public static final int DEVICE_WRITE_FIELD_NUMBER = 4;
    /**
     * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
     */
    public boolean hasDeviceWrite() {
      return commandCase_ == 4;
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite getDeviceWrite() {
      if (commandCase_ == 4) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceWriteOrBuilder getDeviceWriteOrBuilder() {
      if (commandCase_ == 4) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.getDefaultInstance();
    }

    public static final int DEVICE_READ_FIELD_NUMBER = 5;
    /**
     * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
     */
    public boolean hasDeviceRead() {
      return commandCase_ == 5;
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead getDeviceRead() {
      if (commandCase_ == 5) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceReadOrBuilder getDeviceReadOrBuilder() {
      if (commandCase_ == 5) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.getDefaultInstance();
    }

    public static final int DEVICE_SEND_FEATURE_REPORT_FIELD_NUMBER = 6;
    /**
     * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
     */
    public boolean hasDeviceSendFeatureReport() {
      return commandCase_ == 6;
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport getDeviceSendFeatureReport() {
      if (commandCase_ == 6) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReportOrBuilder getDeviceSendFeatureReportOrBuilder() {
      if (commandCase_ == 6) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.getDefaultInstance();
    }

    public static final int DEVICE_GET_FEATURE_REPORT_FIELD_NUMBER = 7;
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
     */
    public boolean hasDeviceGetFeatureReport() {
      return commandCase_ == 7;
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport getDeviceGetFeatureReport() {
      if (commandCase_ == 7) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReportOrBuilder getDeviceGetFeatureReportOrBuilder() {
      if (commandCase_ == 7) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.getDefaultInstance();
    }

    public static final int DEVICE_GET_VENDOR_STRING_FIELD_NUMBER = 8;
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
     */
    public boolean hasDeviceGetVendorString() {
      return commandCase_ == 8;
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString getDeviceGetVendorString() {
      if (commandCase_ == 8) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorStringOrBuilder getDeviceGetVendorStringOrBuilder() {
      if (commandCase_ == 8) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.getDefaultInstance();
    }

    public static final int DEVICE_GET_PRODUCT_STRING_FIELD_NUMBER = 9;
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
     */
    public boolean hasDeviceGetProductString() {
      return commandCase_ == 9;
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString getDeviceGetProductString() {
      if (commandCase_ == 9) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductStringOrBuilder getDeviceGetProductStringOrBuilder() {
      if (commandCase_ == 9) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.getDefaultInstance();
    }

    public static final int DEVICE_GET_SERIAL_NUMBER_STRING_FIELD_NUMBER = 10;
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
     */
    public boolean hasDeviceGetSerialNumberString() {
      return commandCase_ == 10;
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString getDeviceGetSerialNumberString() {
      if (commandCase_ == 10) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberStringOrBuilder getDeviceGetSerialNumberStringOrBuilder() {
      if (commandCase_ == 10) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.getDefaultInstance();
    }

    public static final int DEVICE_START_INPUT_REPORTS_FIELD_NUMBER = 11;
    /**
     * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
     */
    public boolean hasDeviceStartInputReports() {
      return commandCase_ == 11;
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports getDeviceStartInputReports() {
      if (commandCase_ == 11) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReportsOrBuilder getDeviceStartInputReportsOrBuilder() {
      if (commandCase_ == 11) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.getDefaultInstance();
    }

    public static final int DEVICE_REQUEST_FULL_REPORT_FIELD_NUMBER = 12;
    /**
     * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
     */
    public boolean hasDeviceRequestFullReport() {
      return commandCase_ == 12;
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport getDeviceRequestFullReport() {
      if (commandCase_ == 12) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReportOrBuilder getDeviceRequestFullReportOrBuilder() {
      if (commandCase_ == 12) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.getDefaultInstance();
    }

    public static final int DEVICE_DISCONNECT_FIELD_NUMBER = 13;
    /**
     * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
     */
    public boolean hasDeviceDisconnect() {
      return commandCase_ == 13;
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect getDeviceDisconnect() {
      if (commandCase_ == 13) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
     */
    public SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnectOrBuilder getDeviceDisconnectOrBuilder() {
      if (commandCase_ == 13) {
         return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect) command_;
      }
      return SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, requestId_);
      }
      if (commandCase_ == 2) {
        output.writeMessage(2, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen) command_);
      }
      if (commandCase_ == 3) {
        output.writeMessage(3, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose) command_);
      }
      if (commandCase_ == 4) {
        output.writeMessage(4, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite) command_);
      }
      if (commandCase_ == 5) {
        output.writeMessage(5, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead) command_);
      }
      if (commandCase_ == 6) {
        output.writeMessage(6, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport) command_);
      }
      if (commandCase_ == 7) {
        output.writeMessage(7, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport) command_);
      }
      if (commandCase_ == 8) {
        output.writeMessage(8, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString) command_);
      }
      if (commandCase_ == 9) {
        output.writeMessage(9, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString) command_);
      }
      if (commandCase_ == 10) {
        output.writeMessage(10, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString) command_);
      }
      if (commandCase_ == 11) {
        output.writeMessage(11, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports) command_);
      }
      if (commandCase_ == 12) {
        output.writeMessage(12, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport) command_);
      }
      if (commandCase_ == 13) {
        output.writeMessage(13, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect) command_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, requestId_);
      }
      if (commandCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen) command_);
      }
      if (commandCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose) command_);
      }
      if (commandCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite) command_);
      }
      if (commandCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead) command_);
      }
      if (commandCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport) command_);
      }
      if (commandCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport) command_);
      }
      if (commandCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString) command_);
      }
      if (commandCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString) command_);
      }
      if (commandCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString) command_);
      }
      if (commandCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports) command_);
      }
      if (commandCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport) command_);
      }
      if (commandCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, (SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect) command_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesHiddevices.CHIDMessageToRemote)) {
        return super.equals(obj);
      }
      SteammessagesHiddevices.CHIDMessageToRemote other = (SteammessagesHiddevices.CHIDMessageToRemote) obj;

      boolean result = true;
      result = result && (hasRequestId() == other.hasRequestId());
      if (hasRequestId()) {
        result = result && (getRequestId()
            == other.getRequestId());
      }
      result = result && getCommandCase().equals(
          other.getCommandCase());
      if (!result) return false;
      switch (commandCase_) {
        case 2:
          result = result && getDeviceOpen()
              .equals(other.getDeviceOpen());
          break;
        case 3:
          result = result && getDeviceClose()
              .equals(other.getDeviceClose());
          break;
        case 4:
          result = result && getDeviceWrite()
              .equals(other.getDeviceWrite());
          break;
        case 5:
          result = result && getDeviceRead()
              .equals(other.getDeviceRead());
          break;
        case 6:
          result = result && getDeviceSendFeatureReport()
              .equals(other.getDeviceSendFeatureReport());
          break;
        case 7:
          result = result && getDeviceGetFeatureReport()
              .equals(other.getDeviceGetFeatureReport());
          break;
        case 8:
          result = result && getDeviceGetVendorString()
              .equals(other.getDeviceGetVendorString());
          break;
        case 9:
          result = result && getDeviceGetProductString()
              .equals(other.getDeviceGetProductString());
          break;
        case 10:
          result = result && getDeviceGetSerialNumberString()
              .equals(other.getDeviceGetSerialNumberString());
          break;
        case 11:
          result = result && getDeviceStartInputReports()
              .equals(other.getDeviceStartInputReports());
          break;
        case 12:
          result = result && getDeviceRequestFullReport()
              .equals(other.getDeviceRequestFullReport());
          break;
        case 13:
          result = result && getDeviceDisconnect()
              .equals(other.getDeviceDisconnect());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRequestId()) {
        hash = (37 * hash) + REQUEST_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRequestId();
      }
      switch (commandCase_) {
        case 2:
          hash = (37 * hash) + DEVICE_OPEN_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceOpen().hashCode();
          break;
        case 3:
          hash = (37 * hash) + DEVICE_CLOSE_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceClose().hashCode();
          break;
        case 4:
          hash = (37 * hash) + DEVICE_WRITE_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceWrite().hashCode();
          break;
        case 5:
          hash = (37 * hash) + DEVICE_READ_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceRead().hashCode();
          break;
        case 6:
          hash = (37 * hash) + DEVICE_SEND_FEATURE_REPORT_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceSendFeatureReport().hashCode();
          break;
        case 7:
          hash = (37 * hash) + DEVICE_GET_FEATURE_REPORT_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceGetFeatureReport().hashCode();
          break;
        case 8:
          hash = (37 * hash) + DEVICE_GET_VENDOR_STRING_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceGetVendorString().hashCode();
          break;
        case 9:
          hash = (37 * hash) + DEVICE_GET_PRODUCT_STRING_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceGetProductString().hashCode();
          break;
        case 10:
          hash = (37 * hash) + DEVICE_GET_SERIAL_NUMBER_STRING_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceGetSerialNumberString().hashCode();
          break;
        case 11:
          hash = (37 * hash) + DEVICE_START_INPUT_REPORTS_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceStartInputReports().hashCode();
          break;
        case 12:
          hash = (37 * hash) + DEVICE_REQUEST_FULL_REPORT_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceRequestFullReport().hashCode();
          break;
        case 13:
          hash = (37 * hash) + DEVICE_DISCONNECT_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceDisconnect().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesHiddevices.CHIDMessageToRemote parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesHiddevices.CHIDMessageToRemote parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDMessageToRemote parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesHiddevices.CHIDMessageToRemote parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDMessageToRemote parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesHiddevices.CHIDMessageToRemote parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDMessageToRemote parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesHiddevices.CHIDMessageToRemote parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDMessageToRemote parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesHiddevices.CHIDMessageToRemote parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDMessageToRemote parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesHiddevices.CHIDMessageToRemote parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageToRemote prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CHIDMessageToRemote}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CHIDMessageToRemote)
        SteammessagesHiddevices.CHIDMessageToRemoteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageToRemote.class, SteammessagesHiddevices.CHIDMessageToRemote.Builder.class);
      }

      // Construct using SteammessagesHiddevices.CHIDMessageToRemote.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        requestId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        commandCase_ = 0;
        command_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesHiddevices.internal_static_CHIDMessageToRemote_descriptor;
      }

      public SteammessagesHiddevices.CHIDMessageToRemote getDefaultInstanceForType() {
        return SteammessagesHiddevices.CHIDMessageToRemote.getDefaultInstance();
      }

      public SteammessagesHiddevices.CHIDMessageToRemote build() {
        SteammessagesHiddevices.CHIDMessageToRemote result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesHiddevices.CHIDMessageToRemote buildPartial() {
        SteammessagesHiddevices.CHIDMessageToRemote result = new SteammessagesHiddevices.CHIDMessageToRemote(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.requestId_ = requestId_;
        if (commandCase_ == 2) {
          if (deviceOpenBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = deviceOpenBuilder_.build();
          }
        }
        if (commandCase_ == 3) {
          if (deviceCloseBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = deviceCloseBuilder_.build();
          }
        }
        if (commandCase_ == 4) {
          if (deviceWriteBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = deviceWriteBuilder_.build();
          }
        }
        if (commandCase_ == 5) {
          if (deviceReadBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = deviceReadBuilder_.build();
          }
        }
        if (commandCase_ == 6) {
          if (deviceSendFeatureReportBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = deviceSendFeatureReportBuilder_.build();
          }
        }
        if (commandCase_ == 7) {
          if (deviceGetFeatureReportBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = deviceGetFeatureReportBuilder_.build();
          }
        }
        if (commandCase_ == 8) {
          if (deviceGetVendorStringBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = deviceGetVendorStringBuilder_.build();
          }
        }
        if (commandCase_ == 9) {
          if (deviceGetProductStringBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = deviceGetProductStringBuilder_.build();
          }
        }
        if (commandCase_ == 10) {
          if (deviceGetSerialNumberStringBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = deviceGetSerialNumberStringBuilder_.build();
          }
        }
        if (commandCase_ == 11) {
          if (deviceStartInputReportsBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = deviceStartInputReportsBuilder_.build();
          }
        }
        if (commandCase_ == 12) {
          if (deviceRequestFullReportBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = deviceRequestFullReportBuilder_.build();
          }
        }
        if (commandCase_ == 13) {
          if (deviceDisconnectBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = deviceDisconnectBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.commandCase_ = commandCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesHiddevices.CHIDMessageToRemote) {
          return mergeFrom((SteammessagesHiddevices.CHIDMessageToRemote)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageToRemote other) {
        if (other == SteammessagesHiddevices.CHIDMessageToRemote.getDefaultInstance()) return this;
        if (other.hasRequestId()) {
          setRequestId(other.getRequestId());
        }
        switch (other.getCommandCase()) {
          case DEVICE_OPEN: {
            mergeDeviceOpen(other.getDeviceOpen());
            break;
          }
          case DEVICE_CLOSE: {
            mergeDeviceClose(other.getDeviceClose());
            break;
          }
          case DEVICE_WRITE: {
            mergeDeviceWrite(other.getDeviceWrite());
            break;
          }
          case DEVICE_READ: {
            mergeDeviceRead(other.getDeviceRead());
            break;
          }
          case DEVICE_SEND_FEATURE_REPORT: {
            mergeDeviceSendFeatureReport(other.getDeviceSendFeatureReport());
            break;
          }
          case DEVICE_GET_FEATURE_REPORT: {
            mergeDeviceGetFeatureReport(other.getDeviceGetFeatureReport());
            break;
          }
          case DEVICE_GET_VENDOR_STRING: {
            mergeDeviceGetVendorString(other.getDeviceGetVendorString());
            break;
          }
          case DEVICE_GET_PRODUCT_STRING: {
            mergeDeviceGetProductString(other.getDeviceGetProductString());
            break;
          }
          case DEVICE_GET_SERIAL_NUMBER_STRING: {
            mergeDeviceGetSerialNumberString(other.getDeviceGetSerialNumberString());
            break;
          }
          case DEVICE_START_INPUT_REPORTS: {
            mergeDeviceStartInputReports(other.getDeviceStartInputReports());
            break;
          }
          case DEVICE_REQUEST_FULL_REPORT: {
            mergeDeviceRequestFullReport(other.getDeviceRequestFullReport());
            break;
          }
          case DEVICE_DISCONNECT: {
            mergeDeviceDisconnect(other.getDeviceDisconnect());
            break;
          }
          case COMMAND_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesHiddevices.CHIDMessageToRemote parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesHiddevices.CHIDMessageToRemote) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int commandCase_ = 0;
      private java.lang.Object command_;
      public CommandCase
          getCommandCase() {
        return CommandCase.forNumber(
            commandCase_);
      }

      public Builder clearCommand() {
        commandCase_ = 0;
        command_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private int requestId_ ;
      /**
       * <code>optional uint32 request_id = 1;</code>
       */
      public boolean hasRequestId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 request_id = 1;</code>
       */
      public int getRequestId() {
        return requestId_;
      }
      /**
       * <code>optional uint32 request_id = 1;</code>
       */
      public Builder setRequestId(int value) {
        bitField0_ |= 0x00000001;
        requestId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 request_id = 1;</code>
       */
      public Builder clearRequestId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        requestId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen, SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpenOrBuilder> deviceOpenBuilder_;
      /**
       * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
       */
      public boolean hasDeviceOpen() {
        return commandCase_ == 2;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen getDeviceOpen() {
        if (deviceOpenBuilder_ == null) {
          if (commandCase_ == 2) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.getDefaultInstance();
        } else {
          if (commandCase_ == 2) {
            return deviceOpenBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
       */
      public Builder setDeviceOpen(SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen value) {
        if (deviceOpenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          deviceOpenBuilder_.setMessage(value);
        }
        commandCase_ = 2;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
       */
      public Builder setDeviceOpen(
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.Builder builderForValue) {
        if (deviceOpenBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          deviceOpenBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 2;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
       */
      public Builder mergeDeviceOpen(SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen value) {
        if (deviceOpenBuilder_ == null) {
          if (commandCase_ == 2 &&
              command_ != SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.newBuilder((SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 2) {
            deviceOpenBuilder_.mergeFrom(value);
          }
          deviceOpenBuilder_.setMessage(value);
        }
        commandCase_ = 2;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
       */
      public Builder clearDeviceOpen() {
        if (deviceOpenBuilder_ == null) {
          if (commandCase_ == 2) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 2) {
            commandCase_ = 0;
            command_ = null;
          }
          deviceOpenBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.Builder getDeviceOpenBuilder() {
        return getDeviceOpenFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpenOrBuilder getDeviceOpenOrBuilder() {
        if ((commandCase_ == 2) && (deviceOpenBuilder_ != null)) {
          return deviceOpenBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 2) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceOpen device_open = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen, SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpenOrBuilder> 
          getDeviceOpenFieldBuilder() {
        if (deviceOpenBuilder_ == null) {
          if (!(commandCase_ == 2)) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.getDefaultInstance();
          }
          deviceOpenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen, SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpenOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageToRemote.DeviceOpen) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 2;
        onChanged();;
        return deviceOpenBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose, SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceCloseOrBuilder> deviceCloseBuilder_;
      /**
       * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
       */
      public boolean hasDeviceClose() {
        return commandCase_ == 3;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose getDeviceClose() {
        if (deviceCloseBuilder_ == null) {
          if (commandCase_ == 3) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.getDefaultInstance();
        } else {
          if (commandCase_ == 3) {
            return deviceCloseBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
       */
      public Builder setDeviceClose(SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose value) {
        if (deviceCloseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          deviceCloseBuilder_.setMessage(value);
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
       */
      public Builder setDeviceClose(
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.Builder builderForValue) {
        if (deviceCloseBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          deviceCloseBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
       */
      public Builder mergeDeviceClose(SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose value) {
        if (deviceCloseBuilder_ == null) {
          if (commandCase_ == 3 &&
              command_ != SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.newBuilder((SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 3) {
            deviceCloseBuilder_.mergeFrom(value);
          }
          deviceCloseBuilder_.setMessage(value);
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
       */
      public Builder clearDeviceClose() {
        if (deviceCloseBuilder_ == null) {
          if (commandCase_ == 3) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 3) {
            commandCase_ = 0;
            command_ = null;
          }
          deviceCloseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.Builder getDeviceCloseBuilder() {
        return getDeviceCloseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceCloseOrBuilder getDeviceCloseOrBuilder() {
        if ((commandCase_ == 3) && (deviceCloseBuilder_ != null)) {
          return deviceCloseBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 3) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceClose device_close = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose, SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceCloseOrBuilder> 
          getDeviceCloseFieldBuilder() {
        if (deviceCloseBuilder_ == null) {
          if (!(commandCase_ == 3)) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.getDefaultInstance();
          }
          deviceCloseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose, SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceCloseOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageToRemote.DeviceClose) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 3;
        onChanged();;
        return deviceCloseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite, SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceWriteOrBuilder> deviceWriteBuilder_;
      /**
       * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
       */
      public boolean hasDeviceWrite() {
        return commandCase_ == 4;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite getDeviceWrite() {
        if (deviceWriteBuilder_ == null) {
          if (commandCase_ == 4) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.getDefaultInstance();
        } else {
          if (commandCase_ == 4) {
            return deviceWriteBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
       */
      public Builder setDeviceWrite(SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite value) {
        if (deviceWriteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          deviceWriteBuilder_.setMessage(value);
        }
        commandCase_ = 4;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
       */
      public Builder setDeviceWrite(
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.Builder builderForValue) {
        if (deviceWriteBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          deviceWriteBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 4;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
       */
      public Builder mergeDeviceWrite(SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite value) {
        if (deviceWriteBuilder_ == null) {
          if (commandCase_ == 4 &&
              command_ != SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.newBuilder((SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 4) {
            deviceWriteBuilder_.mergeFrom(value);
          }
          deviceWriteBuilder_.setMessage(value);
        }
        commandCase_ = 4;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
       */
      public Builder clearDeviceWrite() {
        if (deviceWriteBuilder_ == null) {
          if (commandCase_ == 4) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 4) {
            commandCase_ = 0;
            command_ = null;
          }
          deviceWriteBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.Builder getDeviceWriteBuilder() {
        return getDeviceWriteFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceWriteOrBuilder getDeviceWriteOrBuilder() {
        if ((commandCase_ == 4) && (deviceWriteBuilder_ != null)) {
          return deviceWriteBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 4) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceWrite device_write = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite, SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceWriteOrBuilder> 
          getDeviceWriteFieldBuilder() {
        if (deviceWriteBuilder_ == null) {
          if (!(commandCase_ == 4)) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.getDefaultInstance();
          }
          deviceWriteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite, SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceWriteOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageToRemote.DeviceWrite) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 4;
        onChanged();;
        return deviceWriteBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead, SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceReadOrBuilder> deviceReadBuilder_;
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
       */
      public boolean hasDeviceRead() {
        return commandCase_ == 5;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead getDeviceRead() {
        if (deviceReadBuilder_ == null) {
          if (commandCase_ == 5) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.getDefaultInstance();
        } else {
          if (commandCase_ == 5) {
            return deviceReadBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
       */
      public Builder setDeviceRead(SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead value) {
        if (deviceReadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          deviceReadBuilder_.setMessage(value);
        }
        commandCase_ = 5;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
       */
      public Builder setDeviceRead(
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.Builder builderForValue) {
        if (deviceReadBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          deviceReadBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 5;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
       */
      public Builder mergeDeviceRead(SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead value) {
        if (deviceReadBuilder_ == null) {
          if (commandCase_ == 5 &&
              command_ != SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.newBuilder((SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 5) {
            deviceReadBuilder_.mergeFrom(value);
          }
          deviceReadBuilder_.setMessage(value);
        }
        commandCase_ = 5;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
       */
      public Builder clearDeviceRead() {
        if (deviceReadBuilder_ == null) {
          if (commandCase_ == 5) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 5) {
            commandCase_ = 0;
            command_ = null;
          }
          deviceReadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.Builder getDeviceReadBuilder() {
        return getDeviceReadFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceReadOrBuilder getDeviceReadOrBuilder() {
        if ((commandCase_ == 5) && (deviceReadBuilder_ != null)) {
          return deviceReadBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 5) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRead device_read = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead, SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceReadOrBuilder> 
          getDeviceReadFieldBuilder() {
        if (deviceReadBuilder_ == null) {
          if (!(commandCase_ == 5)) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.getDefaultInstance();
          }
          deviceReadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead, SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceReadOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRead) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 5;
        onChanged();;
        return deviceReadBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport, SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReportOrBuilder> deviceSendFeatureReportBuilder_;
      /**
       * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
       */
      public boolean hasDeviceSendFeatureReport() {
        return commandCase_ == 6;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport getDeviceSendFeatureReport() {
        if (deviceSendFeatureReportBuilder_ == null) {
          if (commandCase_ == 6) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.getDefaultInstance();
        } else {
          if (commandCase_ == 6) {
            return deviceSendFeatureReportBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
       */
      public Builder setDeviceSendFeatureReport(SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport value) {
        if (deviceSendFeatureReportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          deviceSendFeatureReportBuilder_.setMessage(value);
        }
        commandCase_ = 6;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
       */
      public Builder setDeviceSendFeatureReport(
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.Builder builderForValue) {
        if (deviceSendFeatureReportBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          deviceSendFeatureReportBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 6;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
       */
      public Builder mergeDeviceSendFeatureReport(SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport value) {
        if (deviceSendFeatureReportBuilder_ == null) {
          if (commandCase_ == 6 &&
              command_ != SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.newBuilder((SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 6) {
            deviceSendFeatureReportBuilder_.mergeFrom(value);
          }
          deviceSendFeatureReportBuilder_.setMessage(value);
        }
        commandCase_ = 6;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
       */
      public Builder clearDeviceSendFeatureReport() {
        if (deviceSendFeatureReportBuilder_ == null) {
          if (commandCase_ == 6) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 6) {
            commandCase_ = 0;
            command_ = null;
          }
          deviceSendFeatureReportBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.Builder getDeviceSendFeatureReportBuilder() {
        return getDeviceSendFeatureReportFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReportOrBuilder getDeviceSendFeatureReportOrBuilder() {
        if ((commandCase_ == 6) && (deviceSendFeatureReportBuilder_ != null)) {
          return deviceSendFeatureReportBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 6) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceSendFeatureReport device_send_feature_report = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport, SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReportOrBuilder> 
          getDeviceSendFeatureReportFieldBuilder() {
        if (deviceSendFeatureReportBuilder_ == null) {
          if (!(commandCase_ == 6)) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.getDefaultInstance();
          }
          deviceSendFeatureReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport, SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReportOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageToRemote.DeviceSendFeatureReport) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 6;
        onChanged();;
        return deviceSendFeatureReportBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReportOrBuilder> deviceGetFeatureReportBuilder_;
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
       */
      public boolean hasDeviceGetFeatureReport() {
        return commandCase_ == 7;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport getDeviceGetFeatureReport() {
        if (deviceGetFeatureReportBuilder_ == null) {
          if (commandCase_ == 7) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.getDefaultInstance();
        } else {
          if (commandCase_ == 7) {
            return deviceGetFeatureReportBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
       */
      public Builder setDeviceGetFeatureReport(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport value) {
        if (deviceGetFeatureReportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          deviceGetFeatureReportBuilder_.setMessage(value);
        }
        commandCase_ = 7;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
       */
      public Builder setDeviceGetFeatureReport(
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.Builder builderForValue) {
        if (deviceGetFeatureReportBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          deviceGetFeatureReportBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 7;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
       */
      public Builder mergeDeviceGetFeatureReport(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport value) {
        if (deviceGetFeatureReportBuilder_ == null) {
          if (commandCase_ == 7 &&
              command_ != SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.newBuilder((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 7) {
            deviceGetFeatureReportBuilder_.mergeFrom(value);
          }
          deviceGetFeatureReportBuilder_.setMessage(value);
        }
        commandCase_ = 7;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
       */
      public Builder clearDeviceGetFeatureReport() {
        if (deviceGetFeatureReportBuilder_ == null) {
          if (commandCase_ == 7) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 7) {
            commandCase_ = 0;
            command_ = null;
          }
          deviceGetFeatureReportBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.Builder getDeviceGetFeatureReportBuilder() {
        return getDeviceGetFeatureReportFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReportOrBuilder getDeviceGetFeatureReportOrBuilder() {
        if ((commandCase_ == 7) && (deviceGetFeatureReportBuilder_ != null)) {
          return deviceGetFeatureReportBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 7) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetFeatureReport device_get_feature_report = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReportOrBuilder> 
          getDeviceGetFeatureReportFieldBuilder() {
        if (deviceGetFeatureReportBuilder_ == null) {
          if (!(commandCase_ == 7)) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.getDefaultInstance();
          }
          deviceGetFeatureReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReportOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetFeatureReport) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 7;
        onChanged();;
        return deviceGetFeatureReportBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorStringOrBuilder> deviceGetVendorStringBuilder_;
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
       */
      public boolean hasDeviceGetVendorString() {
        return commandCase_ == 8;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString getDeviceGetVendorString() {
        if (deviceGetVendorStringBuilder_ == null) {
          if (commandCase_ == 8) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.getDefaultInstance();
        } else {
          if (commandCase_ == 8) {
            return deviceGetVendorStringBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
       */
      public Builder setDeviceGetVendorString(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString value) {
        if (deviceGetVendorStringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          deviceGetVendorStringBuilder_.setMessage(value);
        }
        commandCase_ = 8;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
       */
      public Builder setDeviceGetVendorString(
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.Builder builderForValue) {
        if (deviceGetVendorStringBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          deviceGetVendorStringBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 8;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
       */
      public Builder mergeDeviceGetVendorString(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString value) {
        if (deviceGetVendorStringBuilder_ == null) {
          if (commandCase_ == 8 &&
              command_ != SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.newBuilder((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 8) {
            deviceGetVendorStringBuilder_.mergeFrom(value);
          }
          deviceGetVendorStringBuilder_.setMessage(value);
        }
        commandCase_ = 8;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
       */
      public Builder clearDeviceGetVendorString() {
        if (deviceGetVendorStringBuilder_ == null) {
          if (commandCase_ == 8) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 8) {
            commandCase_ = 0;
            command_ = null;
          }
          deviceGetVendorStringBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.Builder getDeviceGetVendorStringBuilder() {
        return getDeviceGetVendorStringFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorStringOrBuilder getDeviceGetVendorStringOrBuilder() {
        if ((commandCase_ == 8) && (deviceGetVendorStringBuilder_ != null)) {
          return deviceGetVendorStringBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 8) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetVendorString device_get_vendor_string = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorStringOrBuilder> 
          getDeviceGetVendorStringFieldBuilder() {
        if (deviceGetVendorStringBuilder_ == null) {
          if (!(commandCase_ == 8)) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.getDefaultInstance();
          }
          deviceGetVendorStringBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorStringOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetVendorString) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 8;
        onChanged();;
        return deviceGetVendorStringBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductStringOrBuilder> deviceGetProductStringBuilder_;
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
       */
      public boolean hasDeviceGetProductString() {
        return commandCase_ == 9;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString getDeviceGetProductString() {
        if (deviceGetProductStringBuilder_ == null) {
          if (commandCase_ == 9) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.getDefaultInstance();
        } else {
          if (commandCase_ == 9) {
            return deviceGetProductStringBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
       */
      public Builder setDeviceGetProductString(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString value) {
        if (deviceGetProductStringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          deviceGetProductStringBuilder_.setMessage(value);
        }
        commandCase_ = 9;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
       */
      public Builder setDeviceGetProductString(
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.Builder builderForValue) {
        if (deviceGetProductStringBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          deviceGetProductStringBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 9;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
       */
      public Builder mergeDeviceGetProductString(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString value) {
        if (deviceGetProductStringBuilder_ == null) {
          if (commandCase_ == 9 &&
              command_ != SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.newBuilder((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 9) {
            deviceGetProductStringBuilder_.mergeFrom(value);
          }
          deviceGetProductStringBuilder_.setMessage(value);
        }
        commandCase_ = 9;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
       */
      public Builder clearDeviceGetProductString() {
        if (deviceGetProductStringBuilder_ == null) {
          if (commandCase_ == 9) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 9) {
            commandCase_ = 0;
            command_ = null;
          }
          deviceGetProductStringBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.Builder getDeviceGetProductStringBuilder() {
        return getDeviceGetProductStringFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductStringOrBuilder getDeviceGetProductStringOrBuilder() {
        if ((commandCase_ == 9) && (deviceGetProductStringBuilder_ != null)) {
          return deviceGetProductStringBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 9) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetProductString device_get_product_string = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductStringOrBuilder> 
          getDeviceGetProductStringFieldBuilder() {
        if (deviceGetProductStringBuilder_ == null) {
          if (!(commandCase_ == 9)) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.getDefaultInstance();
          }
          deviceGetProductStringBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductStringOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetProductString) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 9;
        onChanged();;
        return deviceGetProductStringBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberStringOrBuilder> deviceGetSerialNumberStringBuilder_;
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
       */
      public boolean hasDeviceGetSerialNumberString() {
        return commandCase_ == 10;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString getDeviceGetSerialNumberString() {
        if (deviceGetSerialNumberStringBuilder_ == null) {
          if (commandCase_ == 10) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.getDefaultInstance();
        } else {
          if (commandCase_ == 10) {
            return deviceGetSerialNumberStringBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
       */
      public Builder setDeviceGetSerialNumberString(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString value) {
        if (deviceGetSerialNumberStringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          deviceGetSerialNumberStringBuilder_.setMessage(value);
        }
        commandCase_ = 10;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
       */
      public Builder setDeviceGetSerialNumberString(
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.Builder builderForValue) {
        if (deviceGetSerialNumberStringBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          deviceGetSerialNumberStringBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 10;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
       */
      public Builder mergeDeviceGetSerialNumberString(SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString value) {
        if (deviceGetSerialNumberStringBuilder_ == null) {
          if (commandCase_ == 10 &&
              command_ != SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.newBuilder((SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 10) {
            deviceGetSerialNumberStringBuilder_.mergeFrom(value);
          }
          deviceGetSerialNumberStringBuilder_.setMessage(value);
        }
        commandCase_ = 10;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
       */
      public Builder clearDeviceGetSerialNumberString() {
        if (deviceGetSerialNumberStringBuilder_ == null) {
          if (commandCase_ == 10) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 10) {
            commandCase_ = 0;
            command_ = null;
          }
          deviceGetSerialNumberStringBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.Builder getDeviceGetSerialNumberStringBuilder() {
        return getDeviceGetSerialNumberStringFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberStringOrBuilder getDeviceGetSerialNumberStringOrBuilder() {
        if ((commandCase_ == 10) && (deviceGetSerialNumberStringBuilder_ != null)) {
          return deviceGetSerialNumberStringBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 10) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceGetSerialNumberString device_get_serial_number_string = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberStringOrBuilder> 
          getDeviceGetSerialNumberStringFieldBuilder() {
        if (deviceGetSerialNumberStringBuilder_ == null) {
          if (!(commandCase_ == 10)) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.getDefaultInstance();
          }
          deviceGetSerialNumberStringBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberStringOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageToRemote.DeviceGetSerialNumberString) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 10;
        onChanged();;
        return deviceGetSerialNumberStringBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports, SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReportsOrBuilder> deviceStartInputReportsBuilder_;
      /**
       * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
       */
      public boolean hasDeviceStartInputReports() {
        return commandCase_ == 11;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports getDeviceStartInputReports() {
        if (deviceStartInputReportsBuilder_ == null) {
          if (commandCase_ == 11) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.getDefaultInstance();
        } else {
          if (commandCase_ == 11) {
            return deviceStartInputReportsBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
       */
      public Builder setDeviceStartInputReports(SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports value) {
        if (deviceStartInputReportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          deviceStartInputReportsBuilder_.setMessage(value);
        }
        commandCase_ = 11;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
       */
      public Builder setDeviceStartInputReports(
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.Builder builderForValue) {
        if (deviceStartInputReportsBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          deviceStartInputReportsBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 11;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
       */
      public Builder mergeDeviceStartInputReports(SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports value) {
        if (deviceStartInputReportsBuilder_ == null) {
          if (commandCase_ == 11 &&
              command_ != SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.newBuilder((SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 11) {
            deviceStartInputReportsBuilder_.mergeFrom(value);
          }
          deviceStartInputReportsBuilder_.setMessage(value);
        }
        commandCase_ = 11;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
       */
      public Builder clearDeviceStartInputReports() {
        if (deviceStartInputReportsBuilder_ == null) {
          if (commandCase_ == 11) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 11) {
            commandCase_ = 0;
            command_ = null;
          }
          deviceStartInputReportsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.Builder getDeviceStartInputReportsBuilder() {
        return getDeviceStartInputReportsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReportsOrBuilder getDeviceStartInputReportsOrBuilder() {
        if ((commandCase_ == 11) && (deviceStartInputReportsBuilder_ != null)) {
          return deviceStartInputReportsBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 11) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceStartInputReports device_start_input_reports = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports, SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReportsOrBuilder> 
          getDeviceStartInputReportsFieldBuilder() {
        if (deviceStartInputReportsBuilder_ == null) {
          if (!(commandCase_ == 11)) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.getDefaultInstance();
          }
          deviceStartInputReportsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports, SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReportsOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageToRemote.DeviceStartInputReports) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 11;
        onChanged();;
        return deviceStartInputReportsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport, SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReportOrBuilder> deviceRequestFullReportBuilder_;
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
       */
      public boolean hasDeviceRequestFullReport() {
        return commandCase_ == 12;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport getDeviceRequestFullReport() {
        if (deviceRequestFullReportBuilder_ == null) {
          if (commandCase_ == 12) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.getDefaultInstance();
        } else {
          if (commandCase_ == 12) {
            return deviceRequestFullReportBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
       */
      public Builder setDeviceRequestFullReport(SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport value) {
        if (deviceRequestFullReportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          deviceRequestFullReportBuilder_.setMessage(value);
        }
        commandCase_ = 12;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
       */
      public Builder setDeviceRequestFullReport(
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.Builder builderForValue) {
        if (deviceRequestFullReportBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          deviceRequestFullReportBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 12;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
       */
      public Builder mergeDeviceRequestFullReport(SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport value) {
        if (deviceRequestFullReportBuilder_ == null) {
          if (commandCase_ == 12 &&
              command_ != SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.newBuilder((SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 12) {
            deviceRequestFullReportBuilder_.mergeFrom(value);
          }
          deviceRequestFullReportBuilder_.setMessage(value);
        }
        commandCase_ = 12;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
       */
      public Builder clearDeviceRequestFullReport() {
        if (deviceRequestFullReportBuilder_ == null) {
          if (commandCase_ == 12) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 12) {
            commandCase_ = 0;
            command_ = null;
          }
          deviceRequestFullReportBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.Builder getDeviceRequestFullReportBuilder() {
        return getDeviceRequestFullReportFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReportOrBuilder getDeviceRequestFullReportOrBuilder() {
        if ((commandCase_ == 12) && (deviceRequestFullReportBuilder_ != null)) {
          return deviceRequestFullReportBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 12) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceRequestFullReport device_request_full_report = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport, SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReportOrBuilder> 
          getDeviceRequestFullReportFieldBuilder() {
        if (deviceRequestFullReportBuilder_ == null) {
          if (!(commandCase_ == 12)) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.getDefaultInstance();
          }
          deviceRequestFullReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport, SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReportOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageToRemote.DeviceRequestFullReport) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 12;
        onChanged();;
        return deviceRequestFullReportBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect, SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnectOrBuilder> deviceDisconnectBuilder_;
      /**
       * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
       */
      public boolean hasDeviceDisconnect() {
        return commandCase_ == 13;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect getDeviceDisconnect() {
        if (deviceDisconnectBuilder_ == null) {
          if (commandCase_ == 13) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.getDefaultInstance();
        } else {
          if (commandCase_ == 13) {
            return deviceDisconnectBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
       */
      public Builder setDeviceDisconnect(SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect value) {
        if (deviceDisconnectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          deviceDisconnectBuilder_.setMessage(value);
        }
        commandCase_ = 13;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
       */
      public Builder setDeviceDisconnect(
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.Builder builderForValue) {
        if (deviceDisconnectBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          deviceDisconnectBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 13;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
       */
      public Builder mergeDeviceDisconnect(SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect value) {
        if (deviceDisconnectBuilder_ == null) {
          if (commandCase_ == 13 &&
              command_ != SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.newBuilder((SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 13) {
            deviceDisconnectBuilder_.mergeFrom(value);
          }
          deviceDisconnectBuilder_.setMessage(value);
        }
        commandCase_ = 13;
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
       */
      public Builder clearDeviceDisconnect() {
        if (deviceDisconnectBuilder_ == null) {
          if (commandCase_ == 13) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 13) {
            commandCase_ = 0;
            command_ = null;
          }
          deviceDisconnectBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.Builder getDeviceDisconnectBuilder() {
        return getDeviceDisconnectFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
       */
      public SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnectOrBuilder getDeviceDisconnectOrBuilder() {
        if ((commandCase_ == 13) && (deviceDisconnectBuilder_ != null)) {
          return deviceDisconnectBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 13) {
            return (SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect) command_;
          }
          return SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageToRemote.DeviceDisconnect device_disconnect = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect, SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnectOrBuilder> 
          getDeviceDisconnectFieldBuilder() {
        if (deviceDisconnectBuilder_ == null) {
          if (!(commandCase_ == 13)) {
            command_ = SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.getDefaultInstance();
          }
          deviceDisconnectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect, SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect.Builder, SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnectOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageToRemote.DeviceDisconnect) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 13;
        onChanged();;
        return deviceDisconnectBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CHIDMessageToRemote)
    }

    // @@protoc_insertion_point(class_scope:CHIDMessageToRemote)
    private static final SteammessagesHiddevices.CHIDMessageToRemote DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageToRemote();
    }

    public static SteammessagesHiddevices.CHIDMessageToRemote getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CHIDMessageToRemote>
        PARSER = new com.google.protobuf.AbstractParser<CHIDMessageToRemote>() {
      public CHIDMessageToRemote parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CHIDMessageToRemote(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CHIDMessageToRemote> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CHIDMessageToRemote> getParserForType() {
      return PARSER;
    }

    public SteammessagesHiddevices.CHIDMessageToRemote getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CHIDMessageFromRemoteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CHIDMessageFromRemote)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
     */
    boolean hasUpdateDeviceList();
    /**
     * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
     */
    SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList getUpdateDeviceList();
    /**
     * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
     */
    SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceListOrBuilder getUpdateDeviceListOrBuilder();

    /**
     * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
     */
    boolean hasResponse();
    /**
     * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
     */
    SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse getResponse();
    /**
     * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
     */
    SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponseOrBuilder getResponseOrBuilder();

    /**
     * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
     */
    boolean hasReports();
    /**
     * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
     */
    SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports getReports();
    /**
     * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
     */
    SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReportsOrBuilder getReportsOrBuilder();

    /**
     * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
     */
    boolean hasCloseDevice();
    /**
     * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
     */
    SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice getCloseDevice();
    /**
     * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
     */
    SteammessagesHiddevices.CHIDMessageFromRemote.CloseDeviceOrBuilder getCloseDeviceOrBuilder();

    /**
     * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
     */
    boolean hasCloseAllDevices();
    /**
     * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
     */
    SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices getCloseAllDevices();
    /**
     * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
     */
    SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevicesOrBuilder getCloseAllDevicesOrBuilder();

    public SteammessagesHiddevices.CHIDMessageFromRemote.CommandCase getCommandCase();
  }
  /**
   * Protobuf type {@code CHIDMessageFromRemote}
   */
  public  static final class CHIDMessageFromRemote extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CHIDMessageFromRemote)
      CHIDMessageFromRemoteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CHIDMessageFromRemote.newBuilder() to construct.
    private CHIDMessageFromRemote(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CHIDMessageFromRemote() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CHIDMessageFromRemote(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.Builder subBuilder = null;
              if (commandCase_ == 1) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 1;
              break;
            }
            case 18: {
              SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.Builder subBuilder = null;
              if (commandCase_ == 2) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 2;
              break;
            }
            case 26: {
              SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.Builder subBuilder = null;
              if (commandCase_ == 3) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 3;
              break;
            }
            case 34: {
              SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.Builder subBuilder = null;
              if (commandCase_ == 4) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 4;
              break;
            }
            case 42: {
              SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.Builder subBuilder = null;
              if (commandCase_ == 5) {
                subBuilder = ((SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 5;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesHiddevices.CHIDMessageFromRemote.class, SteammessagesHiddevices.CHIDMessageFromRemote.Builder.class);
    }

    public interface UpdateDeviceListOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageFromRemote.UpdateDeviceList)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .CHIDDeviceInfo devices = 1;</code>
       */
      java.util.List<SteammessagesHiddevices.CHIDDeviceInfo> 
          getDevicesList();
      /**
       * <code>repeated .CHIDDeviceInfo devices = 1;</code>
       */
      SteammessagesHiddevices.CHIDDeviceInfo getDevices(int index);
      /**
       * <code>repeated .CHIDDeviceInfo devices = 1;</code>
       */
      int getDevicesCount();
      /**
       * <code>repeated .CHIDDeviceInfo devices = 1;</code>
       */
      java.util.List<? extends SteammessagesHiddevices.CHIDDeviceInfoOrBuilder> 
          getDevicesOrBuilderList();
      /**
       * <code>repeated .CHIDDeviceInfo devices = 1;</code>
       */
      SteammessagesHiddevices.CHIDDeviceInfoOrBuilder getDevicesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code CHIDMessageFromRemote.UpdateDeviceList}
     */
    public  static final class UpdateDeviceList extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageFromRemote.UpdateDeviceList)
        UpdateDeviceListOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use UpdateDeviceList.newBuilder() to construct.
      private UpdateDeviceList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private UpdateDeviceList() {
        devices_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private UpdateDeviceList(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  devices_ = new java.util.ArrayList<SteammessagesHiddevices.CHIDDeviceInfo>();
                  mutable_bitField0_ |= 0x00000001;
                }
                devices_.add(
                    input.readMessage(SteammessagesHiddevices.CHIDDeviceInfo.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            devices_ = java.util.Collections.unmodifiableList(devices_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_UpdateDeviceList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_UpdateDeviceList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.class, SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.Builder.class);
      }

      public static final int DEVICES_FIELD_NUMBER = 1;
      private java.util.List<SteammessagesHiddevices.CHIDDeviceInfo> devices_;
      /**
       * <code>repeated .CHIDDeviceInfo devices = 1;</code>
       */
      public java.util.List<SteammessagesHiddevices.CHIDDeviceInfo> getDevicesList() {
        return devices_;
      }
      /**
       * <code>repeated .CHIDDeviceInfo devices = 1;</code>
       */
      public java.util.List<? extends SteammessagesHiddevices.CHIDDeviceInfoOrBuilder> 
          getDevicesOrBuilderList() {
        return devices_;
      }
      /**
       * <code>repeated .CHIDDeviceInfo devices = 1;</code>
       */
      public int getDevicesCount() {
        return devices_.size();
      }
      /**
       * <code>repeated .CHIDDeviceInfo devices = 1;</code>
       */
      public SteammessagesHiddevices.CHIDDeviceInfo getDevices(int index) {
        return devices_.get(index);
      }
      /**
       * <code>repeated .CHIDDeviceInfo devices = 1;</code>
       */
      public SteammessagesHiddevices.CHIDDeviceInfoOrBuilder getDevicesOrBuilder(
          int index) {
        return devices_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < devices_.size(); i++) {
          output.writeMessage(1, devices_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < devices_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, devices_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList other = (SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList) obj;

        boolean result = true;
        result = result && getDevicesList()
            .equals(other.getDevicesList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getDevicesCount() > 0) {
          hash = (37 * hash) + DEVICES_FIELD_NUMBER;
          hash = (53 * hash) + getDevicesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageFromRemote.UpdateDeviceList}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageFromRemote.UpdateDeviceList)
          SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceListOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_UpdateDeviceList_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_UpdateDeviceList_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.class, SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getDevicesFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (devicesBuilder_ == null) {
            devices_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            devicesBuilder_.clear();
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_UpdateDeviceList_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList build() {
          SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList buildPartial() {
          SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList result = new SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList(this);
          int from_bitField0_ = bitField0_;
          if (devicesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              devices_ = java.util.Collections.unmodifiableList(devices_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.devices_ = devices_;
          } else {
            result.devices_ = devicesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList other) {
          if (other == SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.getDefaultInstance()) return this;
          if (devicesBuilder_ == null) {
            if (!other.devices_.isEmpty()) {
              if (devices_.isEmpty()) {
                devices_ = other.devices_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureDevicesIsMutable();
                devices_.addAll(other.devices_);
              }
              onChanged();
            }
          } else {
            if (!other.devices_.isEmpty()) {
              if (devicesBuilder_.isEmpty()) {
                devicesBuilder_.dispose();
                devicesBuilder_ = null;
                devices_ = other.devices_;
                bitField0_ = (bitField0_ & ~0x00000001);
                devicesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getDevicesFieldBuilder() : null;
              } else {
                devicesBuilder_.addAllMessages(other.devices_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<SteammessagesHiddevices.CHIDDeviceInfo> devices_ =
          java.util.Collections.emptyList();
        private void ensureDevicesIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            devices_ = new java.util.ArrayList<SteammessagesHiddevices.CHIDDeviceInfo>(devices_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            SteammessagesHiddevices.CHIDDeviceInfo, SteammessagesHiddevices.CHIDDeviceInfo.Builder, SteammessagesHiddevices.CHIDDeviceInfoOrBuilder> devicesBuilder_;

        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public java.util.List<SteammessagesHiddevices.CHIDDeviceInfo> getDevicesList() {
          if (devicesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(devices_);
          } else {
            return devicesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public int getDevicesCount() {
          if (devicesBuilder_ == null) {
            return devices_.size();
          } else {
            return devicesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public SteammessagesHiddevices.CHIDDeviceInfo getDevices(int index) {
          if (devicesBuilder_ == null) {
            return devices_.get(index);
          } else {
            return devicesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public Builder setDevices(
            int index, SteammessagesHiddevices.CHIDDeviceInfo value) {
          if (devicesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDevicesIsMutable();
            devices_.set(index, value);
            onChanged();
          } else {
            devicesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public Builder setDevices(
            int index, SteammessagesHiddevices.CHIDDeviceInfo.Builder builderForValue) {
          if (devicesBuilder_ == null) {
            ensureDevicesIsMutable();
            devices_.set(index, builderForValue.build());
            onChanged();
          } else {
            devicesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public Builder addDevices(SteammessagesHiddevices.CHIDDeviceInfo value) {
          if (devicesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDevicesIsMutable();
            devices_.add(value);
            onChanged();
          } else {
            devicesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public Builder addDevices(
            int index, SteammessagesHiddevices.CHIDDeviceInfo value) {
          if (devicesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDevicesIsMutable();
            devices_.add(index, value);
            onChanged();
          } else {
            devicesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public Builder addDevices(
            SteammessagesHiddevices.CHIDDeviceInfo.Builder builderForValue) {
          if (devicesBuilder_ == null) {
            ensureDevicesIsMutable();
            devices_.add(builderForValue.build());
            onChanged();
          } else {
            devicesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public Builder addDevices(
            int index, SteammessagesHiddevices.CHIDDeviceInfo.Builder builderForValue) {
          if (devicesBuilder_ == null) {
            ensureDevicesIsMutable();
            devices_.add(index, builderForValue.build());
            onChanged();
          } else {
            devicesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public Builder addAllDevices(
            java.lang.Iterable<? extends SteammessagesHiddevices.CHIDDeviceInfo> values) {
          if (devicesBuilder_ == null) {
            ensureDevicesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, devices_);
            onChanged();
          } else {
            devicesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public Builder clearDevices() {
          if (devicesBuilder_ == null) {
            devices_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            devicesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public Builder removeDevices(int index) {
          if (devicesBuilder_ == null) {
            ensureDevicesIsMutable();
            devices_.remove(index);
            onChanged();
          } else {
            devicesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public SteammessagesHiddevices.CHIDDeviceInfo.Builder getDevicesBuilder(
            int index) {
          return getDevicesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public SteammessagesHiddevices.CHIDDeviceInfoOrBuilder getDevicesOrBuilder(
            int index) {
          if (devicesBuilder_ == null) {
            return devices_.get(index);  } else {
            return devicesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public java.util.List<? extends SteammessagesHiddevices.CHIDDeviceInfoOrBuilder> 
             getDevicesOrBuilderList() {
          if (devicesBuilder_ != null) {
            return devicesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(devices_);
          }
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public SteammessagesHiddevices.CHIDDeviceInfo.Builder addDevicesBuilder() {
          return getDevicesFieldBuilder().addBuilder(
              SteammessagesHiddevices.CHIDDeviceInfo.getDefaultInstance());
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public SteammessagesHiddevices.CHIDDeviceInfo.Builder addDevicesBuilder(
            int index) {
          return getDevicesFieldBuilder().addBuilder(
              index, SteammessagesHiddevices.CHIDDeviceInfo.getDefaultInstance());
        }
        /**
         * <code>repeated .CHIDDeviceInfo devices = 1;</code>
         */
        public java.util.List<SteammessagesHiddevices.CHIDDeviceInfo.Builder> 
             getDevicesBuilderList() {
          return getDevicesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            SteammessagesHiddevices.CHIDDeviceInfo, SteammessagesHiddevices.CHIDDeviceInfo.Builder, SteammessagesHiddevices.CHIDDeviceInfoOrBuilder> 
            getDevicesFieldBuilder() {
          if (devicesBuilder_ == null) {
            devicesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                SteammessagesHiddevices.CHIDDeviceInfo, SteammessagesHiddevices.CHIDDeviceInfo.Builder, SteammessagesHiddevices.CHIDDeviceInfoOrBuilder>(
                    devices_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            devices_ = null;
          }
          return devicesBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageFromRemote.UpdateDeviceList)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageFromRemote.UpdateDeviceList)
      private static final SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList();
      }

      public static SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<UpdateDeviceList>
          PARSER = new com.google.protobuf.AbstractParser<UpdateDeviceList>() {
        public UpdateDeviceList parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new UpdateDeviceList(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<UpdateDeviceList> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<UpdateDeviceList> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RequestResponseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageFromRemote.RequestResponse)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 request_id = 1;</code>
       */
      boolean hasRequestId();
      /**
       * <code>optional uint32 request_id = 1;</code>
       */
      int getRequestId();

      /**
       * <code>optional int32 result = 2;</code>
       */
      boolean hasResult();
      /**
       * <code>optional int32 result = 2;</code>
       */
      int getResult();

      /**
       * <code>optional bytes data = 3;</code>
       */
      boolean hasData();
      /**
       * <code>optional bytes data = 3;</code>
       */
      com.google.protobuf.ByteString getData();
    }
    /**
     * Protobuf type {@code CHIDMessageFromRemote.RequestResponse}
     */
    public  static final class RequestResponse extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageFromRemote.RequestResponse)
        RequestResponseOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use RequestResponse.newBuilder() to construct.
      private RequestResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RequestResponse() {
        requestId_ = 0;
        result_ = 0;
        data_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private RequestResponse(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                requestId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                result_ = input.readInt32();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                data_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_RequestResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_RequestResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.class, SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.Builder.class);
      }

      private int bitField0_;
      public static final int REQUEST_ID_FIELD_NUMBER = 1;
      private int requestId_;
      /**
       * <code>optional uint32 request_id = 1;</code>
       */
      public boolean hasRequestId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 request_id = 1;</code>
       */
      public int getRequestId() {
        return requestId_;
      }

      public static final int RESULT_FIELD_NUMBER = 2;
      private int result_;
      /**
       * <code>optional int32 result = 2;</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 result = 2;</code>
       */
      public int getResult() {
        return result_;
      }

      public static final int DATA_FIELD_NUMBER = 3;
      private com.google.protobuf.ByteString data_;
      /**
       * <code>optional bytes data = 3;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes data = 3;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, requestId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, result_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, data_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, requestId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, result_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, data_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse other = (SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse) obj;

        boolean result = true;
        result = result && (hasRequestId() == other.hasRequestId());
        if (hasRequestId()) {
          result = result && (getRequestId()
              == other.getRequestId());
        }
        result = result && (hasResult() == other.hasResult());
        if (hasResult()) {
          result = result && (getResult()
              == other.getResult());
        }
        result = result && (hasData() == other.hasData());
        if (hasData()) {
          result = result && getData()
              .equals(other.getData());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasRequestId()) {
          hash = (37 * hash) + REQUEST_ID_FIELD_NUMBER;
          hash = (53 * hash) + getRequestId();
        }
        if (hasResult()) {
          hash = (37 * hash) + RESULT_FIELD_NUMBER;
          hash = (53 * hash) + getResult();
        }
        if (hasData()) {
          hash = (37 * hash) + DATA_FIELD_NUMBER;
          hash = (53 * hash) + getData().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageFromRemote.RequestResponse}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageFromRemote.RequestResponse)
          SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_RequestResponse_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_RequestResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.class, SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          requestId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          result_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          data_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_RequestResponse_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse build() {
          SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse buildPartial() {
          SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse result = new SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.requestId_ = requestId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.result_ = result_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.data_ = data_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse other) {
          if (other == SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.getDefaultInstance()) return this;
          if (other.hasRequestId()) {
            setRequestId(other.getRequestId());
          }
          if (other.hasResult()) {
            setResult(other.getResult());
          }
          if (other.hasData()) {
            setData(other.getData());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int requestId_ ;
        /**
         * <code>optional uint32 request_id = 1;</code>
         */
        public boolean hasRequestId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 request_id = 1;</code>
         */
        public int getRequestId() {
          return requestId_;
        }
        /**
         * <code>optional uint32 request_id = 1;</code>
         */
        public Builder setRequestId(int value) {
          bitField0_ |= 0x00000001;
          requestId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 request_id = 1;</code>
         */
        public Builder clearRequestId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          requestId_ = 0;
          onChanged();
          return this;
        }

        private int result_ ;
        /**
         * <code>optional int32 result = 2;</code>
         */
        public boolean hasResult() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 result = 2;</code>
         */
        public int getResult() {
          return result_;
        }
        /**
         * <code>optional int32 result = 2;</code>
         */
        public Builder setResult(int value) {
          bitField0_ |= 0x00000002;
          result_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 result = 2;</code>
         */
        public Builder clearResult() {
          bitField0_ = (bitField0_ & ~0x00000002);
          result_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes data = 3;</code>
         */
        public boolean hasData() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bytes data = 3;</code>
         */
        public com.google.protobuf.ByteString getData() {
          return data_;
        }
        /**
         * <code>optional bytes data = 3;</code>
         */
        public Builder setData(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          data_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes data = 3;</code>
         */
        public Builder clearData() {
          bitField0_ = (bitField0_ & ~0x00000004);
          data_ = getDefaultInstance().getData();
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageFromRemote.RequestResponse)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageFromRemote.RequestResponse)
      private static final SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse();
      }

      public static SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<RequestResponse>
          PARSER = new com.google.protobuf.AbstractParser<RequestResponse>() {
        public RequestResponse parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new RequestResponse(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<RequestResponse> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RequestResponse> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DeviceInputReportsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageFromRemote.DeviceInputReports)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
       */
      java.util.List<SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport> 
          getDeviceReportsList();
      /**
       * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
       */
      SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport getDeviceReports(int index);
      /**
       * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
       */
      int getDeviceReportsCount();
      /**
       * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
       */
      java.util.List<? extends SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReportOrBuilder> 
          getDeviceReportsOrBuilderList();
      /**
       * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
       */
      SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReportOrBuilder getDeviceReportsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code CHIDMessageFromRemote.DeviceInputReports}
     */
    public  static final class DeviceInputReports extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageFromRemote.DeviceInputReports)
        DeviceInputReportsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceInputReports.newBuilder() to construct.
      private DeviceInputReports(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceInputReports() {
        deviceReports_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeviceInputReports(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  deviceReports_ = new java.util.ArrayList<SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport>();
                  mutable_bitField0_ |= 0x00000001;
                }
                deviceReports_.add(
                    input.readMessage(SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            deviceReports_ = java.util.Collections.unmodifiableList(deviceReports_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_DeviceInputReports_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_DeviceInputReports_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.class, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.Builder.class);
      }

      public interface DeviceInputReportOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 device = 1;</code>
         */
        boolean hasDevice();
        /**
         * <code>optional uint32 device = 1;</code>
         */
        int getDevice();

        /**
         * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
         */
        java.util.List<SteammessagesHiddevices.CHIDDeviceInputReport> 
            getReportsList();
        /**
         * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
         */
        SteammessagesHiddevices.CHIDDeviceInputReport getReports(int index);
        /**
         * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
         */
        int getReportsCount();
        /**
         * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
         */
        java.util.List<? extends SteammessagesHiddevices.CHIDDeviceInputReportOrBuilder> 
            getReportsOrBuilderList();
        /**
         * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
         */
        SteammessagesHiddevices.CHIDDeviceInputReportOrBuilder getReportsOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport}
       */
      public  static final class DeviceInputReport extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport)
          DeviceInputReportOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use DeviceInputReport.newBuilder() to construct.
        private DeviceInputReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private DeviceInputReport() {
          device_ = 0;
          reports_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private DeviceInputReport(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  device_ = input.readUInt32();
                  break;
                }
                case 18: {
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    reports_ = new java.util.ArrayList<SteammessagesHiddevices.CHIDDeviceInputReport>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  reports_.add(
                      input.readMessage(SteammessagesHiddevices.CHIDDeviceInputReport.PARSER, extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              reports_ = java.util.Collections.unmodifiableList(reports_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.class, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.Builder.class);
        }

        private int bitField0_;
        public static final int DEVICE_FIELD_NUMBER = 1;
        private int device_;
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public boolean hasDevice() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public int getDevice() {
          return device_;
        }

        public static final int REPORTS_FIELD_NUMBER = 2;
        private java.util.List<SteammessagesHiddevices.CHIDDeviceInputReport> reports_;
        /**
         * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
         */
        public java.util.List<SteammessagesHiddevices.CHIDDeviceInputReport> getReportsList() {
          return reports_;
        }
        /**
         * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
         */
        public java.util.List<? extends SteammessagesHiddevices.CHIDDeviceInputReportOrBuilder> 
            getReportsOrBuilderList() {
          return reports_;
        }
        /**
         * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
         */
        public int getReportsCount() {
          return reports_.size();
        }
        /**
         * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
         */
        public SteammessagesHiddevices.CHIDDeviceInputReport getReports(int index) {
          return reports_.get(index);
        }
        /**
         * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
         */
        public SteammessagesHiddevices.CHIDDeviceInputReportOrBuilder getReportsOrBuilder(
            int index) {
          return reports_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, device_);
          }
          for (int i = 0; i < reports_.size(); i++) {
            output.writeMessage(2, reports_.get(i));
          }
          unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, device_);
          }
          for (int i = 0; i < reports_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, reports_.get(i));
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport)) {
            return super.equals(obj);
          }
          SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport other = (SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport) obj;

          boolean result = true;
          result = result && (hasDevice() == other.hasDevice());
          if (hasDevice()) {
            result = result && (getDevice()
                == other.getDevice());
          }
          result = result && getReportsList()
              .equals(other.getReportsList());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasDevice()) {
            hash = (37 * hash) + DEVICE_FIELD_NUMBER;
            hash = (53 * hash) + getDevice();
          }
          if (getReportsCount() > 0) {
            hash = (37 * hash) + REPORTS_FIELD_NUMBER;
            hash = (53 * hash) + getReportsList().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport)
            SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReportOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport_descriptor;
          }

          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.class, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.Builder.class);
          }

          // Construct using SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getReportsFieldBuilder();
            }
          }
          public Builder clear() {
            super.clear();
            device_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            if (reportsBuilder_ == null) {
              reports_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              reportsBuilder_.clear();
            }
            return this;
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport_descriptor;
          }

          public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport getDefaultInstanceForType() {
            return SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.getDefaultInstance();
          }

          public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport build() {
            SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport buildPartial() {
            SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport result = new SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.device_ = device_;
            if (reportsBuilder_ == null) {
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                reports_ = java.util.Collections.unmodifiableList(reports_);
                bitField0_ = (bitField0_ & ~0x00000002);
              }
              result.reports_ = reports_;
            } else {
              result.reports_ = reportsBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder clone() {
            return (Builder) super.clone();
          }
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport) {
              return mergeFrom((SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport other) {
            if (other == SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.getDefaultInstance()) return this;
            if (other.hasDevice()) {
              setDevice(other.getDevice());
            }
            if (reportsBuilder_ == null) {
              if (!other.reports_.isEmpty()) {
                if (reports_.isEmpty()) {
                  reports_ = other.reports_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                  ensureReportsIsMutable();
                  reports_.addAll(other.reports_);
                }
                onChanged();
              }
            } else {
              if (!other.reports_.isEmpty()) {
                if (reportsBuilder_.isEmpty()) {
                  reportsBuilder_.dispose();
                  reportsBuilder_ = null;
                  reports_ = other.reports_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                  reportsBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getReportsFieldBuilder() : null;
                } else {
                  reportsBuilder_.addAllMessages(other.reports_);
                }
              }
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int device_ ;
          /**
           * <code>optional uint32 device = 1;</code>
           */
          public boolean hasDevice() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 device = 1;</code>
           */
          public int getDevice() {
            return device_;
          }
          /**
           * <code>optional uint32 device = 1;</code>
           */
          public Builder setDevice(int value) {
            bitField0_ |= 0x00000001;
            device_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 device = 1;</code>
           */
          public Builder clearDevice() {
            bitField0_ = (bitField0_ & ~0x00000001);
            device_ = 0;
            onChanged();
            return this;
          }

          private java.util.List<SteammessagesHiddevices.CHIDDeviceInputReport> reports_ =
            java.util.Collections.emptyList();
          private void ensureReportsIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
              reports_ = new java.util.ArrayList<SteammessagesHiddevices.CHIDDeviceInputReport>(reports_);
              bitField0_ |= 0x00000002;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              SteammessagesHiddevices.CHIDDeviceInputReport, SteammessagesHiddevices.CHIDDeviceInputReport.Builder, SteammessagesHiddevices.CHIDDeviceInputReportOrBuilder> reportsBuilder_;

          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public java.util.List<SteammessagesHiddevices.CHIDDeviceInputReport> getReportsList() {
            if (reportsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(reports_);
            } else {
              return reportsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public int getReportsCount() {
            if (reportsBuilder_ == null) {
              return reports_.size();
            } else {
              return reportsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public SteammessagesHiddevices.CHIDDeviceInputReport getReports(int index) {
            if (reportsBuilder_ == null) {
              return reports_.get(index);
            } else {
              return reportsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public Builder setReports(
              int index, SteammessagesHiddevices.CHIDDeviceInputReport value) {
            if (reportsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureReportsIsMutable();
              reports_.set(index, value);
              onChanged();
            } else {
              reportsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public Builder setReports(
              int index, SteammessagesHiddevices.CHIDDeviceInputReport.Builder builderForValue) {
            if (reportsBuilder_ == null) {
              ensureReportsIsMutable();
              reports_.set(index, builderForValue.build());
              onChanged();
            } else {
              reportsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public Builder addReports(SteammessagesHiddevices.CHIDDeviceInputReport value) {
            if (reportsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureReportsIsMutable();
              reports_.add(value);
              onChanged();
            } else {
              reportsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public Builder addReports(
              int index, SteammessagesHiddevices.CHIDDeviceInputReport value) {
            if (reportsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureReportsIsMutable();
              reports_.add(index, value);
              onChanged();
            } else {
              reportsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public Builder addReports(
              SteammessagesHiddevices.CHIDDeviceInputReport.Builder builderForValue) {
            if (reportsBuilder_ == null) {
              ensureReportsIsMutable();
              reports_.add(builderForValue.build());
              onChanged();
            } else {
              reportsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public Builder addReports(
              int index, SteammessagesHiddevices.CHIDDeviceInputReport.Builder builderForValue) {
            if (reportsBuilder_ == null) {
              ensureReportsIsMutable();
              reports_.add(index, builderForValue.build());
              onChanged();
            } else {
              reportsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public Builder addAllReports(
              java.lang.Iterable<? extends SteammessagesHiddevices.CHIDDeviceInputReport> values) {
            if (reportsBuilder_ == null) {
              ensureReportsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, reports_);
              onChanged();
            } else {
              reportsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public Builder clearReports() {
            if (reportsBuilder_ == null) {
              reports_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000002);
              onChanged();
            } else {
              reportsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public Builder removeReports(int index) {
            if (reportsBuilder_ == null) {
              ensureReportsIsMutable();
              reports_.remove(index);
              onChanged();
            } else {
              reportsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public SteammessagesHiddevices.CHIDDeviceInputReport.Builder getReportsBuilder(
              int index) {
            return getReportsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public SteammessagesHiddevices.CHIDDeviceInputReportOrBuilder getReportsOrBuilder(
              int index) {
            if (reportsBuilder_ == null) {
              return reports_.get(index);  } else {
              return reportsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public java.util.List<? extends SteammessagesHiddevices.CHIDDeviceInputReportOrBuilder> 
               getReportsOrBuilderList() {
            if (reportsBuilder_ != null) {
              return reportsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(reports_);
            }
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public SteammessagesHiddevices.CHIDDeviceInputReport.Builder addReportsBuilder() {
            return getReportsFieldBuilder().addBuilder(
                SteammessagesHiddevices.CHIDDeviceInputReport.getDefaultInstance());
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public SteammessagesHiddevices.CHIDDeviceInputReport.Builder addReportsBuilder(
              int index) {
            return getReportsFieldBuilder().addBuilder(
                index, SteammessagesHiddevices.CHIDDeviceInputReport.getDefaultInstance());
          }
          /**
           * <code>repeated .CHIDDeviceInputReport reports = 2;</code>
           */
          public java.util.List<SteammessagesHiddevices.CHIDDeviceInputReport.Builder> 
               getReportsBuilderList() {
            return getReportsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              SteammessagesHiddevices.CHIDDeviceInputReport, SteammessagesHiddevices.CHIDDeviceInputReport.Builder, SteammessagesHiddevices.CHIDDeviceInputReportOrBuilder> 
              getReportsFieldBuilder() {
            if (reportsBuilder_ == null) {
              reportsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  SteammessagesHiddevices.CHIDDeviceInputReport, SteammessagesHiddevices.CHIDDeviceInputReport.Builder, SteammessagesHiddevices.CHIDDeviceInputReportOrBuilder>(
                      reports_,
                      ((bitField0_ & 0x00000002) == 0x00000002),
                      getParentForChildren(),
                      isClean());
              reports_ = null;
            }
            return reportsBuilder_;
          }
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport)
        }

        // @@protoc_insertion_point(class_scope:CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport)
        private static final SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport();
        }

        public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceInputReport>
            PARSER = new com.google.protobuf.AbstractParser<DeviceInputReport>() {
          public DeviceInputReport parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
              return new DeviceInputReport(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<DeviceInputReport> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<DeviceInputReport> getParserForType() {
          return PARSER;
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int DEVICE_REPORTS_FIELD_NUMBER = 1;
      private java.util.List<SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport> deviceReports_;
      /**
       * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
       */
      public java.util.List<SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport> getDeviceReportsList() {
        return deviceReports_;
      }
      /**
       * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
       */
      public java.util.List<? extends SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReportOrBuilder> 
          getDeviceReportsOrBuilderList() {
        return deviceReports_;
      }
      /**
       * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
       */
      public int getDeviceReportsCount() {
        return deviceReports_.size();
      }
      /**
       * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport getDeviceReports(int index) {
        return deviceReports_.get(index);
      }
      /**
       * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReportOrBuilder getDeviceReportsOrBuilder(
          int index) {
        return deviceReports_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < deviceReports_.size(); i++) {
          output.writeMessage(1, deviceReports_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < deviceReports_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, deviceReports_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports other = (SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports) obj;

        boolean result = true;
        result = result && getDeviceReportsList()
            .equals(other.getDeviceReportsList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getDeviceReportsCount() > 0) {
          hash = (37 * hash) + DEVICE_REPORTS_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceReportsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageFromRemote.DeviceInputReports}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageFromRemote.DeviceInputReports)
          SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReportsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_DeviceInputReports_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_DeviceInputReports_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.class, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getDeviceReportsFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (deviceReportsBuilder_ == null) {
            deviceReports_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            deviceReportsBuilder_.clear();
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_DeviceInputReports_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports build() {
          SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports buildPartial() {
          SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports result = new SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports(this);
          int from_bitField0_ = bitField0_;
          if (deviceReportsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              deviceReports_ = java.util.Collections.unmodifiableList(deviceReports_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.deviceReports_ = deviceReports_;
          } else {
            result.deviceReports_ = deviceReportsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports other) {
          if (other == SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.getDefaultInstance()) return this;
          if (deviceReportsBuilder_ == null) {
            if (!other.deviceReports_.isEmpty()) {
              if (deviceReports_.isEmpty()) {
                deviceReports_ = other.deviceReports_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureDeviceReportsIsMutable();
                deviceReports_.addAll(other.deviceReports_);
              }
              onChanged();
            }
          } else {
            if (!other.deviceReports_.isEmpty()) {
              if (deviceReportsBuilder_.isEmpty()) {
                deviceReportsBuilder_.dispose();
                deviceReportsBuilder_ = null;
                deviceReports_ = other.deviceReports_;
                bitField0_ = (bitField0_ & ~0x00000001);
                deviceReportsBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getDeviceReportsFieldBuilder() : null;
              } else {
                deviceReportsBuilder_.addAllMessages(other.deviceReports_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport> deviceReports_ =
          java.util.Collections.emptyList();
        private void ensureDeviceReportsIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            deviceReports_ = new java.util.ArrayList<SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport>(deviceReports_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReportOrBuilder> deviceReportsBuilder_;

        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public java.util.List<SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport> getDeviceReportsList() {
          if (deviceReportsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(deviceReports_);
          } else {
            return deviceReportsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public int getDeviceReportsCount() {
          if (deviceReportsBuilder_ == null) {
            return deviceReports_.size();
          } else {
            return deviceReportsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport getDeviceReports(int index) {
          if (deviceReportsBuilder_ == null) {
            return deviceReports_.get(index);
          } else {
            return deviceReportsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public Builder setDeviceReports(
            int index, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport value) {
          if (deviceReportsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDeviceReportsIsMutable();
            deviceReports_.set(index, value);
            onChanged();
          } else {
            deviceReportsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public Builder setDeviceReports(
            int index, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.Builder builderForValue) {
          if (deviceReportsBuilder_ == null) {
            ensureDeviceReportsIsMutable();
            deviceReports_.set(index, builderForValue.build());
            onChanged();
          } else {
            deviceReportsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public Builder addDeviceReports(SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport value) {
          if (deviceReportsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDeviceReportsIsMutable();
            deviceReports_.add(value);
            onChanged();
          } else {
            deviceReportsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public Builder addDeviceReports(
            int index, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport value) {
          if (deviceReportsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDeviceReportsIsMutable();
            deviceReports_.add(index, value);
            onChanged();
          } else {
            deviceReportsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public Builder addDeviceReports(
            SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.Builder builderForValue) {
          if (deviceReportsBuilder_ == null) {
            ensureDeviceReportsIsMutable();
            deviceReports_.add(builderForValue.build());
            onChanged();
          } else {
            deviceReportsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public Builder addDeviceReports(
            int index, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.Builder builderForValue) {
          if (deviceReportsBuilder_ == null) {
            ensureDeviceReportsIsMutable();
            deviceReports_.add(index, builderForValue.build());
            onChanged();
          } else {
            deviceReportsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public Builder addAllDeviceReports(
            java.lang.Iterable<? extends SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport> values) {
          if (deviceReportsBuilder_ == null) {
            ensureDeviceReportsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, deviceReports_);
            onChanged();
          } else {
            deviceReportsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public Builder clearDeviceReports() {
          if (deviceReportsBuilder_ == null) {
            deviceReports_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            deviceReportsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public Builder removeDeviceReports(int index) {
          if (deviceReportsBuilder_ == null) {
            ensureDeviceReportsIsMutable();
            deviceReports_.remove(index);
            onChanged();
          } else {
            deviceReportsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.Builder getDeviceReportsBuilder(
            int index) {
          return getDeviceReportsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReportOrBuilder getDeviceReportsOrBuilder(
            int index) {
          if (deviceReportsBuilder_ == null) {
            return deviceReports_.get(index);  } else {
            return deviceReportsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public java.util.List<? extends SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReportOrBuilder> 
             getDeviceReportsOrBuilderList() {
          if (deviceReportsBuilder_ != null) {
            return deviceReportsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(deviceReports_);
          }
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.Builder addDeviceReportsBuilder() {
          return getDeviceReportsFieldBuilder().addBuilder(
              SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.getDefaultInstance());
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.Builder addDeviceReportsBuilder(
            int index) {
          return getDeviceReportsFieldBuilder().addBuilder(
              index, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.getDefaultInstance());
        }
        /**
         * <code>repeated .CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport device_reports = 1;</code>
         */
        public java.util.List<SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.Builder> 
             getDeviceReportsBuilderList() {
          return getDeviceReportsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReportOrBuilder> 
            getDeviceReportsFieldBuilder() {
          if (deviceReportsBuilder_ == null) {
            deviceReportsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.DeviceInputReportOrBuilder>(
                    deviceReports_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            deviceReports_ = null;
          }
          return deviceReportsBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageFromRemote.DeviceInputReports)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageFromRemote.DeviceInputReports)
      private static final SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports();
      }

      public static SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceInputReports>
          PARSER = new com.google.protobuf.AbstractParser<DeviceInputReports>() {
        public DeviceInputReports parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new DeviceInputReports(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeviceInputReports> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceInputReports> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CloseDeviceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageFromRemote.CloseDevice)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 device = 1;</code>
       */
      boolean hasDevice();
      /**
       * <code>optional uint32 device = 1;</code>
       */
      int getDevice();
    }
    /**
     * Protobuf type {@code CHIDMessageFromRemote.CloseDevice}
     */
    public  static final class CloseDevice extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageFromRemote.CloseDevice)
        CloseDeviceOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CloseDevice.newBuilder() to construct.
      private CloseDevice(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CloseDevice() {
        device_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CloseDevice(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                device_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_CloseDevice_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_CloseDevice_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.class, SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.Builder.class);
      }

      private int bitField0_;
      public static final int DEVICE_FIELD_NUMBER = 1;
      private int device_;
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 device = 1;</code>
       */
      public int getDevice() {
        return device_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, device_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, device_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice other = (SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice) obj;

        boolean result = true;
        result = result && (hasDevice() == other.hasDevice());
        if (hasDevice()) {
          result = result && (getDevice()
              == other.getDevice());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDevice()) {
          hash = (37 * hash) + DEVICE_FIELD_NUMBER;
          hash = (53 * hash) + getDevice();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageFromRemote.CloseDevice}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageFromRemote.CloseDevice)
          SteammessagesHiddevices.CHIDMessageFromRemote.CloseDeviceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_CloseDevice_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_CloseDevice_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.class, SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          device_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_CloseDevice_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice build() {
          SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice buildPartial() {
          SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice result = new SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.device_ = device_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice other) {
          if (other == SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.getDefaultInstance()) return this;
          if (other.hasDevice()) {
            setDevice(other.getDevice());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int device_ ;
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public boolean hasDevice() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public int getDevice() {
          return device_;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder setDevice(int value) {
          bitField0_ |= 0x00000001;
          device_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 device = 1;</code>
         */
        public Builder clearDevice() {
          bitField0_ = (bitField0_ & ~0x00000001);
          device_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageFromRemote.CloseDevice)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageFromRemote.CloseDevice)
      private static final SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice();
      }

      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<CloseDevice>
          PARSER = new com.google.protobuf.AbstractParser<CloseDevice>() {
        public CloseDevice parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new CloseDevice(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CloseDevice> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CloseDevice> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CloseAllDevicesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CHIDMessageFromRemote.CloseAllDevices)
        com.google.protobuf.MessageOrBuilder {
    }
    /**
     * Protobuf type {@code CHIDMessageFromRemote.CloseAllDevices}
     */
    public  static final class CloseAllDevices extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CHIDMessageFromRemote.CloseAllDevices)
        CloseAllDevicesOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CloseAllDevices.newBuilder() to construct.
      private CloseAllDevices(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CloseAllDevices() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CloseAllDevices(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_CloseAllDevices_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_CloseAllDevices_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.class, SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.Builder.class);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices)) {
          return super.equals(obj);
        }
        SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices other = (SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices) obj;

        boolean result = true;
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CHIDMessageFromRemote.CloseAllDevices}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CHIDMessageFromRemote.CloseAllDevices)
          SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevicesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_CloseAllDevices_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_CloseAllDevices_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.class, SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.Builder.class);
        }

        // Construct using SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_CloseAllDevices_descriptor;
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices getDefaultInstanceForType() {
          return SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.getDefaultInstance();
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices build() {
          SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices buildPartial() {
          SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices result = new SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices(this);
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices) {
            return mergeFrom((SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices other) {
          if (other == SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CHIDMessageFromRemote.CloseAllDevices)
      }

      // @@protoc_insertion_point(class_scope:CHIDMessageFromRemote.CloseAllDevices)
      private static final SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices();
      }

      public static SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<CloseAllDevices>
          PARSER = new com.google.protobuf.AbstractParser<CloseAllDevices>() {
        public CloseAllDevices parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new CloseAllDevices(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CloseAllDevices> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CloseAllDevices> getParserForType() {
        return PARSER;
      }

      public SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    private int commandCase_ = 0;
    private java.lang.Object command_;
    public enum CommandCase
        implements com.google.protobuf.Internal.EnumLite {
      UPDATE_DEVICE_LIST(1),
      RESPONSE(2),
      REPORTS(3),
      CLOSE_DEVICE(4),
      CLOSE_ALL_DEVICES(5),
      COMMAND_NOT_SET(0);
      private final int value;
      private CommandCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CommandCase valueOf(int value) {
        return forNumber(value);
      }

      public static CommandCase forNumber(int value) {
        switch (value) {
          case 1: return UPDATE_DEVICE_LIST;
          case 2: return RESPONSE;
          case 3: return REPORTS;
          case 4: return CLOSE_DEVICE;
          case 5: return CLOSE_ALL_DEVICES;
          case 0: return COMMAND_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public CommandCase
    getCommandCase() {
      return CommandCase.forNumber(
          commandCase_);
    }

    public static final int UPDATE_DEVICE_LIST_FIELD_NUMBER = 1;
    /**
     * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
     */
    public boolean hasUpdateDeviceList() {
      return commandCase_ == 1;
    }
    /**
     * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
     */
    public SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList getUpdateDeviceList() {
      if (commandCase_ == 1) {
         return (SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList) command_;
      }
      return SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
     */
    public SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceListOrBuilder getUpdateDeviceListOrBuilder() {
      if (commandCase_ == 1) {
         return (SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList) command_;
      }
      return SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.getDefaultInstance();
    }

    public static final int RESPONSE_FIELD_NUMBER = 2;
    /**
     * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
     */
    public boolean hasResponse() {
      return commandCase_ == 2;
    }
    /**
     * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
     */
    public SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse getResponse() {
      if (commandCase_ == 2) {
         return (SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse) command_;
      }
      return SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
     */
    public SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponseOrBuilder getResponseOrBuilder() {
      if (commandCase_ == 2) {
         return (SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse) command_;
      }
      return SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.getDefaultInstance();
    }

    public static final int REPORTS_FIELD_NUMBER = 3;
    /**
     * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
     */
    public boolean hasReports() {
      return commandCase_ == 3;
    }
    /**
     * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
     */
    public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports getReports() {
      if (commandCase_ == 3) {
         return (SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports) command_;
      }
      return SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
     */
    public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReportsOrBuilder getReportsOrBuilder() {
      if (commandCase_ == 3) {
         return (SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports) command_;
      }
      return SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.getDefaultInstance();
    }

    public static final int CLOSE_DEVICE_FIELD_NUMBER = 4;
    /**
     * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
     */
    public boolean hasCloseDevice() {
      return commandCase_ == 4;
    }
    /**
     * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
     */
    public SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice getCloseDevice() {
      if (commandCase_ == 4) {
         return (SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice) command_;
      }
      return SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
     */
    public SteammessagesHiddevices.CHIDMessageFromRemote.CloseDeviceOrBuilder getCloseDeviceOrBuilder() {
      if (commandCase_ == 4) {
         return (SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice) command_;
      }
      return SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.getDefaultInstance();
    }

    public static final int CLOSE_ALL_DEVICES_FIELD_NUMBER = 5;
    /**
     * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
     */
    public boolean hasCloseAllDevices() {
      return commandCase_ == 5;
    }
    /**
     * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
     */
    public SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices getCloseAllDevices() {
      if (commandCase_ == 5) {
         return (SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices) command_;
      }
      return SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.getDefaultInstance();
    }
    /**
     * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
     */
    public SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevicesOrBuilder getCloseAllDevicesOrBuilder() {
      if (commandCase_ == 5) {
         return (SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices) command_;
      }
      return SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (commandCase_ == 1) {
        output.writeMessage(1, (SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList) command_);
      }
      if (commandCase_ == 2) {
        output.writeMessage(2, (SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse) command_);
      }
      if (commandCase_ == 3) {
        output.writeMessage(3, (SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports) command_);
      }
      if (commandCase_ == 4) {
        output.writeMessage(4, (SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice) command_);
      }
      if (commandCase_ == 5) {
        output.writeMessage(5, (SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices) command_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (commandCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList) command_);
      }
      if (commandCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse) command_);
      }
      if (commandCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports) command_);
      }
      if (commandCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice) command_);
      }
      if (commandCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices) command_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesHiddevices.CHIDMessageFromRemote)) {
        return super.equals(obj);
      }
      SteammessagesHiddevices.CHIDMessageFromRemote other = (SteammessagesHiddevices.CHIDMessageFromRemote) obj;

      boolean result = true;
      result = result && getCommandCase().equals(
          other.getCommandCase());
      if (!result) return false;
      switch (commandCase_) {
        case 1:
          result = result && getUpdateDeviceList()
              .equals(other.getUpdateDeviceList());
          break;
        case 2:
          result = result && getResponse()
              .equals(other.getResponse());
          break;
        case 3:
          result = result && getReports()
              .equals(other.getReports());
          break;
        case 4:
          result = result && getCloseDevice()
              .equals(other.getCloseDevice());
          break;
        case 5:
          result = result && getCloseAllDevices()
              .equals(other.getCloseAllDevices());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (commandCase_) {
        case 1:
          hash = (37 * hash) + UPDATE_DEVICE_LIST_FIELD_NUMBER;
          hash = (53 * hash) + getUpdateDeviceList().hashCode();
          break;
        case 2:
          hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getResponse().hashCode();
          break;
        case 3:
          hash = (37 * hash) + REPORTS_FIELD_NUMBER;
          hash = (53 * hash) + getReports().hashCode();
          break;
        case 4:
          hash = (37 * hash) + CLOSE_DEVICE_FIELD_NUMBER;
          hash = (53 * hash) + getCloseDevice().hashCode();
          break;
        case 5:
          hash = (37 * hash) + CLOSE_ALL_DEVICES_FIELD_NUMBER;
          hash = (53 * hash) + getCloseAllDevices().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesHiddevices.CHIDMessageFromRemote parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesHiddevices.CHIDMessageFromRemote parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDMessageFromRemote parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesHiddevices.CHIDMessageFromRemote parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDMessageFromRemote parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesHiddevices.CHIDMessageFromRemote parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDMessageFromRemote parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesHiddevices.CHIDMessageFromRemote parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDMessageFromRemote parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesHiddevices.CHIDMessageFromRemote parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesHiddevices.CHIDMessageFromRemote parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesHiddevices.CHIDMessageFromRemote parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesHiddevices.CHIDMessageFromRemote prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CHIDMessageFromRemote}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CHIDMessageFromRemote)
        SteammessagesHiddevices.CHIDMessageFromRemoteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesHiddevices.CHIDMessageFromRemote.class, SteammessagesHiddevices.CHIDMessageFromRemote.Builder.class);
      }

      // Construct using SteammessagesHiddevices.CHIDMessageFromRemote.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        commandCase_ = 0;
        command_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesHiddevices.internal_static_CHIDMessageFromRemote_descriptor;
      }

      public SteammessagesHiddevices.CHIDMessageFromRemote getDefaultInstanceForType() {
        return SteammessagesHiddevices.CHIDMessageFromRemote.getDefaultInstance();
      }

      public SteammessagesHiddevices.CHIDMessageFromRemote build() {
        SteammessagesHiddevices.CHIDMessageFromRemote result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesHiddevices.CHIDMessageFromRemote buildPartial() {
        SteammessagesHiddevices.CHIDMessageFromRemote result = new SteammessagesHiddevices.CHIDMessageFromRemote(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (commandCase_ == 1) {
          if (updateDeviceListBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = updateDeviceListBuilder_.build();
          }
        }
        if (commandCase_ == 2) {
          if (responseBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = responseBuilder_.build();
          }
        }
        if (commandCase_ == 3) {
          if (reportsBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = reportsBuilder_.build();
          }
        }
        if (commandCase_ == 4) {
          if (closeDeviceBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = closeDeviceBuilder_.build();
          }
        }
        if (commandCase_ == 5) {
          if (closeAllDevicesBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = closeAllDevicesBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.commandCase_ = commandCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesHiddevices.CHIDMessageFromRemote) {
          return mergeFrom((SteammessagesHiddevices.CHIDMessageFromRemote)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesHiddevices.CHIDMessageFromRemote other) {
        if (other == SteammessagesHiddevices.CHIDMessageFromRemote.getDefaultInstance()) return this;
        switch (other.getCommandCase()) {
          case UPDATE_DEVICE_LIST: {
            mergeUpdateDeviceList(other.getUpdateDeviceList());
            break;
          }
          case RESPONSE: {
            mergeResponse(other.getResponse());
            break;
          }
          case REPORTS: {
            mergeReports(other.getReports());
            break;
          }
          case CLOSE_DEVICE: {
            mergeCloseDevice(other.getCloseDevice());
            break;
          }
          case CLOSE_ALL_DEVICES: {
            mergeCloseAllDevices(other.getCloseAllDevices());
            break;
          }
          case COMMAND_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesHiddevices.CHIDMessageFromRemote parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesHiddevices.CHIDMessageFromRemote) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int commandCase_ = 0;
      private java.lang.Object command_;
      public CommandCase
          getCommandCase() {
        return CommandCase.forNumber(
            commandCase_);
      }

      public Builder clearCommand() {
        commandCase_ = 0;
        command_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList, SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceListOrBuilder> updateDeviceListBuilder_;
      /**
       * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
       */
      public boolean hasUpdateDeviceList() {
        return commandCase_ == 1;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList getUpdateDeviceList() {
        if (updateDeviceListBuilder_ == null) {
          if (commandCase_ == 1) {
            return (SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList) command_;
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.getDefaultInstance();
        } else {
          if (commandCase_ == 1) {
            return updateDeviceListBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
       */
      public Builder setUpdateDeviceList(SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList value) {
        if (updateDeviceListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          updateDeviceListBuilder_.setMessage(value);
        }
        commandCase_ = 1;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
       */
      public Builder setUpdateDeviceList(
          SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.Builder builderForValue) {
        if (updateDeviceListBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          updateDeviceListBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 1;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
       */
      public Builder mergeUpdateDeviceList(SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList value) {
        if (updateDeviceListBuilder_ == null) {
          if (commandCase_ == 1 &&
              command_ != SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.newBuilder((SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 1) {
            updateDeviceListBuilder_.mergeFrom(value);
          }
          updateDeviceListBuilder_.setMessage(value);
        }
        commandCase_ = 1;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
       */
      public Builder clearUpdateDeviceList() {
        if (updateDeviceListBuilder_ == null) {
          if (commandCase_ == 1) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 1) {
            commandCase_ = 0;
            command_ = null;
          }
          updateDeviceListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.Builder getUpdateDeviceListBuilder() {
        return getUpdateDeviceListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceListOrBuilder getUpdateDeviceListOrBuilder() {
        if ((commandCase_ == 1) && (updateDeviceListBuilder_ != null)) {
          return updateDeviceListBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 1) {
            return (SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList) command_;
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageFromRemote.UpdateDeviceList update_device_list = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList, SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceListOrBuilder> 
          getUpdateDeviceListFieldBuilder() {
        if (updateDeviceListBuilder_ == null) {
          if (!(commandCase_ == 1)) {
            command_ = SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.getDefaultInstance();
          }
          updateDeviceListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList, SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceListOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageFromRemote.UpdateDeviceList) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 1;
        onChanged();;
        return updateDeviceListBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse, SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponseOrBuilder> responseBuilder_;
      /**
       * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
       */
      public boolean hasResponse() {
        return commandCase_ == 2;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse getResponse() {
        if (responseBuilder_ == null) {
          if (commandCase_ == 2) {
            return (SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse) command_;
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.getDefaultInstance();
        } else {
          if (commandCase_ == 2) {
            return responseBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
       */
      public Builder setResponse(SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse value) {
        if (responseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          responseBuilder_.setMessage(value);
        }
        commandCase_ = 2;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
       */
      public Builder setResponse(
          SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.Builder builderForValue) {
        if (responseBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          responseBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 2;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
       */
      public Builder mergeResponse(SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse value) {
        if (responseBuilder_ == null) {
          if (commandCase_ == 2 &&
              command_ != SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.newBuilder((SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 2) {
            responseBuilder_.mergeFrom(value);
          }
          responseBuilder_.setMessage(value);
        }
        commandCase_ = 2;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
       */
      public Builder clearResponse() {
        if (responseBuilder_ == null) {
          if (commandCase_ == 2) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 2) {
            commandCase_ = 0;
            command_ = null;
          }
          responseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.Builder getResponseBuilder() {
        return getResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponseOrBuilder getResponseOrBuilder() {
        if ((commandCase_ == 2) && (responseBuilder_ != null)) {
          return responseBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 2) {
            return (SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse) command_;
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageFromRemote.RequestResponse response = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse, SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponseOrBuilder> 
          getResponseFieldBuilder() {
        if (responseBuilder_ == null) {
          if (!(commandCase_ == 2)) {
            command_ = SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.getDefaultInstance();
          }
          responseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse, SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponseOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageFromRemote.RequestResponse) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 2;
        onChanged();;
        return responseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReportsOrBuilder> reportsBuilder_;
      /**
       * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
       */
      public boolean hasReports() {
        return commandCase_ == 3;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports getReports() {
        if (reportsBuilder_ == null) {
          if (commandCase_ == 3) {
            return (SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports) command_;
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.getDefaultInstance();
        } else {
          if (commandCase_ == 3) {
            return reportsBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
       */
      public Builder setReports(SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports value) {
        if (reportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          reportsBuilder_.setMessage(value);
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
       */
      public Builder setReports(
          SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.Builder builderForValue) {
        if (reportsBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          reportsBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
       */
      public Builder mergeReports(SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports value) {
        if (reportsBuilder_ == null) {
          if (commandCase_ == 3 &&
              command_ != SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.newBuilder((SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 3) {
            reportsBuilder_.mergeFrom(value);
          }
          reportsBuilder_.setMessage(value);
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
       */
      public Builder clearReports() {
        if (reportsBuilder_ == null) {
          if (commandCase_ == 3) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 3) {
            commandCase_ = 0;
            command_ = null;
          }
          reportsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.Builder getReportsBuilder() {
        return getReportsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReportsOrBuilder getReportsOrBuilder() {
        if ((commandCase_ == 3) && (reportsBuilder_ != null)) {
          return reportsBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 3) {
            return (SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports) command_;
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageFromRemote.DeviceInputReports reports = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReportsOrBuilder> 
          getReportsFieldBuilder() {
        if (reportsBuilder_ == null) {
          if (!(commandCase_ == 3)) {
            command_ = SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.getDefaultInstance();
          }
          reportsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReportsOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageFromRemote.DeviceInputReports) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 3;
        onChanged();;
        return reportsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice, SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.CloseDeviceOrBuilder> closeDeviceBuilder_;
      /**
       * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
       */
      public boolean hasCloseDevice() {
        return commandCase_ == 4;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice getCloseDevice() {
        if (closeDeviceBuilder_ == null) {
          if (commandCase_ == 4) {
            return (SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice) command_;
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.getDefaultInstance();
        } else {
          if (commandCase_ == 4) {
            return closeDeviceBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
       */
      public Builder setCloseDevice(SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice value) {
        if (closeDeviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          closeDeviceBuilder_.setMessage(value);
        }
        commandCase_ = 4;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
       */
      public Builder setCloseDevice(
          SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.Builder builderForValue) {
        if (closeDeviceBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          closeDeviceBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 4;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
       */
      public Builder mergeCloseDevice(SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice value) {
        if (closeDeviceBuilder_ == null) {
          if (commandCase_ == 4 &&
              command_ != SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.newBuilder((SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 4) {
            closeDeviceBuilder_.mergeFrom(value);
          }
          closeDeviceBuilder_.setMessage(value);
        }
        commandCase_ = 4;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
       */
      public Builder clearCloseDevice() {
        if (closeDeviceBuilder_ == null) {
          if (commandCase_ == 4) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 4) {
            commandCase_ = 0;
            command_ = null;
          }
          closeDeviceBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.Builder getCloseDeviceBuilder() {
        return getCloseDeviceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.CloseDeviceOrBuilder getCloseDeviceOrBuilder() {
        if ((commandCase_ == 4) && (closeDeviceBuilder_ != null)) {
          return closeDeviceBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 4) {
            return (SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice) command_;
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseDevice close_device = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice, SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.CloseDeviceOrBuilder> 
          getCloseDeviceFieldBuilder() {
        if (closeDeviceBuilder_ == null) {
          if (!(commandCase_ == 4)) {
            command_ = SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.getDefaultInstance();
          }
          closeDeviceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice, SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.CloseDeviceOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageFromRemote.CloseDevice) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 4;
        onChanged();;
        return closeDeviceBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices, SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevicesOrBuilder> closeAllDevicesBuilder_;
      /**
       * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
       */
      public boolean hasCloseAllDevices() {
        return commandCase_ == 5;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices getCloseAllDevices() {
        if (closeAllDevicesBuilder_ == null) {
          if (commandCase_ == 5) {
            return (SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices) command_;
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.getDefaultInstance();
        } else {
          if (commandCase_ == 5) {
            return closeAllDevicesBuilder_.getMessage();
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
       */
      public Builder setCloseAllDevices(SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices value) {
        if (closeAllDevicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          closeAllDevicesBuilder_.setMessage(value);
        }
        commandCase_ = 5;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
       */
      public Builder setCloseAllDevices(
          SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.Builder builderForValue) {
        if (closeAllDevicesBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          closeAllDevicesBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 5;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
       */
      public Builder mergeCloseAllDevices(SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices value) {
        if (closeAllDevicesBuilder_ == null) {
          if (commandCase_ == 5 &&
              command_ != SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.getDefaultInstance()) {
            command_ = SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.newBuilder((SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 5) {
            closeAllDevicesBuilder_.mergeFrom(value);
          }
          closeAllDevicesBuilder_.setMessage(value);
        }
        commandCase_ = 5;
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
       */
      public Builder clearCloseAllDevices() {
        if (closeAllDevicesBuilder_ == null) {
          if (commandCase_ == 5) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 5) {
            commandCase_ = 0;
            command_ = null;
          }
          closeAllDevicesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.Builder getCloseAllDevicesBuilder() {
        return getCloseAllDevicesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
       */
      public SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevicesOrBuilder getCloseAllDevicesOrBuilder() {
        if ((commandCase_ == 5) && (closeAllDevicesBuilder_ != null)) {
          return closeAllDevicesBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 5) {
            return (SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices) command_;
          }
          return SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.getDefaultInstance();
        }
      }
      /**
       * <code>optional .CHIDMessageFromRemote.CloseAllDevices close_all_devices = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices, SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevicesOrBuilder> 
          getCloseAllDevicesFieldBuilder() {
        if (closeAllDevicesBuilder_ == null) {
          if (!(commandCase_ == 5)) {
            command_ = SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.getDefaultInstance();
          }
          closeAllDevicesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices, SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices.Builder, SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevicesOrBuilder>(
                  (SteammessagesHiddevices.CHIDMessageFromRemote.CloseAllDevices) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 5;
        onChanged();;
        return closeAllDevicesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CHIDMessageFromRemote)
    }

    // @@protoc_insertion_point(class_scope:CHIDMessageFromRemote)
    private static final SteammessagesHiddevices.CHIDMessageFromRemote DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesHiddevices.CHIDMessageFromRemote();
    }

    public static SteammessagesHiddevices.CHIDMessageFromRemote getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CHIDMessageFromRemote>
        PARSER = new com.google.protobuf.AbstractParser<CHIDMessageFromRemote>() {
      public CHIDMessageFromRemote parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CHIDMessageFromRemote(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CHIDMessageFromRemote> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CHIDMessageFromRemote> getParserForType() {
      return PARSER;
    }

    public SteammessagesHiddevices.CHIDMessageFromRemote getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDDeviceInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDDeviceInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDDeviceInputReport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDDeviceInputReport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageToRemote_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageToRemote_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageToRemote_DeviceOpen_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageToRemote_DeviceOpen_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageToRemote_DeviceClose_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageToRemote_DeviceClose_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageToRemote_DeviceWrite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageToRemote_DeviceWrite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageToRemote_DeviceRead_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageToRemote_DeviceRead_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageToRemote_DeviceSendFeatureReport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageToRemote_DeviceSendFeatureReport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageToRemote_DeviceGetFeatureReport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageToRemote_DeviceGetFeatureReport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageToRemote_DeviceGetVendorString_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageToRemote_DeviceGetVendorString_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageToRemote_DeviceGetProductString_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageToRemote_DeviceGetProductString_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageToRemote_DeviceGetSerialNumberString_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageToRemote_DeviceGetSerialNumberString_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageToRemote_DeviceStartInputReports_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageToRemote_DeviceStartInputReports_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageToRemote_DeviceRequestFullReport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageToRemote_DeviceRequestFullReport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageToRemote_DeviceDisconnect_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageToRemote_DeviceDisconnect_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageFromRemote_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageFromRemote_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageFromRemote_UpdateDeviceList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageFromRemote_UpdateDeviceList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageFromRemote_RequestResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageFromRemote_RequestResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageFromRemote_DeviceInputReports_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageFromRemote_DeviceInputReports_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageFromRemote_CloseDevice_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageFromRemote_CloseDevice_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CHIDMessageFromRemote_CloseAllDevices_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CHIDMessageFromRemote_CloseAllDevices_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036steammessages_hiddevices.proto\"\366\002\n\016CHI" +
      "DDeviceInfo\022=\n\010location\030\001 \001(\0162\023.EHIDDevi" +
      "ceLocation:\026k_EDeviceLocationLocal\022\014\n\004pa" +
      "th\030\002 \001(\t\022\021\n\tvendor_id\030\003 \001(\r\022\022\n\nproduct_i" +
      "d\030\004 \001(\r\022\025\n\rserial_number\030\005 \001(\t\022\026\n\016releas" +
      "e_number\030\006 \001(\r\022\033\n\023manufacturer_string\030\007 " +
      "\001(\t\022\026\n\016product_string\030\010 \001(\t\022\022\n\nusage_pag" +
      "e\030\t \001(\r\022\r\n\005usage\030\n \001(\r\022\034\n\020interface_numb" +
      "er\030\013 \001(\005:\002-1\022\022\n\006ostype\030\014 \001(\005:\002-1\022\032\n\022is_g" +
      "eneric_gamepad\030\r \001(\010\022\033\n\023is_generic_joyst",
      "ick\030\016 \001(\010\"w\n\025CHIDDeviceInputReport\022\023\n\013fu" +
      "ll_report\030\001 \001(\014\022\024\n\014delta_report\030\002 \001(\014\022\031\n" +
      "\021delta_report_size\030\003 \001(\r\022\030\n\020delta_report" +
      "_crc\030\004 \001(\r\"\342\014\n\023CHIDMessageToRemote\022\022\n\nre" +
      "quest_id\030\001 \001(\r\0226\n\013device_open\030\002 \001(\0132\037.CH" +
      "IDMessageToRemote.DeviceOpenH\000\0228\n\014device" +
      "_close\030\003 \001(\0132 .CHIDMessageToRemote.Devic" +
      "eCloseH\000\0228\n\014device_write\030\004 \001(\0132 .CHIDMes" +
      "sageToRemote.DeviceWriteH\000\0226\n\013device_rea" +
      "d\030\005 \001(\0132\037.CHIDMessageToRemote.DeviceRead",
      "H\000\022R\n\032device_send_feature_report\030\006 \001(\0132," +
      ".CHIDMessageToRemote.DeviceSendFeatureRe" +
      "portH\000\022P\n\031device_get_feature_report\030\007 \001(" +
      "\0132+.CHIDMessageToRemote.DeviceGetFeature" +
      "ReportH\000\022N\n\030device_get_vendor_string\030\010 \001" +
      "(\0132*.CHIDMessageToRemote.DeviceGetVendor" +
      "StringH\000\022P\n\031device_get_product_string\030\t " +
      "\001(\0132+.CHIDMessageToRemote.DeviceGetProdu" +
      "ctStringH\000\022[\n\037device_get_serial_number_s" +
      "tring\030\n \001(\01320.CHIDMessageToRemote.Device",
      "GetSerialNumberStringH\000\022R\n\032device_start_" +
      "input_reports\030\013 \001(\0132,.CHIDMessageToRemot" +
      "e.DeviceStartInputReportsH\000\022R\n\032device_re" +
      "quest_full_report\030\014 \001(\0132,.CHIDMessageToR" +
      "emote.DeviceRequestFullReportH\000\022B\n\021devic" +
      "e_disconnect\030\r \001(\0132%.CHIDMessageToRemote" +
      ".DeviceDisconnectH\000\032+\n\nDeviceOpen\022\035\n\004inf" +
      "o\030\001 \001(\0132\017.CHIDDeviceInfo\032\035\n\013DeviceClose\022" +
      "\016\n\006device\030\001 \001(\r\032+\n\013DeviceWrite\022\016\n\006device" +
      "\030\001 \001(\r\022\014\n\004data\030\002 \001(\014\032@\n\nDeviceRead\022\016\n\006de",
      "vice\030\001 \001(\r\022\016\n\006length\030\002 \001(\r\022\022\n\ntimeout_ms" +
      "\030\003 \001(\005\0327\n\027DeviceSendFeatureReport\022\016\n\006dev" +
      "ice\030\001 \001(\r\022\014\n\004data\030\002 \001(\014\032O\n\026DeviceGetFeat" +
      "ureReport\022\016\n\006device\030\001 \001(\r\022\025\n\rreport_numb" +
      "er\030\002 \001(\014\022\016\n\006length\030\003 \001(\r\032\'\n\025DeviceGetVen" +
      "dorString\022\016\n\006device\030\001 \001(\r\032(\n\026DeviceGetPr" +
      "oductString\022\016\n\006device\030\001 \001(\r\032-\n\033DeviceGet" +
      "SerialNumberString\022\016\n\006device\030\001 \001(\r\0329\n\027De" +
      "viceStartInputReports\022\016\n\006device\030\001 \001(\r\022\016\n" +
      "\006length\030\002 \001(\r\032)\n\027DeviceRequestFullReport",
      "\022\016\n\006device\030\001 \001(\r\032\211\001\n\020DeviceDisconnect\022\016\n" +
      "\006device\030\001 \001(\r\022W\n\020disconnectMethod\030\002 \001(\0162" +
      "\033.EHIDDeviceDisconnectMethod: k_EDeviceD" +
      "isconnectMethodUnknown\022\014\n\004data\030\003 \001(\014B\t\n\007" +
      "command\"\313\005\n\025CHIDMessageFromRemote\022E\n\022upd" +
      "ate_device_list\030\001 \001(\0132\'.CHIDMessageFromR" +
      "emote.UpdateDeviceListH\000\022:\n\010response\030\002 \001" +
      "(\0132&.CHIDMessageFromRemote.RequestRespon" +
      "seH\000\022<\n\007reports\030\003 \001(\0132).CHIDMessageFromR" +
      "emote.DeviceInputReportsH\000\022:\n\014close_devi",
      "ce\030\004 \001(\0132\".CHIDMessageFromRemote.CloseDe" +
      "viceH\000\022C\n\021close_all_devices\030\005 \001(\0132&.CHID" +
      "MessageFromRemote.CloseAllDevicesH\000\0324\n\020U" +
      "pdateDeviceList\022 \n\007devices\030\001 \003(\0132\017.CHIDD" +
      "eviceInfo\032C\n\017RequestResponse\022\022\n\nrequest_" +
      "id\030\001 \001(\r\022\016\n\006result\030\002 \001(\005\022\014\n\004data\030\003 \001(\014\032\267" +
      "\001\n\022DeviceInputReports\022S\n\016device_reports\030" +
      "\001 \003(\0132;.CHIDMessageFromRemote.DeviceInpu" +
      "tReports.DeviceInputReport\032L\n\021DeviceInpu" +
      "tReport\022\016\n\006device\030\001 \001(\r\022\'\n\007reports\030\002 \003(\013",
      "2\026.CHIDDeviceInputReport\032\035\n\013CloseDevice\022" +
      "\016\n\006device\030\001 \001(\r\032\021\n\017CloseAllDevicesB\t\n\007co" +
      "mmand*g\n\022EHIDDeviceLocation\022\032\n\026k_EDevice" +
      "LocationLocal\020\000\022\033\n\027k_EDeviceLocationRemo" +
      "te\020\002\022\030\n\024k_EDeviceLocationAny\020\003*\226\001\n\032EHIDD" +
      "eviceDisconnectMethod\022$\n k_EDeviceDiscon" +
      "nectMethodUnknown\020\000\022&\n\"k_EDeviceDisconne" +
      "ctMethodBluetooth\020\001\022*\n&k_EDeviceDisconne" +
      "ctMethodFeatureReport\020\002B\005H\001\200\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_CHIDDeviceInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CHIDDeviceInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDDeviceInfo_descriptor,
        new java.lang.String[] { "Location", "Path", "VendorId", "ProductId", "SerialNumber", "ReleaseNumber", "ManufacturerString", "ProductString", "UsagePage", "Usage", "InterfaceNumber", "Ostype", "IsGenericGamepad", "IsGenericJoystick", });
    internal_static_CHIDDeviceInputReport_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CHIDDeviceInputReport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDDeviceInputReport_descriptor,
        new java.lang.String[] { "FullReport", "DeltaReport", "DeltaReportSize", "DeltaReportCrc", });
    internal_static_CHIDMessageToRemote_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CHIDMessageToRemote_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageToRemote_descriptor,
        new java.lang.String[] { "RequestId", "DeviceOpen", "DeviceClose", "DeviceWrite", "DeviceRead", "DeviceSendFeatureReport", "DeviceGetFeatureReport", "DeviceGetVendorString", "DeviceGetProductString", "DeviceGetSerialNumberString", "DeviceStartInputReports", "DeviceRequestFullReport", "DeviceDisconnect", "Command", });
    internal_static_CHIDMessageToRemote_DeviceOpen_descriptor =
      internal_static_CHIDMessageToRemote_descriptor.getNestedTypes().get(0);
    internal_static_CHIDMessageToRemote_DeviceOpen_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageToRemote_DeviceOpen_descriptor,
        new java.lang.String[] { "Info", });
    internal_static_CHIDMessageToRemote_DeviceClose_descriptor =
      internal_static_CHIDMessageToRemote_descriptor.getNestedTypes().get(1);
    internal_static_CHIDMessageToRemote_DeviceClose_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageToRemote_DeviceClose_descriptor,
        new java.lang.String[] { "Device", });
    internal_static_CHIDMessageToRemote_DeviceWrite_descriptor =
      internal_static_CHIDMessageToRemote_descriptor.getNestedTypes().get(2);
    internal_static_CHIDMessageToRemote_DeviceWrite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageToRemote_DeviceWrite_descriptor,
        new java.lang.String[] { "Device", "Data", });
    internal_static_CHIDMessageToRemote_DeviceRead_descriptor =
      internal_static_CHIDMessageToRemote_descriptor.getNestedTypes().get(3);
    internal_static_CHIDMessageToRemote_DeviceRead_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageToRemote_DeviceRead_descriptor,
        new java.lang.String[] { "Device", "Length", "TimeoutMs", });
    internal_static_CHIDMessageToRemote_DeviceSendFeatureReport_descriptor =
      internal_static_CHIDMessageToRemote_descriptor.getNestedTypes().get(4);
    internal_static_CHIDMessageToRemote_DeviceSendFeatureReport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageToRemote_DeviceSendFeatureReport_descriptor,
        new java.lang.String[] { "Device", "Data", });
    internal_static_CHIDMessageToRemote_DeviceGetFeatureReport_descriptor =
      internal_static_CHIDMessageToRemote_descriptor.getNestedTypes().get(5);
    internal_static_CHIDMessageToRemote_DeviceGetFeatureReport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageToRemote_DeviceGetFeatureReport_descriptor,
        new java.lang.String[] { "Device", "ReportNumber", "Length", });
    internal_static_CHIDMessageToRemote_DeviceGetVendorString_descriptor =
      internal_static_CHIDMessageToRemote_descriptor.getNestedTypes().get(6);
    internal_static_CHIDMessageToRemote_DeviceGetVendorString_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageToRemote_DeviceGetVendorString_descriptor,
        new java.lang.String[] { "Device", });
    internal_static_CHIDMessageToRemote_DeviceGetProductString_descriptor =
      internal_static_CHIDMessageToRemote_descriptor.getNestedTypes().get(7);
    internal_static_CHIDMessageToRemote_DeviceGetProductString_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageToRemote_DeviceGetProductString_descriptor,
        new java.lang.String[] { "Device", });
    internal_static_CHIDMessageToRemote_DeviceGetSerialNumberString_descriptor =
      internal_static_CHIDMessageToRemote_descriptor.getNestedTypes().get(8);
    internal_static_CHIDMessageToRemote_DeviceGetSerialNumberString_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageToRemote_DeviceGetSerialNumberString_descriptor,
        new java.lang.String[] { "Device", });
    internal_static_CHIDMessageToRemote_DeviceStartInputReports_descriptor =
      internal_static_CHIDMessageToRemote_descriptor.getNestedTypes().get(9);
    internal_static_CHIDMessageToRemote_DeviceStartInputReports_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageToRemote_DeviceStartInputReports_descriptor,
        new java.lang.String[] { "Device", "Length", });
    internal_static_CHIDMessageToRemote_DeviceRequestFullReport_descriptor =
      internal_static_CHIDMessageToRemote_descriptor.getNestedTypes().get(10);
    internal_static_CHIDMessageToRemote_DeviceRequestFullReport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageToRemote_DeviceRequestFullReport_descriptor,
        new java.lang.String[] { "Device", });
    internal_static_CHIDMessageToRemote_DeviceDisconnect_descriptor =
      internal_static_CHIDMessageToRemote_descriptor.getNestedTypes().get(11);
    internal_static_CHIDMessageToRemote_DeviceDisconnect_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageToRemote_DeviceDisconnect_descriptor,
        new java.lang.String[] { "Device", "DisconnectMethod", "Data", });
    internal_static_CHIDMessageFromRemote_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CHIDMessageFromRemote_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageFromRemote_descriptor,
        new java.lang.String[] { "UpdateDeviceList", "Response", "Reports", "CloseDevice", "CloseAllDevices", "Command", });
    internal_static_CHIDMessageFromRemote_UpdateDeviceList_descriptor =
      internal_static_CHIDMessageFromRemote_descriptor.getNestedTypes().get(0);
    internal_static_CHIDMessageFromRemote_UpdateDeviceList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageFromRemote_UpdateDeviceList_descriptor,
        new java.lang.String[] { "Devices", });
    internal_static_CHIDMessageFromRemote_RequestResponse_descriptor =
      internal_static_CHIDMessageFromRemote_descriptor.getNestedTypes().get(1);
    internal_static_CHIDMessageFromRemote_RequestResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageFromRemote_RequestResponse_descriptor,
        new java.lang.String[] { "RequestId", "Result", "Data", });
    internal_static_CHIDMessageFromRemote_DeviceInputReports_descriptor =
      internal_static_CHIDMessageFromRemote_descriptor.getNestedTypes().get(2);
    internal_static_CHIDMessageFromRemote_DeviceInputReports_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageFromRemote_DeviceInputReports_descriptor,
        new java.lang.String[] { "DeviceReports", });
    internal_static_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport_descriptor =
      internal_static_CHIDMessageFromRemote_DeviceInputReports_descriptor.getNestedTypes().get(0);
    internal_static_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport_descriptor,
        new java.lang.String[] { "Device", "Reports", });
    internal_static_CHIDMessageFromRemote_CloseDevice_descriptor =
      internal_static_CHIDMessageFromRemote_descriptor.getNestedTypes().get(3);
    internal_static_CHIDMessageFromRemote_CloseDevice_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageFromRemote_CloseDevice_descriptor,
        new java.lang.String[] { "Device", });
    internal_static_CHIDMessageFromRemote_CloseAllDevices_descriptor =
      internal_static_CHIDMessageFromRemote_descriptor.getNestedTypes().get(4);
    internal_static_CHIDMessageFromRemote_CloseAllDevices_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CHIDMessageFromRemote_CloseAllDevices_descriptor,
        new java.lang.String[] { });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
