// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_accounthardware.steamclient.proto
package com.jsteamkit.internals.proto;

public final class SteammessagesAccounthardwareSteamclient {
  private SteammessagesAccounthardwareSteamclient() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CAccountHardware_RegisterSteamController_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_RegisterSteamController_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string serial_number = 1;</code>
     */
    boolean hasSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    java.lang.String getSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    com.google.protobuf.ByteString
        getSerialNumberBytes();

    /**
     * <code>optional string controller_code = 2;</code>
     */
    boolean hasControllerCode();
    /**
     * <code>optional string controller_code = 2;</code>
     */
    java.lang.String getControllerCode();
    /**
     * <code>optional string controller_code = 2;</code>
     */
    com.google.protobuf.ByteString
        getControllerCodeBytes();
  }
  /**
   * Protobuf type {@code CAccountHardware_RegisterSteamController_Request}
   */
  public  static final class CAccountHardware_RegisterSteamController_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_RegisterSteamController_Request)
      CAccountHardware_RegisterSteamController_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_RegisterSteamController_Request.newBuilder() to construct.
    private CAccountHardware_RegisterSteamController_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_RegisterSteamController_Request() {
      serialNumber_ = "";
      controllerCode_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_RegisterSteamController_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              serialNumber_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              controllerCode_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_RegisterSteamController_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_RegisterSteamController_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request.Builder.class);
    }

    private int bitField0_;
    public static final int SERIAL_NUMBER_FIELD_NUMBER = 1;
    private volatile java.lang.Object serialNumber_;
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public boolean hasSerialNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public java.lang.String getSerialNumber() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serialNumber_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSerialNumberBytes() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serialNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTROLLER_CODE_FIELD_NUMBER = 2;
    private volatile java.lang.Object controllerCode_;
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public boolean hasControllerCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public java.lang.String getControllerCode() {
      java.lang.Object ref = controllerCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          controllerCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public com.google.protobuf.ByteString
        getControllerCodeBytes() {
      java.lang.Object ref = controllerCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        controllerCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, controllerCode_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, controllerCode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request) obj;

      boolean result = true;
      result = result && (hasSerialNumber() == other.hasSerialNumber());
      if (hasSerialNumber()) {
        result = result && getSerialNumber()
            .equals(other.getSerialNumber());
      }
      result = result && (hasControllerCode() == other.hasControllerCode());
      if (hasControllerCode()) {
        result = result && getControllerCode()
            .equals(other.getControllerCode());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSerialNumber()) {
        hash = (37 * hash) + SERIAL_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSerialNumber().hashCode();
      }
      if (hasControllerCode()) {
        hash = (37 * hash) + CONTROLLER_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getControllerCode().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_RegisterSteamController_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_RegisterSteamController_Request)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_RegisterSteamController_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_RegisterSteamController_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        serialNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        controllerCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_RegisterSteamController_Request_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serialNumber_ = serialNumber_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.controllerCode_ = controllerCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request.getDefaultInstance()) return this;
        if (other.hasSerialNumber()) {
          bitField0_ |= 0x00000001;
          serialNumber_ = other.serialNumber_;
          onChanged();
        }
        if (other.hasControllerCode()) {
          bitField0_ |= 0x00000002;
          controllerCode_ = other.controllerCode_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object serialNumber_ = "";
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public boolean hasSerialNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public java.lang.String getSerialNumber() {
        java.lang.Object ref = serialNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serialNumber_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSerialNumberBytes() {
        java.lang.Object ref = serialNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serialNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serialNumber_ = getDefaultInstance().getSerialNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object controllerCode_ = "";
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public boolean hasControllerCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public java.lang.String getControllerCode() {
        java.lang.Object ref = controllerCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            controllerCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public com.google.protobuf.ByteString
          getControllerCodeBytes() {
        java.lang.Object ref = controllerCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          controllerCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder setControllerCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        controllerCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder clearControllerCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        controllerCode_ = getDefaultInstance().getControllerCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder setControllerCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        controllerCode_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_RegisterSteamController_Request)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_RegisterSteamController_Request)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_RegisterSteamController_Request>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_RegisterSteamController_Request>() {
      public CAccountHardware_RegisterSteamController_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_RegisterSteamController_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_RegisterSteamController_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_RegisterSteamController_Request> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_RegisterSteamController_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_RegisterSteamController_Response)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CAccountHardware_RegisterSteamController_Response}
   */
  public  static final class CAccountHardware_RegisterSteamController_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_RegisterSteamController_Response)
      CAccountHardware_RegisterSteamController_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_RegisterSteamController_Response.newBuilder() to construct.
    private CAccountHardware_RegisterSteamController_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_RegisterSteamController_Response() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_RegisterSteamController_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_RegisterSteamController_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_RegisterSteamController_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_RegisterSteamController_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_RegisterSteamController_Response)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_RegisterSteamController_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_RegisterSteamController_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_RegisterSteamController_Response_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_RegisterSteamController_Response)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_RegisterSteamController_Response)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_RegisterSteamController_Response>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_RegisterSteamController_Response>() {
      public CAccountHardware_RegisterSteamController_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_RegisterSteamController_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_RegisterSteamController_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_RegisterSteamController_Response> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_RegisterSteamController_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_CompleteSteamControllerRegistration_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_CompleteSteamControllerRegistration_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string serial_number = 1;</code>
     */
    boolean hasSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    java.lang.String getSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    com.google.protobuf.ByteString
        getSerialNumberBytes();

    /**
     * <code>optional string controller_code = 2;</code>
     */
    boolean hasControllerCode();
    /**
     * <code>optional string controller_code = 2;</code>
     */
    java.lang.String getControllerCode();
    /**
     * <code>optional string controller_code = 2;</code>
     */
    com.google.protobuf.ByteString
        getControllerCodeBytes();
  }
  /**
   * Protobuf type {@code CAccountHardware_CompleteSteamControllerRegistration_Request}
   */
  public  static final class CAccountHardware_CompleteSteamControllerRegistration_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_CompleteSteamControllerRegistration_Request)
      CAccountHardware_CompleteSteamControllerRegistration_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_CompleteSteamControllerRegistration_Request.newBuilder() to construct.
    private CAccountHardware_CompleteSteamControllerRegistration_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_CompleteSteamControllerRegistration_Request() {
      serialNumber_ = "";
      controllerCode_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_CompleteSteamControllerRegistration_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              serialNumber_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              controllerCode_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_CompleteSteamControllerRegistration_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_CompleteSteamControllerRegistration_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request.Builder.class);
    }

    private int bitField0_;
    public static final int SERIAL_NUMBER_FIELD_NUMBER = 1;
    private volatile java.lang.Object serialNumber_;
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public boolean hasSerialNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public java.lang.String getSerialNumber() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serialNumber_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSerialNumberBytes() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serialNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTROLLER_CODE_FIELD_NUMBER = 2;
    private volatile java.lang.Object controllerCode_;
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public boolean hasControllerCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public java.lang.String getControllerCode() {
      java.lang.Object ref = controllerCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          controllerCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public com.google.protobuf.ByteString
        getControllerCodeBytes() {
      java.lang.Object ref = controllerCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        controllerCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, controllerCode_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, controllerCode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request) obj;

      boolean result = true;
      result = result && (hasSerialNumber() == other.hasSerialNumber());
      if (hasSerialNumber()) {
        result = result && getSerialNumber()
            .equals(other.getSerialNumber());
      }
      result = result && (hasControllerCode() == other.hasControllerCode());
      if (hasControllerCode()) {
        result = result && getControllerCode()
            .equals(other.getControllerCode());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSerialNumber()) {
        hash = (37 * hash) + SERIAL_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSerialNumber().hashCode();
      }
      if (hasControllerCode()) {
        hash = (37 * hash) + CONTROLLER_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getControllerCode().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_CompleteSteamControllerRegistration_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_CompleteSteamControllerRegistration_Request)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_CompleteSteamControllerRegistration_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_CompleteSteamControllerRegistration_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        serialNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        controllerCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_CompleteSteamControllerRegistration_Request_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serialNumber_ = serialNumber_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.controllerCode_ = controllerCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request.getDefaultInstance()) return this;
        if (other.hasSerialNumber()) {
          bitField0_ |= 0x00000001;
          serialNumber_ = other.serialNumber_;
          onChanged();
        }
        if (other.hasControllerCode()) {
          bitField0_ |= 0x00000002;
          controllerCode_ = other.controllerCode_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object serialNumber_ = "";
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public boolean hasSerialNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public java.lang.String getSerialNumber() {
        java.lang.Object ref = serialNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serialNumber_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSerialNumberBytes() {
        java.lang.Object ref = serialNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serialNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serialNumber_ = getDefaultInstance().getSerialNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object controllerCode_ = "";
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public boolean hasControllerCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public java.lang.String getControllerCode() {
        java.lang.Object ref = controllerCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            controllerCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public com.google.protobuf.ByteString
          getControllerCodeBytes() {
        java.lang.Object ref = controllerCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          controllerCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder setControllerCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        controllerCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder clearControllerCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        controllerCode_ = getDefaultInstance().getControllerCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder setControllerCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        controllerCode_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_CompleteSteamControllerRegistration_Request)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_CompleteSteamControllerRegistration_Request)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_CompleteSteamControllerRegistration_Request>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_CompleteSteamControllerRegistration_Request>() {
      public CAccountHardware_CompleteSteamControllerRegistration_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_CompleteSteamControllerRegistration_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_CompleteSteamControllerRegistration_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_CompleteSteamControllerRegistration_Request> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_CompleteSteamControllerRegistration_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_CompleteSteamControllerRegistration_Response)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CAccountHardware_CompleteSteamControllerRegistration_Response}
   */
  public  static final class CAccountHardware_CompleteSteamControllerRegistration_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_CompleteSteamControllerRegistration_Response)
      CAccountHardware_CompleteSteamControllerRegistration_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_CompleteSteamControllerRegistration_Response.newBuilder() to construct.
    private CAccountHardware_CompleteSteamControllerRegistration_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_CompleteSteamControllerRegistration_Response() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_CompleteSteamControllerRegistration_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_CompleteSteamControllerRegistration_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_CompleteSteamControllerRegistration_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_CompleteSteamControllerRegistration_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_CompleteSteamControllerRegistration_Response)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_CompleteSteamControllerRegistration_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_CompleteSteamControllerRegistration_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_CompleteSteamControllerRegistration_Response_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_CompleteSteamControllerRegistration_Response)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_CompleteSteamControllerRegistration_Response)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_CompleteSteamControllerRegistration_Response>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_CompleteSteamControllerRegistration_Response>() {
      public CAccountHardware_CompleteSteamControllerRegistration_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_CompleteSteamControllerRegistration_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_CompleteSteamControllerRegistration_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_CompleteSteamControllerRegistration_Response> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_CompleteSteamControllerRegistration_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_QueryAccountsRegisteredToSerial_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_QueryAccountsRegisteredToSerial_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string serial_number = 1;</code>
     */
    boolean hasSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    java.lang.String getSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    com.google.protobuf.ByteString
        getSerialNumberBytes();

    /**
     * <code>optional string controller_code = 2;</code>
     */
    boolean hasControllerCode();
    /**
     * <code>optional string controller_code = 2;</code>
     */
    java.lang.String getControllerCode();
    /**
     * <code>optional string controller_code = 2;</code>
     */
    com.google.protobuf.ByteString
        getControllerCodeBytes();
  }
  /**
   * Protobuf type {@code CAccountHardware_QueryAccountsRegisteredToSerial_Request}
   */
  public  static final class CAccountHardware_QueryAccountsRegisteredToSerial_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_QueryAccountsRegisteredToSerial_Request)
      CAccountHardware_QueryAccountsRegisteredToSerial_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_QueryAccountsRegisteredToSerial_Request.newBuilder() to construct.
    private CAccountHardware_QueryAccountsRegisteredToSerial_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_QueryAccountsRegisteredToSerial_Request() {
      serialNumber_ = "";
      controllerCode_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_QueryAccountsRegisteredToSerial_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              serialNumber_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              controllerCode_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request.Builder.class);
    }

    private int bitField0_;
    public static final int SERIAL_NUMBER_FIELD_NUMBER = 1;
    private volatile java.lang.Object serialNumber_;
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public boolean hasSerialNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public java.lang.String getSerialNumber() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serialNumber_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSerialNumberBytes() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serialNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTROLLER_CODE_FIELD_NUMBER = 2;
    private volatile java.lang.Object controllerCode_;
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public boolean hasControllerCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public java.lang.String getControllerCode() {
      java.lang.Object ref = controllerCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          controllerCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public com.google.protobuf.ByteString
        getControllerCodeBytes() {
      java.lang.Object ref = controllerCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        controllerCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, controllerCode_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, controllerCode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request) obj;

      boolean result = true;
      result = result && (hasSerialNumber() == other.hasSerialNumber());
      if (hasSerialNumber()) {
        result = result && getSerialNumber()
            .equals(other.getSerialNumber());
      }
      result = result && (hasControllerCode() == other.hasControllerCode());
      if (hasControllerCode()) {
        result = result && getControllerCode()
            .equals(other.getControllerCode());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSerialNumber()) {
        hash = (37 * hash) + SERIAL_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSerialNumber().hashCode();
      }
      if (hasControllerCode()) {
        hash = (37 * hash) + CONTROLLER_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getControllerCode().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_QueryAccountsRegisteredToSerial_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_QueryAccountsRegisteredToSerial_Request)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        serialNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        controllerCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Request_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serialNumber_ = serialNumber_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.controllerCode_ = controllerCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request.getDefaultInstance()) return this;
        if (other.hasSerialNumber()) {
          bitField0_ |= 0x00000001;
          serialNumber_ = other.serialNumber_;
          onChanged();
        }
        if (other.hasControllerCode()) {
          bitField0_ |= 0x00000002;
          controllerCode_ = other.controllerCode_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object serialNumber_ = "";
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public boolean hasSerialNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public java.lang.String getSerialNumber() {
        java.lang.Object ref = serialNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serialNumber_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSerialNumberBytes() {
        java.lang.Object ref = serialNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serialNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serialNumber_ = getDefaultInstance().getSerialNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object controllerCode_ = "";
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public boolean hasControllerCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public java.lang.String getControllerCode() {
        java.lang.Object ref = controllerCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            controllerCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public com.google.protobuf.ByteString
          getControllerCodeBytes() {
        java.lang.Object ref = controllerCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          controllerCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder setControllerCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        controllerCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder clearControllerCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        controllerCode_ = getDefaultInstance().getControllerCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder setControllerCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        controllerCode_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_QueryAccountsRegisteredToSerial_Request)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_QueryAccountsRegisteredToSerial_Request)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_QueryAccountsRegisteredToSerial_Request>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_QueryAccountsRegisteredToSerial_Request>() {
      public CAccountHardware_QueryAccountsRegisteredToSerial_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_QueryAccountsRegisteredToSerial_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_QueryAccountsRegisteredToSerial_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_QueryAccountsRegisteredToSerial_Request> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_QueryAccountsRegisteredToSerial_AccountsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_QueryAccountsRegisteredToSerial_Accounts)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    boolean hasAccountid();
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    int getAccountid();

    /**
     * <code>optional bool registration_complete = 2;</code>
     */
    boolean hasRegistrationComplete();
    /**
     * <code>optional bool registration_complete = 2;</code>
     */
    boolean getRegistrationComplete();
  }
  /**
   * Protobuf type {@code CAccountHardware_QueryAccountsRegisteredToSerial_Accounts}
   */
  public  static final class CAccountHardware_QueryAccountsRegisteredToSerial_Accounts extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_QueryAccountsRegisteredToSerial_Accounts)
      CAccountHardware_QueryAccountsRegisteredToSerial_AccountsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.newBuilder() to construct.
    private CAccountHardware_QueryAccountsRegisteredToSerial_Accounts(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_QueryAccountsRegisteredToSerial_Accounts() {
      accountid_ = 0;
      registrationComplete_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_QueryAccountsRegisteredToSerial_Accounts(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountid_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              registrationComplete_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Accounts_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Accounts_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.Builder.class);
    }

    private int bitField0_;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private int accountid_;
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    public boolean hasAccountid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    public int getAccountid() {
      return accountid_;
    }

    public static final int REGISTRATION_COMPLETE_FIELD_NUMBER = 2;
    private boolean registrationComplete_;
    /**
     * <code>optional bool registration_complete = 2;</code>
     */
    public boolean hasRegistrationComplete() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool registration_complete = 2;</code>
     */
    public boolean getRegistrationComplete() {
      return registrationComplete_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, registrationComplete_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, registrationComplete_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts) obj;

      boolean result = true;
      result = result && (hasAccountid() == other.hasAccountid());
      if (hasAccountid()) {
        result = result && (getAccountid()
            == other.getAccountid());
      }
      result = result && (hasRegistrationComplete() == other.hasRegistrationComplete());
      if (hasRegistrationComplete()) {
        result = result && (getRegistrationComplete()
            == other.getRegistrationComplete());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccountid()) {
        hash = (37 * hash) + ACCOUNTID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountid();
      }
      if (hasRegistrationComplete()) {
        hash = (37 * hash) + REGISTRATION_COMPLETE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getRegistrationComplete());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_QueryAccountsRegisteredToSerial_Accounts}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_QueryAccountsRegisteredToSerial_Accounts)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_AccountsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Accounts_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Accounts_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        accountid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        registrationComplete_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Accounts_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountid_ = accountid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.registrationComplete_ = registrationComplete_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.getDefaultInstance()) return this;
        if (other.hasAccountid()) {
          setAccountid(other.getAccountid());
        }
        if (other.hasRegistrationComplete()) {
          setRegistrationComplete(other.getRegistrationComplete());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountid_ ;
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public boolean hasAccountid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public int getAccountid() {
        return accountid_;
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public Builder setAccountid(int value) {
        bitField0_ |= 0x00000001;
        accountid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public Builder clearAccountid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountid_ = 0;
        onChanged();
        return this;
      }

      private boolean registrationComplete_ ;
      /**
       * <code>optional bool registration_complete = 2;</code>
       */
      public boolean hasRegistrationComplete() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool registration_complete = 2;</code>
       */
      public boolean getRegistrationComplete() {
        return registrationComplete_;
      }
      /**
       * <code>optional bool registration_complete = 2;</code>
       */
      public Builder setRegistrationComplete(boolean value) {
        bitField0_ |= 0x00000002;
        registrationComplete_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool registration_complete = 2;</code>
       */
      public Builder clearRegistrationComplete() {
        bitField0_ = (bitField0_ & ~0x00000002);
        registrationComplete_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_QueryAccountsRegisteredToSerial_Accounts)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_QueryAccountsRegisteredToSerial_Accounts)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_QueryAccountsRegisteredToSerial_Accounts>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_QueryAccountsRegisteredToSerial_Accounts>() {
      public CAccountHardware_QueryAccountsRegisteredToSerial_Accounts parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_QueryAccountsRegisteredToSerial_Accounts(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_QueryAccountsRegisteredToSerial_Accounts> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_QueryAccountsRegisteredToSerial_Accounts> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_QueryAccountsRegisteredToSerial_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_QueryAccountsRegisteredToSerial_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
     */
    java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts> 
        getAccountsList();
    /**
     * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
     */
    SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts getAccounts(int index);
    /**
     * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
     */
    int getAccountsCount();
    /**
     * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
     */
    java.util.List<? extends SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_AccountsOrBuilder> 
        getAccountsOrBuilderList();
    /**
     * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
     */
    SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_AccountsOrBuilder getAccountsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CAccountHardware_QueryAccountsRegisteredToSerial_Response}
   */
  public  static final class CAccountHardware_QueryAccountsRegisteredToSerial_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_QueryAccountsRegisteredToSerial_Response)
      CAccountHardware_QueryAccountsRegisteredToSerial_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_QueryAccountsRegisteredToSerial_Response.newBuilder() to construct.
    private CAccountHardware_QueryAccountsRegisteredToSerial_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_QueryAccountsRegisteredToSerial_Response() {
      accounts_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_QueryAccountsRegisteredToSerial_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                accounts_ = new java.util.ArrayList<SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts>();
                mutable_bitField0_ |= 0x00000001;
              }
              accounts_.add(
                  input.readMessage(SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          accounts_ = java.util.Collections.unmodifiableList(accounts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response.Builder.class);
    }

    public static final int ACCOUNTS_FIELD_NUMBER = 1;
    private java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts> accounts_;
    /**
     * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
     */
    public java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts> getAccountsList() {
      return accounts_;
    }
    /**
     * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
     */
    public java.util.List<? extends SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_AccountsOrBuilder> 
        getAccountsOrBuilderList() {
      return accounts_;
    }
    /**
     * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
     */
    public int getAccountsCount() {
      return accounts_.size();
    }
    /**
     * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
     */
    public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts getAccounts(int index) {
      return accounts_.get(index);
    }
    /**
     * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
     */
    public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_AccountsOrBuilder getAccountsOrBuilder(
        int index) {
      return accounts_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < accounts_.size(); i++) {
        output.writeMessage(1, accounts_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < accounts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, accounts_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response) obj;

      boolean result = true;
      result = result && getAccountsList()
          .equals(other.getAccountsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAccountsCount() > 0) {
        hash = (37 * hash) + ACCOUNTS_FIELD_NUMBER;
        hash = (53 * hash) + getAccountsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_QueryAccountsRegisteredToSerial_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_QueryAccountsRegisteredToSerial_Response)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAccountsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (accountsBuilder_ == null) {
          accounts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          accountsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Response_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response(this);
        int from_bitField0_ = bitField0_;
        if (accountsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            accounts_ = java.util.Collections.unmodifiableList(accounts_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.accounts_ = accounts_;
        } else {
          result.accounts_ = accountsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response.getDefaultInstance()) return this;
        if (accountsBuilder_ == null) {
          if (!other.accounts_.isEmpty()) {
            if (accounts_.isEmpty()) {
              accounts_ = other.accounts_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAccountsIsMutable();
              accounts_.addAll(other.accounts_);
            }
            onChanged();
          }
        } else {
          if (!other.accounts_.isEmpty()) {
            if (accountsBuilder_.isEmpty()) {
              accountsBuilder_.dispose();
              accountsBuilder_ = null;
              accounts_ = other.accounts_;
              bitField0_ = (bitField0_ & ~0x00000001);
              accountsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAccountsFieldBuilder() : null;
            } else {
              accountsBuilder_.addAllMessages(other.accounts_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts> accounts_ =
        java.util.Collections.emptyList();
      private void ensureAccountsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          accounts_ = new java.util.ArrayList<SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts>(accounts_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.Builder, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_AccountsOrBuilder> accountsBuilder_;

      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts> getAccountsList() {
        if (accountsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(accounts_);
        } else {
          return accountsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public int getAccountsCount() {
        if (accountsBuilder_ == null) {
          return accounts_.size();
        } else {
          return accountsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts getAccounts(int index) {
        if (accountsBuilder_ == null) {
          return accounts_.get(index);
        } else {
          return accountsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public Builder setAccounts(
          int index, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts value) {
        if (accountsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccountsIsMutable();
          accounts_.set(index, value);
          onChanged();
        } else {
          accountsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public Builder setAccounts(
          int index, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.Builder builderForValue) {
        if (accountsBuilder_ == null) {
          ensureAccountsIsMutable();
          accounts_.set(index, builderForValue.build());
          onChanged();
        } else {
          accountsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public Builder addAccounts(SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts value) {
        if (accountsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccountsIsMutable();
          accounts_.add(value);
          onChanged();
        } else {
          accountsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public Builder addAccounts(
          int index, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts value) {
        if (accountsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccountsIsMutable();
          accounts_.add(index, value);
          onChanged();
        } else {
          accountsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public Builder addAccounts(
          SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.Builder builderForValue) {
        if (accountsBuilder_ == null) {
          ensureAccountsIsMutable();
          accounts_.add(builderForValue.build());
          onChanged();
        } else {
          accountsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public Builder addAccounts(
          int index, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.Builder builderForValue) {
        if (accountsBuilder_ == null) {
          ensureAccountsIsMutable();
          accounts_.add(index, builderForValue.build());
          onChanged();
        } else {
          accountsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public Builder addAllAccounts(
          java.lang.Iterable<? extends SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts> values) {
        if (accountsBuilder_ == null) {
          ensureAccountsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, accounts_);
          onChanged();
        } else {
          accountsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public Builder clearAccounts() {
        if (accountsBuilder_ == null) {
          accounts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          accountsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public Builder removeAccounts(int index) {
        if (accountsBuilder_ == null) {
          ensureAccountsIsMutable();
          accounts_.remove(index);
          onChanged();
        } else {
          accountsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.Builder getAccountsBuilder(
          int index) {
        return getAccountsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_AccountsOrBuilder getAccountsOrBuilder(
          int index) {
        if (accountsBuilder_ == null) {
          return accounts_.get(index);  } else {
          return accountsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public java.util.List<? extends SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_AccountsOrBuilder> 
           getAccountsOrBuilderList() {
        if (accountsBuilder_ != null) {
          return accountsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(accounts_);
        }
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.Builder addAccountsBuilder() {
        return getAccountsFieldBuilder().addBuilder(
            SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.getDefaultInstance());
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.Builder addAccountsBuilder(
          int index) {
        return getAccountsFieldBuilder().addBuilder(
            index, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.getDefaultInstance());
      }
      /**
       * <code>repeated .CAccountHardware_QueryAccountsRegisteredToSerial_Accounts accounts = 1;</code>
       */
      public java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.Builder> 
           getAccountsBuilderList() {
        return getAccountsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.Builder, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_AccountsOrBuilder> 
          getAccountsFieldBuilder() {
        if (accountsBuilder_ == null) {
          accountsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.Builder, SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_AccountsOrBuilder>(
                  accounts_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          accounts_ = null;
        }
        return accountsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_QueryAccountsRegisteredToSerial_Response)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_QueryAccountsRegisteredToSerial_Response)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_QueryAccountsRegisteredToSerial_Response>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_QueryAccountsRegisteredToSerial_Response>() {
      public CAccountHardware_QueryAccountsRegisteredToSerial_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_QueryAccountsRegisteredToSerial_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_QueryAccountsRegisteredToSerial_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_QueryAccountsRegisteredToSerial_Response> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_QueryAccountsRegisteredToSerial_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_SteamControllerSetConfig_ControllerConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_SteamControllerSetConfig_ControllerConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string appidorname = 1;</code>
     */
    boolean hasAppidorname();
    /**
     * <code>optional string appidorname = 1;</code>
     */
    java.lang.String getAppidorname();
    /**
     * <code>optional string appidorname = 1;</code>
     */
    com.google.protobuf.ByteString
        getAppidornameBytes();

    /**
     * <code>optional uint64 publishedfileid = 2;</code>
     */
    boolean hasPublishedfileid();
    /**
     * <code>optional uint64 publishedfileid = 2;</code>
     */
    long getPublishedfileid();

    /**
     * <code>optional string templatename = 3;</code>
     */
    boolean hasTemplatename();
    /**
     * <code>optional string templatename = 3;</code>
     */
    java.lang.String getTemplatename();
    /**
     * <code>optional string templatename = 3;</code>
     */
    com.google.protobuf.ByteString
        getTemplatenameBytes();
  }
  /**
   * Protobuf type {@code CAccountHardware_SteamControllerSetConfig_ControllerConfig}
   */
  public  static final class CAccountHardware_SteamControllerSetConfig_ControllerConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_SteamControllerSetConfig_ControllerConfig)
      CAccountHardware_SteamControllerSetConfig_ControllerConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_SteamControllerSetConfig_ControllerConfig.newBuilder() to construct.
    private CAccountHardware_SteamControllerSetConfig_ControllerConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_SteamControllerSetConfig_ControllerConfig() {
      appidorname_ = "";
      publishedfileid_ = 0L;
      templatename_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_SteamControllerSetConfig_ControllerConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              appidorname_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              publishedfileid_ = input.readUInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              templatename_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_ControllerConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_ControllerConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.Builder.class);
    }

    private int bitField0_;
    public static final int APPIDORNAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object appidorname_;
    /**
     * <code>optional string appidorname = 1;</code>
     */
    public boolean hasAppidorname() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string appidorname = 1;</code>
     */
    public java.lang.String getAppidorname() {
      java.lang.Object ref = appidorname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          appidorname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string appidorname = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAppidornameBytes() {
      java.lang.Object ref = appidorname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appidorname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PUBLISHEDFILEID_FIELD_NUMBER = 2;
    private long publishedfileid_;
    /**
     * <code>optional uint64 publishedfileid = 2;</code>
     */
    public boolean hasPublishedfileid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 publishedfileid = 2;</code>
     */
    public long getPublishedfileid() {
      return publishedfileid_;
    }

    public static final int TEMPLATENAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object templatename_;
    /**
     * <code>optional string templatename = 3;</code>
     */
    public boolean hasTemplatename() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string templatename = 3;</code>
     */
    public java.lang.String getTemplatename() {
      java.lang.Object ref = templatename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          templatename_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string templatename = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTemplatenameBytes() {
      java.lang.Object ref = templatename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        templatename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, appidorname_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, publishedfileid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, templatename_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, appidorname_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, publishedfileid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, templatename_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig) obj;

      boolean result = true;
      result = result && (hasAppidorname() == other.hasAppidorname());
      if (hasAppidorname()) {
        result = result && getAppidorname()
            .equals(other.getAppidorname());
      }
      result = result && (hasPublishedfileid() == other.hasPublishedfileid());
      if (hasPublishedfileid()) {
        result = result && (getPublishedfileid()
            == other.getPublishedfileid());
      }
      result = result && (hasTemplatename() == other.hasTemplatename());
      if (hasTemplatename()) {
        result = result && getTemplatename()
            .equals(other.getTemplatename());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAppidorname()) {
        hash = (37 * hash) + APPIDORNAME_FIELD_NUMBER;
        hash = (53 * hash) + getAppidorname().hashCode();
      }
      if (hasPublishedfileid()) {
        hash = (37 * hash) + PUBLISHEDFILEID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPublishedfileid());
      }
      if (hasTemplatename()) {
        hash = (37 * hash) + TEMPLATENAME_FIELD_NUMBER;
        hash = (53 * hash) + getTemplatename().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_SteamControllerSetConfig_ControllerConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_SteamControllerSetConfig_ControllerConfig)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_ControllerConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_ControllerConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        appidorname_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        publishedfileid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        templatename_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_ControllerConfig_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.appidorname_ = appidorname_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.publishedfileid_ = publishedfileid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.templatename_ = templatename_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.getDefaultInstance()) return this;
        if (other.hasAppidorname()) {
          bitField0_ |= 0x00000001;
          appidorname_ = other.appidorname_;
          onChanged();
        }
        if (other.hasPublishedfileid()) {
          setPublishedfileid(other.getPublishedfileid());
        }
        if (other.hasTemplatename()) {
          bitField0_ |= 0x00000004;
          templatename_ = other.templatename_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object appidorname_ = "";
      /**
       * <code>optional string appidorname = 1;</code>
       */
      public boolean hasAppidorname() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string appidorname = 1;</code>
       */
      public java.lang.String getAppidorname() {
        java.lang.Object ref = appidorname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            appidorname_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string appidorname = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAppidornameBytes() {
        java.lang.Object ref = appidorname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          appidorname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string appidorname = 1;</code>
       */
      public Builder setAppidorname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        appidorname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string appidorname = 1;</code>
       */
      public Builder clearAppidorname() {
        bitField0_ = (bitField0_ & ~0x00000001);
        appidorname_ = getDefaultInstance().getAppidorname();
        onChanged();
        return this;
      }
      /**
       * <code>optional string appidorname = 1;</code>
       */
      public Builder setAppidornameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        appidorname_ = value;
        onChanged();
        return this;
      }

      private long publishedfileid_ ;
      /**
       * <code>optional uint64 publishedfileid = 2;</code>
       */
      public boolean hasPublishedfileid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 publishedfileid = 2;</code>
       */
      public long getPublishedfileid() {
        return publishedfileid_;
      }
      /**
       * <code>optional uint64 publishedfileid = 2;</code>
       */
      public Builder setPublishedfileid(long value) {
        bitField0_ |= 0x00000002;
        publishedfileid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 publishedfileid = 2;</code>
       */
      public Builder clearPublishedfileid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        publishedfileid_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object templatename_ = "";
      /**
       * <code>optional string templatename = 3;</code>
       */
      public boolean hasTemplatename() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string templatename = 3;</code>
       */
      public java.lang.String getTemplatename() {
        java.lang.Object ref = templatename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            templatename_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string templatename = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTemplatenameBytes() {
        java.lang.Object ref = templatename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          templatename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string templatename = 3;</code>
       */
      public Builder setTemplatename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        templatename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string templatename = 3;</code>
       */
      public Builder clearTemplatename() {
        bitField0_ = (bitField0_ & ~0x00000004);
        templatename_ = getDefaultInstance().getTemplatename();
        onChanged();
        return this;
      }
      /**
       * <code>optional string templatename = 3;</code>
       */
      public Builder setTemplatenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        templatename_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_SteamControllerSetConfig_ControllerConfig)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_SteamControllerSetConfig_ControllerConfig)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_SteamControllerSetConfig_ControllerConfig>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_SteamControllerSetConfig_ControllerConfig>() {
      public CAccountHardware_SteamControllerSetConfig_ControllerConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_SteamControllerSetConfig_ControllerConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_SteamControllerSetConfig_ControllerConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_SteamControllerSetConfig_ControllerConfig> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_SteamControllerSetConfig_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_SteamControllerSetConfig_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string serial_number = 1;</code>
     */
    boolean hasSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    java.lang.String getSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    com.google.protobuf.ByteString
        getSerialNumberBytes();

    /**
     * <code>optional string controller_code = 2;</code>
     */
    boolean hasControllerCode();
    /**
     * <code>optional string controller_code = 2;</code>
     */
    java.lang.String getControllerCode();
    /**
     * <code>optional string controller_code = 2;</code>
     */
    com.google.protobuf.ByteString
        getControllerCodeBytes();

    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    boolean hasAccountid();
    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    int getAccountid();

    /**
     * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
     */
    java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig> 
        getConfigurationsList();
    /**
     * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
     */
    SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig getConfigurations(int index);
    /**
     * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
     */
    int getConfigurationsCount();
    /**
     * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
     */
    java.util.List<? extends SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfigOrBuilder> 
        getConfigurationsOrBuilderList();
    /**
     * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
     */
    SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfigOrBuilder getConfigurationsOrBuilder(
        int index);

    /**
     * <code>optional int32 controller_type = 5 [default = 2];</code>
     */
    boolean hasControllerType();
    /**
     * <code>optional int32 controller_type = 5 [default = 2];</code>
     */
    int getControllerType();

    /**
     * <code>optional bool only_for_this_serial = 6 [default = false];</code>
     */
    boolean hasOnlyForThisSerial();
    /**
     * <code>optional bool only_for_this_serial = 6 [default = false];</code>
     */
    boolean getOnlyForThisSerial();
  }
  /**
   * Protobuf type {@code CAccountHardware_SteamControllerSetConfig_Request}
   */
  public  static final class CAccountHardware_SteamControllerSetConfig_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_SteamControllerSetConfig_Request)
      CAccountHardware_SteamControllerSetConfig_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_SteamControllerSetConfig_Request.newBuilder() to construct.
    private CAccountHardware_SteamControllerSetConfig_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_SteamControllerSetConfig_Request() {
      serialNumber_ = "";
      controllerCode_ = "";
      accountid_ = 0;
      configurations_ = java.util.Collections.emptyList();
      controllerType_ = 2;
      onlyForThisSerial_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_SteamControllerSetConfig_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              serialNumber_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              controllerCode_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              accountid_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                configurations_ = new java.util.ArrayList<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig>();
                mutable_bitField0_ |= 0x00000008;
              }
              configurations_.add(
                  input.readMessage(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              controllerType_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              onlyForThisSerial_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          configurations_ = java.util.Collections.unmodifiableList(configurations_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request.Builder.class);
    }

    private int bitField0_;
    public static final int SERIAL_NUMBER_FIELD_NUMBER = 1;
    private volatile java.lang.Object serialNumber_;
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public boolean hasSerialNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public java.lang.String getSerialNumber() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serialNumber_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSerialNumberBytes() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serialNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTROLLER_CODE_FIELD_NUMBER = 2;
    private volatile java.lang.Object controllerCode_;
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public boolean hasControllerCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public java.lang.String getControllerCode() {
      java.lang.Object ref = controllerCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          controllerCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public com.google.protobuf.ByteString
        getControllerCodeBytes() {
      java.lang.Object ref = controllerCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        controllerCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACCOUNTID_FIELD_NUMBER = 3;
    private int accountid_;
    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    public boolean hasAccountid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    public int getAccountid() {
      return accountid_;
    }

    public static final int CONFIGURATIONS_FIELD_NUMBER = 4;
    private java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig> configurations_;
    /**
     * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
     */
    public java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig> getConfigurationsList() {
      return configurations_;
    }
    /**
     * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
     */
    public java.util.List<? extends SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfigOrBuilder> 
        getConfigurationsOrBuilderList() {
      return configurations_;
    }
    /**
     * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
     */
    public int getConfigurationsCount() {
      return configurations_.size();
    }
    /**
     * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
     */
    public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig getConfigurations(int index) {
      return configurations_.get(index);
    }
    /**
     * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
     */
    public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfigOrBuilder getConfigurationsOrBuilder(
        int index) {
      return configurations_.get(index);
    }

    public static final int CONTROLLER_TYPE_FIELD_NUMBER = 5;
    private int controllerType_;
    /**
     * <code>optional int32 controller_type = 5 [default = 2];</code>
     */
    public boolean hasControllerType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 controller_type = 5 [default = 2];</code>
     */
    public int getControllerType() {
      return controllerType_;
    }

    public static final int ONLY_FOR_THIS_SERIAL_FIELD_NUMBER = 6;
    private boolean onlyForThisSerial_;
    /**
     * <code>optional bool only_for_this_serial = 6 [default = false];</code>
     */
    public boolean hasOnlyForThisSerial() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool only_for_this_serial = 6 [default = false];</code>
     */
    public boolean getOnlyForThisSerial() {
      return onlyForThisSerial_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, controllerCode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, accountid_);
      }
      for (int i = 0; i < configurations_.size(); i++) {
        output.writeMessage(4, configurations_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, controllerType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, onlyForThisSerial_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, controllerCode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, accountid_);
      }
      for (int i = 0; i < configurations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, configurations_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, controllerType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, onlyForThisSerial_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request) obj;

      boolean result = true;
      result = result && (hasSerialNumber() == other.hasSerialNumber());
      if (hasSerialNumber()) {
        result = result && getSerialNumber()
            .equals(other.getSerialNumber());
      }
      result = result && (hasControllerCode() == other.hasControllerCode());
      if (hasControllerCode()) {
        result = result && getControllerCode()
            .equals(other.getControllerCode());
      }
      result = result && (hasAccountid() == other.hasAccountid());
      if (hasAccountid()) {
        result = result && (getAccountid()
            == other.getAccountid());
      }
      result = result && getConfigurationsList()
          .equals(other.getConfigurationsList());
      result = result && (hasControllerType() == other.hasControllerType());
      if (hasControllerType()) {
        result = result && (getControllerType()
            == other.getControllerType());
      }
      result = result && (hasOnlyForThisSerial() == other.hasOnlyForThisSerial());
      if (hasOnlyForThisSerial()) {
        result = result && (getOnlyForThisSerial()
            == other.getOnlyForThisSerial());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSerialNumber()) {
        hash = (37 * hash) + SERIAL_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSerialNumber().hashCode();
      }
      if (hasControllerCode()) {
        hash = (37 * hash) + CONTROLLER_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getControllerCode().hashCode();
      }
      if (hasAccountid()) {
        hash = (37 * hash) + ACCOUNTID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountid();
      }
      if (getConfigurationsCount() > 0) {
        hash = (37 * hash) + CONFIGURATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getConfigurationsList().hashCode();
      }
      if (hasControllerType()) {
        hash = (37 * hash) + CONTROLLER_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getControllerType();
      }
      if (hasOnlyForThisSerial()) {
        hash = (37 * hash) + ONLY_FOR_THIS_SERIAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getOnlyForThisSerial());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_SteamControllerSetConfig_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_SteamControllerSetConfig_Request)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getConfigurationsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        serialNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        controllerCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        accountid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (configurationsBuilder_ == null) {
          configurations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          configurationsBuilder_.clear();
        }
        controllerType_ = 2;
        bitField0_ = (bitField0_ & ~0x00000010);
        onlyForThisSerial_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_Request_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serialNumber_ = serialNumber_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.controllerCode_ = controllerCode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.accountid_ = accountid_;
        if (configurationsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            configurations_ = java.util.Collections.unmodifiableList(configurations_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.configurations_ = configurations_;
        } else {
          result.configurations_ = configurationsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.controllerType_ = controllerType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.onlyForThisSerial_ = onlyForThisSerial_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request.getDefaultInstance()) return this;
        if (other.hasSerialNumber()) {
          bitField0_ |= 0x00000001;
          serialNumber_ = other.serialNumber_;
          onChanged();
        }
        if (other.hasControllerCode()) {
          bitField0_ |= 0x00000002;
          controllerCode_ = other.controllerCode_;
          onChanged();
        }
        if (other.hasAccountid()) {
          setAccountid(other.getAccountid());
        }
        if (configurationsBuilder_ == null) {
          if (!other.configurations_.isEmpty()) {
            if (configurations_.isEmpty()) {
              configurations_ = other.configurations_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureConfigurationsIsMutable();
              configurations_.addAll(other.configurations_);
            }
            onChanged();
          }
        } else {
          if (!other.configurations_.isEmpty()) {
            if (configurationsBuilder_.isEmpty()) {
              configurationsBuilder_.dispose();
              configurationsBuilder_ = null;
              configurations_ = other.configurations_;
              bitField0_ = (bitField0_ & ~0x00000008);
              configurationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getConfigurationsFieldBuilder() : null;
            } else {
              configurationsBuilder_.addAllMessages(other.configurations_);
            }
          }
        }
        if (other.hasControllerType()) {
          setControllerType(other.getControllerType());
        }
        if (other.hasOnlyForThisSerial()) {
          setOnlyForThisSerial(other.getOnlyForThisSerial());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object serialNumber_ = "";
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public boolean hasSerialNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public java.lang.String getSerialNumber() {
        java.lang.Object ref = serialNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serialNumber_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSerialNumberBytes() {
        java.lang.Object ref = serialNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serialNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serialNumber_ = getDefaultInstance().getSerialNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object controllerCode_ = "";
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public boolean hasControllerCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public java.lang.String getControllerCode() {
        java.lang.Object ref = controllerCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            controllerCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public com.google.protobuf.ByteString
          getControllerCodeBytes() {
        java.lang.Object ref = controllerCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          controllerCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder setControllerCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        controllerCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder clearControllerCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        controllerCode_ = getDefaultInstance().getControllerCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder setControllerCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        controllerCode_ = value;
        onChanged();
        return this;
      }

      private int accountid_ ;
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public boolean hasAccountid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public int getAccountid() {
        return accountid_;
      }
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public Builder setAccountid(int value) {
        bitField0_ |= 0x00000004;
        accountid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public Builder clearAccountid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accountid_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig> configurations_ =
        java.util.Collections.emptyList();
      private void ensureConfigurationsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          configurations_ = new java.util.ArrayList<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig>(configurations_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.Builder, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfigOrBuilder> configurationsBuilder_;

      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig> getConfigurationsList() {
        if (configurationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(configurations_);
        } else {
          return configurationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public int getConfigurationsCount() {
        if (configurationsBuilder_ == null) {
          return configurations_.size();
        } else {
          return configurationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig getConfigurations(int index) {
        if (configurationsBuilder_ == null) {
          return configurations_.get(index);
        } else {
          return configurationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public Builder setConfigurations(
          int index, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig value) {
        if (configurationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigurationsIsMutable();
          configurations_.set(index, value);
          onChanged();
        } else {
          configurationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public Builder setConfigurations(
          int index, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.Builder builderForValue) {
        if (configurationsBuilder_ == null) {
          ensureConfigurationsIsMutable();
          configurations_.set(index, builderForValue.build());
          onChanged();
        } else {
          configurationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public Builder addConfigurations(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig value) {
        if (configurationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigurationsIsMutable();
          configurations_.add(value);
          onChanged();
        } else {
          configurationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public Builder addConfigurations(
          int index, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig value) {
        if (configurationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigurationsIsMutable();
          configurations_.add(index, value);
          onChanged();
        } else {
          configurationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public Builder addConfigurations(
          SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.Builder builderForValue) {
        if (configurationsBuilder_ == null) {
          ensureConfigurationsIsMutable();
          configurations_.add(builderForValue.build());
          onChanged();
        } else {
          configurationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public Builder addConfigurations(
          int index, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.Builder builderForValue) {
        if (configurationsBuilder_ == null) {
          ensureConfigurationsIsMutable();
          configurations_.add(index, builderForValue.build());
          onChanged();
        } else {
          configurationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public Builder addAllConfigurations(
          java.lang.Iterable<? extends SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig> values) {
        if (configurationsBuilder_ == null) {
          ensureConfigurationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, configurations_);
          onChanged();
        } else {
          configurationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public Builder clearConfigurations() {
        if (configurationsBuilder_ == null) {
          configurations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          configurationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public Builder removeConfigurations(int index) {
        if (configurationsBuilder_ == null) {
          ensureConfigurationsIsMutable();
          configurations_.remove(index);
          onChanged();
        } else {
          configurationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.Builder getConfigurationsBuilder(
          int index) {
        return getConfigurationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfigOrBuilder getConfigurationsOrBuilder(
          int index) {
        if (configurationsBuilder_ == null) {
          return configurations_.get(index);  } else {
          return configurationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public java.util.List<? extends SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfigOrBuilder> 
           getConfigurationsOrBuilderList() {
        if (configurationsBuilder_ != null) {
          return configurationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(configurations_);
        }
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.Builder addConfigurationsBuilder() {
        return getConfigurationsFieldBuilder().addBuilder(
            SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.getDefaultInstance());
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.Builder addConfigurationsBuilder(
          int index) {
        return getConfigurationsFieldBuilder().addBuilder(
            index, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.getDefaultInstance());
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerSetConfig_ControllerConfig configurations = 4;</code>
       */
      public java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.Builder> 
           getConfigurationsBuilderList() {
        return getConfigurationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.Builder, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfigOrBuilder> 
          getConfigurationsFieldBuilder() {
        if (configurationsBuilder_ == null) {
          configurationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfig.Builder, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ControllerConfigOrBuilder>(
                  configurations_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          configurations_ = null;
        }
        return configurationsBuilder_;
      }

      private int controllerType_ = 2;
      /**
       * <code>optional int32 controller_type = 5 [default = 2];</code>
       */
      public boolean hasControllerType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 controller_type = 5 [default = 2];</code>
       */
      public int getControllerType() {
        return controllerType_;
      }
      /**
       * <code>optional int32 controller_type = 5 [default = 2];</code>
       */
      public Builder setControllerType(int value) {
        bitField0_ |= 0x00000010;
        controllerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 controller_type = 5 [default = 2];</code>
       */
      public Builder clearControllerType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        controllerType_ = 2;
        onChanged();
        return this;
      }

      private boolean onlyForThisSerial_ ;
      /**
       * <code>optional bool only_for_this_serial = 6 [default = false];</code>
       */
      public boolean hasOnlyForThisSerial() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool only_for_this_serial = 6 [default = false];</code>
       */
      public boolean getOnlyForThisSerial() {
        return onlyForThisSerial_;
      }
      /**
       * <code>optional bool only_for_this_serial = 6 [default = false];</code>
       */
      public Builder setOnlyForThisSerial(boolean value) {
        bitField0_ |= 0x00000020;
        onlyForThisSerial_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool only_for_this_serial = 6 [default = false];</code>
       */
      public Builder clearOnlyForThisSerial() {
        bitField0_ = (bitField0_ & ~0x00000020);
        onlyForThisSerial_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_SteamControllerSetConfig_Request)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_SteamControllerSetConfig_Request)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_SteamControllerSetConfig_Request>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_SteamControllerSetConfig_Request>() {
      public CAccountHardware_SteamControllerSetConfig_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_SteamControllerSetConfig_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_SteamControllerSetConfig_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_SteamControllerSetConfig_Request> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_SteamControllerSetConfig_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_SteamControllerSetConfig_Response)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CAccountHardware_SteamControllerSetConfig_Response}
   */
  public  static final class CAccountHardware_SteamControllerSetConfig_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_SteamControllerSetConfig_Response)
      CAccountHardware_SteamControllerSetConfig_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_SteamControllerSetConfig_Response.newBuilder() to construct.
    private CAccountHardware_SteamControllerSetConfig_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_SteamControllerSetConfig_Response() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_SteamControllerSetConfig_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_SteamControllerSetConfig_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_SteamControllerSetConfig_Response)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerSetConfig_Response_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_SteamControllerSetConfig_Response)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_SteamControllerSetConfig_Response)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_SteamControllerSetConfig_Response>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_SteamControllerSetConfig_Response>() {
      public CAccountHardware_SteamControllerSetConfig_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_SteamControllerSetConfig_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_SteamControllerSetConfig_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_SteamControllerSetConfig_Response> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerSetConfig_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_SteamControllerGetConfig_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_SteamControllerGetConfig_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string serial_number = 1;</code>
     */
    boolean hasSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    java.lang.String getSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    com.google.protobuf.ByteString
        getSerialNumberBytes();

    /**
     * <code>optional string controller_code = 2;</code>
     */
    boolean hasControllerCode();
    /**
     * <code>optional string controller_code = 2;</code>
     */
    java.lang.String getControllerCode();
    /**
     * <code>optional string controller_code = 2;</code>
     */
    com.google.protobuf.ByteString
        getControllerCodeBytes();

    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    boolean hasAccountid();
    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    int getAccountid();

    /**
     * <code>optional string appidorname = 4;</code>
     */
    boolean hasAppidorname();
    /**
     * <code>optional string appidorname = 4;</code>
     */
    java.lang.String getAppidorname();
    /**
     * <code>optional string appidorname = 4;</code>
     */
    com.google.protobuf.ByteString
        getAppidornameBytes();

    /**
     * <code>optional int32 controller_type = 5 [default = 2];</code>
     */
    boolean hasControllerType();
    /**
     * <code>optional int32 controller_type = 5 [default = 2];</code>
     */
    int getControllerType();

    /**
     * <code>optional bool only_for_this_serial = 6 [default = false];</code>
     */
    boolean hasOnlyForThisSerial();
    /**
     * <code>optional bool only_for_this_serial = 6 [default = false];</code>
     */
    boolean getOnlyForThisSerial();
  }
  /**
   * Protobuf type {@code CAccountHardware_SteamControllerGetConfig_Request}
   */
  public  static final class CAccountHardware_SteamControllerGetConfig_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_SteamControllerGetConfig_Request)
      CAccountHardware_SteamControllerGetConfig_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_SteamControllerGetConfig_Request.newBuilder() to construct.
    private CAccountHardware_SteamControllerGetConfig_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_SteamControllerGetConfig_Request() {
      serialNumber_ = "";
      controllerCode_ = "";
      accountid_ = 0;
      appidorname_ = "";
      controllerType_ = 2;
      onlyForThisSerial_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_SteamControllerGetConfig_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              serialNumber_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              controllerCode_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              accountid_ = input.readUInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              appidorname_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              controllerType_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              onlyForThisSerial_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request.Builder.class);
    }

    private int bitField0_;
    public static final int SERIAL_NUMBER_FIELD_NUMBER = 1;
    private volatile java.lang.Object serialNumber_;
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public boolean hasSerialNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public java.lang.String getSerialNumber() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serialNumber_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSerialNumberBytes() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serialNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTROLLER_CODE_FIELD_NUMBER = 2;
    private volatile java.lang.Object controllerCode_;
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public boolean hasControllerCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public java.lang.String getControllerCode() {
      java.lang.Object ref = controllerCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          controllerCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public com.google.protobuf.ByteString
        getControllerCodeBytes() {
      java.lang.Object ref = controllerCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        controllerCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACCOUNTID_FIELD_NUMBER = 3;
    private int accountid_;
    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    public boolean hasAccountid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    public int getAccountid() {
      return accountid_;
    }

    public static final int APPIDORNAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object appidorname_;
    /**
     * <code>optional string appidorname = 4;</code>
     */
    public boolean hasAppidorname() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string appidorname = 4;</code>
     */
    public java.lang.String getAppidorname() {
      java.lang.Object ref = appidorname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          appidorname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string appidorname = 4;</code>
     */
    public com.google.protobuf.ByteString
        getAppidornameBytes() {
      java.lang.Object ref = appidorname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appidorname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTROLLER_TYPE_FIELD_NUMBER = 5;
    private int controllerType_;
    /**
     * <code>optional int32 controller_type = 5 [default = 2];</code>
     */
    public boolean hasControllerType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 controller_type = 5 [default = 2];</code>
     */
    public int getControllerType() {
      return controllerType_;
    }

    public static final int ONLY_FOR_THIS_SERIAL_FIELD_NUMBER = 6;
    private boolean onlyForThisSerial_;
    /**
     * <code>optional bool only_for_this_serial = 6 [default = false];</code>
     */
    public boolean hasOnlyForThisSerial() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool only_for_this_serial = 6 [default = false];</code>
     */
    public boolean getOnlyForThisSerial() {
      return onlyForThisSerial_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, controllerCode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, accountid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, appidorname_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, controllerType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, onlyForThisSerial_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, controllerCode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, accountid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, appidorname_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, controllerType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, onlyForThisSerial_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request) obj;

      boolean result = true;
      result = result && (hasSerialNumber() == other.hasSerialNumber());
      if (hasSerialNumber()) {
        result = result && getSerialNumber()
            .equals(other.getSerialNumber());
      }
      result = result && (hasControllerCode() == other.hasControllerCode());
      if (hasControllerCode()) {
        result = result && getControllerCode()
            .equals(other.getControllerCode());
      }
      result = result && (hasAccountid() == other.hasAccountid());
      if (hasAccountid()) {
        result = result && (getAccountid()
            == other.getAccountid());
      }
      result = result && (hasAppidorname() == other.hasAppidorname());
      if (hasAppidorname()) {
        result = result && getAppidorname()
            .equals(other.getAppidorname());
      }
      result = result && (hasControllerType() == other.hasControllerType());
      if (hasControllerType()) {
        result = result && (getControllerType()
            == other.getControllerType());
      }
      result = result && (hasOnlyForThisSerial() == other.hasOnlyForThisSerial());
      if (hasOnlyForThisSerial()) {
        result = result && (getOnlyForThisSerial()
            == other.getOnlyForThisSerial());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSerialNumber()) {
        hash = (37 * hash) + SERIAL_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSerialNumber().hashCode();
      }
      if (hasControllerCode()) {
        hash = (37 * hash) + CONTROLLER_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getControllerCode().hashCode();
      }
      if (hasAccountid()) {
        hash = (37 * hash) + ACCOUNTID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountid();
      }
      if (hasAppidorname()) {
        hash = (37 * hash) + APPIDORNAME_FIELD_NUMBER;
        hash = (53 * hash) + getAppidorname().hashCode();
      }
      if (hasControllerType()) {
        hash = (37 * hash) + CONTROLLER_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getControllerType();
      }
      if (hasOnlyForThisSerial()) {
        hash = (37 * hash) + ONLY_FOR_THIS_SERIAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getOnlyForThisSerial());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_SteamControllerGetConfig_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_SteamControllerGetConfig_Request)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        serialNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        controllerCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        accountid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        appidorname_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        controllerType_ = 2;
        bitField0_ = (bitField0_ & ~0x00000010);
        onlyForThisSerial_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_Request_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serialNumber_ = serialNumber_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.controllerCode_ = controllerCode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.accountid_ = accountid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.appidorname_ = appidorname_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.controllerType_ = controllerType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.onlyForThisSerial_ = onlyForThisSerial_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request.getDefaultInstance()) return this;
        if (other.hasSerialNumber()) {
          bitField0_ |= 0x00000001;
          serialNumber_ = other.serialNumber_;
          onChanged();
        }
        if (other.hasControllerCode()) {
          bitField0_ |= 0x00000002;
          controllerCode_ = other.controllerCode_;
          onChanged();
        }
        if (other.hasAccountid()) {
          setAccountid(other.getAccountid());
        }
        if (other.hasAppidorname()) {
          bitField0_ |= 0x00000008;
          appidorname_ = other.appidorname_;
          onChanged();
        }
        if (other.hasControllerType()) {
          setControllerType(other.getControllerType());
        }
        if (other.hasOnlyForThisSerial()) {
          setOnlyForThisSerial(other.getOnlyForThisSerial());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object serialNumber_ = "";
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public boolean hasSerialNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public java.lang.String getSerialNumber() {
        java.lang.Object ref = serialNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serialNumber_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSerialNumberBytes() {
        java.lang.Object ref = serialNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serialNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serialNumber_ = getDefaultInstance().getSerialNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object controllerCode_ = "";
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public boolean hasControllerCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public java.lang.String getControllerCode() {
        java.lang.Object ref = controllerCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            controllerCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public com.google.protobuf.ByteString
          getControllerCodeBytes() {
        java.lang.Object ref = controllerCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          controllerCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder setControllerCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        controllerCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder clearControllerCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        controllerCode_ = getDefaultInstance().getControllerCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder setControllerCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        controllerCode_ = value;
        onChanged();
        return this;
      }

      private int accountid_ ;
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public boolean hasAccountid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public int getAccountid() {
        return accountid_;
      }
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public Builder setAccountid(int value) {
        bitField0_ |= 0x00000004;
        accountid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public Builder clearAccountid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accountid_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object appidorname_ = "";
      /**
       * <code>optional string appidorname = 4;</code>
       */
      public boolean hasAppidorname() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string appidorname = 4;</code>
       */
      public java.lang.String getAppidorname() {
        java.lang.Object ref = appidorname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            appidorname_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string appidorname = 4;</code>
       */
      public com.google.protobuf.ByteString
          getAppidornameBytes() {
        java.lang.Object ref = appidorname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          appidorname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string appidorname = 4;</code>
       */
      public Builder setAppidorname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        appidorname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string appidorname = 4;</code>
       */
      public Builder clearAppidorname() {
        bitField0_ = (bitField0_ & ~0x00000008);
        appidorname_ = getDefaultInstance().getAppidorname();
        onChanged();
        return this;
      }
      /**
       * <code>optional string appidorname = 4;</code>
       */
      public Builder setAppidornameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        appidorname_ = value;
        onChanged();
        return this;
      }

      private int controllerType_ = 2;
      /**
       * <code>optional int32 controller_type = 5 [default = 2];</code>
       */
      public boolean hasControllerType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 controller_type = 5 [default = 2];</code>
       */
      public int getControllerType() {
        return controllerType_;
      }
      /**
       * <code>optional int32 controller_type = 5 [default = 2];</code>
       */
      public Builder setControllerType(int value) {
        bitField0_ |= 0x00000010;
        controllerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 controller_type = 5 [default = 2];</code>
       */
      public Builder clearControllerType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        controllerType_ = 2;
        onChanged();
        return this;
      }

      private boolean onlyForThisSerial_ ;
      /**
       * <code>optional bool only_for_this_serial = 6 [default = false];</code>
       */
      public boolean hasOnlyForThisSerial() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool only_for_this_serial = 6 [default = false];</code>
       */
      public boolean getOnlyForThisSerial() {
        return onlyForThisSerial_;
      }
      /**
       * <code>optional bool only_for_this_serial = 6 [default = false];</code>
       */
      public Builder setOnlyForThisSerial(boolean value) {
        bitField0_ |= 0x00000020;
        onlyForThisSerial_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool only_for_this_serial = 6 [default = false];</code>
       */
      public Builder clearOnlyForThisSerial() {
        bitField0_ = (bitField0_ & ~0x00000020);
        onlyForThisSerial_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_SteamControllerGetConfig_Request)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_SteamControllerGetConfig_Request)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_SteamControllerGetConfig_Request>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_SteamControllerGetConfig_Request>() {
      public CAccountHardware_SteamControllerGetConfig_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_SteamControllerGetConfig_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_SteamControllerGetConfig_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_SteamControllerGetConfig_Request> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_SteamControllerGetConfig_ControllerConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_SteamControllerGetConfig_ControllerConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string appidorname = 1;</code>
     */
    boolean hasAppidorname();
    /**
     * <code>optional string appidorname = 1;</code>
     */
    java.lang.String getAppidorname();
    /**
     * <code>optional string appidorname = 1;</code>
     */
    com.google.protobuf.ByteString
        getAppidornameBytes();

    /**
     * <code>optional uint64 publishedfileid = 2;</code>
     */
    boolean hasPublishedfileid();
    /**
     * <code>optional uint64 publishedfileid = 2;</code>
     */
    long getPublishedfileid();

    /**
     * <code>optional string templatename = 3;</code>
     */
    boolean hasTemplatename();
    /**
     * <code>optional string templatename = 3;</code>
     */
    java.lang.String getTemplatename();
    /**
     * <code>optional string templatename = 3;</code>
     */
    com.google.protobuf.ByteString
        getTemplatenameBytes();

    /**
     * <code>optional string serial_number = 4;</code>
     */
    boolean hasSerialNumber();
    /**
     * <code>optional string serial_number = 4;</code>
     */
    java.lang.String getSerialNumber();
    /**
     * <code>optional string serial_number = 4;</code>
     */
    com.google.protobuf.ByteString
        getSerialNumberBytes();
  }
  /**
   * Protobuf type {@code CAccountHardware_SteamControllerGetConfig_ControllerConfig}
   */
  public  static final class CAccountHardware_SteamControllerGetConfig_ControllerConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_SteamControllerGetConfig_ControllerConfig)
      CAccountHardware_SteamControllerGetConfig_ControllerConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_SteamControllerGetConfig_ControllerConfig.newBuilder() to construct.
    private CAccountHardware_SteamControllerGetConfig_ControllerConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_SteamControllerGetConfig_ControllerConfig() {
      appidorname_ = "";
      publishedfileid_ = 0L;
      templatename_ = "";
      serialNumber_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_SteamControllerGetConfig_ControllerConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              appidorname_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              publishedfileid_ = input.readUInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              templatename_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              serialNumber_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_ControllerConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_ControllerConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.Builder.class);
    }

    private int bitField0_;
    public static final int APPIDORNAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object appidorname_;
    /**
     * <code>optional string appidorname = 1;</code>
     */
    public boolean hasAppidorname() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string appidorname = 1;</code>
     */
    public java.lang.String getAppidorname() {
      java.lang.Object ref = appidorname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          appidorname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string appidorname = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAppidornameBytes() {
      java.lang.Object ref = appidorname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appidorname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PUBLISHEDFILEID_FIELD_NUMBER = 2;
    private long publishedfileid_;
    /**
     * <code>optional uint64 publishedfileid = 2;</code>
     */
    public boolean hasPublishedfileid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 publishedfileid = 2;</code>
     */
    public long getPublishedfileid() {
      return publishedfileid_;
    }

    public static final int TEMPLATENAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object templatename_;
    /**
     * <code>optional string templatename = 3;</code>
     */
    public boolean hasTemplatename() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string templatename = 3;</code>
     */
    public java.lang.String getTemplatename() {
      java.lang.Object ref = templatename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          templatename_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string templatename = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTemplatenameBytes() {
      java.lang.Object ref = templatename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        templatename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERIAL_NUMBER_FIELD_NUMBER = 4;
    private volatile java.lang.Object serialNumber_;
    /**
     * <code>optional string serial_number = 4;</code>
     */
    public boolean hasSerialNumber() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string serial_number = 4;</code>
     */
    public java.lang.String getSerialNumber() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serialNumber_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string serial_number = 4;</code>
     */
    public com.google.protobuf.ByteString
        getSerialNumberBytes() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serialNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, appidorname_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, publishedfileid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, templatename_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, serialNumber_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, appidorname_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, publishedfileid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, templatename_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, serialNumber_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig) obj;

      boolean result = true;
      result = result && (hasAppidorname() == other.hasAppidorname());
      if (hasAppidorname()) {
        result = result && getAppidorname()
            .equals(other.getAppidorname());
      }
      result = result && (hasPublishedfileid() == other.hasPublishedfileid());
      if (hasPublishedfileid()) {
        result = result && (getPublishedfileid()
            == other.getPublishedfileid());
      }
      result = result && (hasTemplatename() == other.hasTemplatename());
      if (hasTemplatename()) {
        result = result && getTemplatename()
            .equals(other.getTemplatename());
      }
      result = result && (hasSerialNumber() == other.hasSerialNumber());
      if (hasSerialNumber()) {
        result = result && getSerialNumber()
            .equals(other.getSerialNumber());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAppidorname()) {
        hash = (37 * hash) + APPIDORNAME_FIELD_NUMBER;
        hash = (53 * hash) + getAppidorname().hashCode();
      }
      if (hasPublishedfileid()) {
        hash = (37 * hash) + PUBLISHEDFILEID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPublishedfileid());
      }
      if (hasTemplatename()) {
        hash = (37 * hash) + TEMPLATENAME_FIELD_NUMBER;
        hash = (53 * hash) + getTemplatename().hashCode();
      }
      if (hasSerialNumber()) {
        hash = (37 * hash) + SERIAL_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSerialNumber().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_SteamControllerGetConfig_ControllerConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_SteamControllerGetConfig_ControllerConfig)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_ControllerConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_ControllerConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        appidorname_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        publishedfileid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        templatename_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        serialNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_ControllerConfig_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.appidorname_ = appidorname_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.publishedfileid_ = publishedfileid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.templatename_ = templatename_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.serialNumber_ = serialNumber_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.getDefaultInstance()) return this;
        if (other.hasAppidorname()) {
          bitField0_ |= 0x00000001;
          appidorname_ = other.appidorname_;
          onChanged();
        }
        if (other.hasPublishedfileid()) {
          setPublishedfileid(other.getPublishedfileid());
        }
        if (other.hasTemplatename()) {
          bitField0_ |= 0x00000004;
          templatename_ = other.templatename_;
          onChanged();
        }
        if (other.hasSerialNumber()) {
          bitField0_ |= 0x00000008;
          serialNumber_ = other.serialNumber_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object appidorname_ = "";
      /**
       * <code>optional string appidorname = 1;</code>
       */
      public boolean hasAppidorname() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string appidorname = 1;</code>
       */
      public java.lang.String getAppidorname() {
        java.lang.Object ref = appidorname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            appidorname_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string appidorname = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAppidornameBytes() {
        java.lang.Object ref = appidorname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          appidorname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string appidorname = 1;</code>
       */
      public Builder setAppidorname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        appidorname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string appidorname = 1;</code>
       */
      public Builder clearAppidorname() {
        bitField0_ = (bitField0_ & ~0x00000001);
        appidorname_ = getDefaultInstance().getAppidorname();
        onChanged();
        return this;
      }
      /**
       * <code>optional string appidorname = 1;</code>
       */
      public Builder setAppidornameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        appidorname_ = value;
        onChanged();
        return this;
      }

      private long publishedfileid_ ;
      /**
       * <code>optional uint64 publishedfileid = 2;</code>
       */
      public boolean hasPublishedfileid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 publishedfileid = 2;</code>
       */
      public long getPublishedfileid() {
        return publishedfileid_;
      }
      /**
       * <code>optional uint64 publishedfileid = 2;</code>
       */
      public Builder setPublishedfileid(long value) {
        bitField0_ |= 0x00000002;
        publishedfileid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 publishedfileid = 2;</code>
       */
      public Builder clearPublishedfileid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        publishedfileid_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object templatename_ = "";
      /**
       * <code>optional string templatename = 3;</code>
       */
      public boolean hasTemplatename() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string templatename = 3;</code>
       */
      public java.lang.String getTemplatename() {
        java.lang.Object ref = templatename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            templatename_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string templatename = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTemplatenameBytes() {
        java.lang.Object ref = templatename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          templatename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string templatename = 3;</code>
       */
      public Builder setTemplatename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        templatename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string templatename = 3;</code>
       */
      public Builder clearTemplatename() {
        bitField0_ = (bitField0_ & ~0x00000004);
        templatename_ = getDefaultInstance().getTemplatename();
        onChanged();
        return this;
      }
      /**
       * <code>optional string templatename = 3;</code>
       */
      public Builder setTemplatenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        templatename_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object serialNumber_ = "";
      /**
       * <code>optional string serial_number = 4;</code>
       */
      public boolean hasSerialNumber() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string serial_number = 4;</code>
       */
      public java.lang.String getSerialNumber() {
        java.lang.Object ref = serialNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serialNumber_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string serial_number = 4;</code>
       */
      public com.google.protobuf.ByteString
          getSerialNumberBytes() {
        java.lang.Object ref = serialNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serialNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string serial_number = 4;</code>
       */
      public Builder setSerialNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 4;</code>
       */
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x00000008);
        serialNumber_ = getDefaultInstance().getSerialNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 4;</code>
       */
      public Builder setSerialNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_SteamControllerGetConfig_ControllerConfig)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_SteamControllerGetConfig_ControllerConfig)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_SteamControllerGetConfig_ControllerConfig>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_SteamControllerGetConfig_ControllerConfig>() {
      public CAccountHardware_SteamControllerGetConfig_ControllerConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_SteamControllerGetConfig_ControllerConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_SteamControllerGetConfig_ControllerConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_SteamControllerGetConfig_ControllerConfig> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_SteamControllerGetConfig_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_SteamControllerGetConfig_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
     */
    java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig> 
        getConfigurationsList();
    /**
     * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
     */
    SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig getConfigurations(int index);
    /**
     * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
     */
    int getConfigurationsCount();
    /**
     * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
     */
    java.util.List<? extends SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfigOrBuilder> 
        getConfigurationsOrBuilderList();
    /**
     * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
     */
    SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfigOrBuilder getConfigurationsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CAccountHardware_SteamControllerGetConfig_Response}
   */
  public  static final class CAccountHardware_SteamControllerGetConfig_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_SteamControllerGetConfig_Response)
      CAccountHardware_SteamControllerGetConfig_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_SteamControllerGetConfig_Response.newBuilder() to construct.
    private CAccountHardware_SteamControllerGetConfig_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_SteamControllerGetConfig_Response() {
      configurations_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_SteamControllerGetConfig_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                configurations_ = new java.util.ArrayList<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig>();
                mutable_bitField0_ |= 0x00000001;
              }
              configurations_.add(
                  input.readMessage(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          configurations_ = java.util.Collections.unmodifiableList(configurations_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response.Builder.class);
    }

    public static final int CONFIGURATIONS_FIELD_NUMBER = 1;
    private java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig> configurations_;
    /**
     * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
     */
    public java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig> getConfigurationsList() {
      return configurations_;
    }
    /**
     * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
     */
    public java.util.List<? extends SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfigOrBuilder> 
        getConfigurationsOrBuilderList() {
      return configurations_;
    }
    /**
     * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
     */
    public int getConfigurationsCount() {
      return configurations_.size();
    }
    /**
     * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
     */
    public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig getConfigurations(int index) {
      return configurations_.get(index);
    }
    /**
     * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
     */
    public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfigOrBuilder getConfigurationsOrBuilder(
        int index) {
      return configurations_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < configurations_.size(); i++) {
        output.writeMessage(1, configurations_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < configurations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, configurations_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response) obj;

      boolean result = true;
      result = result && getConfigurationsList()
          .equals(other.getConfigurationsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getConfigurationsCount() > 0) {
        hash = (37 * hash) + CONFIGURATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getConfigurationsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_SteamControllerGetConfig_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_SteamControllerGetConfig_Response)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getConfigurationsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (configurationsBuilder_ == null) {
          configurations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          configurationsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SteamControllerGetConfig_Response_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response(this);
        int from_bitField0_ = bitField0_;
        if (configurationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            configurations_ = java.util.Collections.unmodifiableList(configurations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.configurations_ = configurations_;
        } else {
          result.configurations_ = configurationsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response.getDefaultInstance()) return this;
        if (configurationsBuilder_ == null) {
          if (!other.configurations_.isEmpty()) {
            if (configurations_.isEmpty()) {
              configurations_ = other.configurations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureConfigurationsIsMutable();
              configurations_.addAll(other.configurations_);
            }
            onChanged();
          }
        } else {
          if (!other.configurations_.isEmpty()) {
            if (configurationsBuilder_.isEmpty()) {
              configurationsBuilder_.dispose();
              configurationsBuilder_ = null;
              configurations_ = other.configurations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              configurationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getConfigurationsFieldBuilder() : null;
            } else {
              configurationsBuilder_.addAllMessages(other.configurations_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig> configurations_ =
        java.util.Collections.emptyList();
      private void ensureConfigurationsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          configurations_ = new java.util.ArrayList<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig>(configurations_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.Builder, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfigOrBuilder> configurationsBuilder_;

      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig> getConfigurationsList() {
        if (configurationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(configurations_);
        } else {
          return configurationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public int getConfigurationsCount() {
        if (configurationsBuilder_ == null) {
          return configurations_.size();
        } else {
          return configurationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig getConfigurations(int index) {
        if (configurationsBuilder_ == null) {
          return configurations_.get(index);
        } else {
          return configurationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public Builder setConfigurations(
          int index, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig value) {
        if (configurationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigurationsIsMutable();
          configurations_.set(index, value);
          onChanged();
        } else {
          configurationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public Builder setConfigurations(
          int index, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.Builder builderForValue) {
        if (configurationsBuilder_ == null) {
          ensureConfigurationsIsMutable();
          configurations_.set(index, builderForValue.build());
          onChanged();
        } else {
          configurationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public Builder addConfigurations(SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig value) {
        if (configurationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigurationsIsMutable();
          configurations_.add(value);
          onChanged();
        } else {
          configurationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public Builder addConfigurations(
          int index, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig value) {
        if (configurationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigurationsIsMutable();
          configurations_.add(index, value);
          onChanged();
        } else {
          configurationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public Builder addConfigurations(
          SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.Builder builderForValue) {
        if (configurationsBuilder_ == null) {
          ensureConfigurationsIsMutable();
          configurations_.add(builderForValue.build());
          onChanged();
        } else {
          configurationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public Builder addConfigurations(
          int index, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.Builder builderForValue) {
        if (configurationsBuilder_ == null) {
          ensureConfigurationsIsMutable();
          configurations_.add(index, builderForValue.build());
          onChanged();
        } else {
          configurationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public Builder addAllConfigurations(
          java.lang.Iterable<? extends SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig> values) {
        if (configurationsBuilder_ == null) {
          ensureConfigurationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, configurations_);
          onChanged();
        } else {
          configurationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public Builder clearConfigurations() {
        if (configurationsBuilder_ == null) {
          configurations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          configurationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public Builder removeConfigurations(int index) {
        if (configurationsBuilder_ == null) {
          ensureConfigurationsIsMutable();
          configurations_.remove(index);
          onChanged();
        } else {
          configurationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.Builder getConfigurationsBuilder(
          int index) {
        return getConfigurationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfigOrBuilder getConfigurationsOrBuilder(
          int index) {
        if (configurationsBuilder_ == null) {
          return configurations_.get(index);  } else {
          return configurationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public java.util.List<? extends SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfigOrBuilder> 
           getConfigurationsOrBuilderList() {
        if (configurationsBuilder_ != null) {
          return configurationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(configurations_);
        }
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.Builder addConfigurationsBuilder() {
        return getConfigurationsFieldBuilder().addBuilder(
            SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.getDefaultInstance());
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.Builder addConfigurationsBuilder(
          int index) {
        return getConfigurationsFieldBuilder().addBuilder(
            index, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.getDefaultInstance());
      }
      /**
       * <code>repeated .CAccountHardware_SteamControllerGetConfig_ControllerConfig configurations = 1;</code>
       */
      public java.util.List<SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.Builder> 
           getConfigurationsBuilderList() {
        return getConfigurationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.Builder, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfigOrBuilder> 
          getConfigurationsFieldBuilder() {
        if (configurationsBuilder_ == null) {
          configurationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfig.Builder, SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_ControllerConfigOrBuilder>(
                  configurations_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          configurations_ = null;
        }
        return configurationsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_SteamControllerGetConfig_Response)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_SteamControllerGetConfig_Response)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_SteamControllerGetConfig_Response>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_SteamControllerGetConfig_Response>() {
      public CAccountHardware_SteamControllerGetConfig_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_SteamControllerGetConfig_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_SteamControllerGetConfig_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_SteamControllerGetConfig_Response> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_SteamControllerGetConfig_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_DeRegisterSteamController_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_DeRegisterSteamController_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string serial_number = 1;</code>
     */
    boolean hasSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    java.lang.String getSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    com.google.protobuf.ByteString
        getSerialNumberBytes();

    /**
     * <code>optional string controller_code = 2;</code>
     */
    boolean hasControllerCode();
    /**
     * <code>optional string controller_code = 2;</code>
     */
    java.lang.String getControllerCode();
    /**
     * <code>optional string controller_code = 2;</code>
     */
    com.google.protobuf.ByteString
        getControllerCodeBytes();

    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    boolean hasAccountid();
    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    int getAccountid();
  }
  /**
   * Protobuf type {@code CAccountHardware_DeRegisterSteamController_Request}
   */
  public  static final class CAccountHardware_DeRegisterSteamController_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_DeRegisterSteamController_Request)
      CAccountHardware_DeRegisterSteamController_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_DeRegisterSteamController_Request.newBuilder() to construct.
    private CAccountHardware_DeRegisterSteamController_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_DeRegisterSteamController_Request() {
      serialNumber_ = "";
      controllerCode_ = "";
      accountid_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_DeRegisterSteamController_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              serialNumber_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              controllerCode_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              accountid_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_DeRegisterSteamController_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_DeRegisterSteamController_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request.Builder.class);
    }

    private int bitField0_;
    public static final int SERIAL_NUMBER_FIELD_NUMBER = 1;
    private volatile java.lang.Object serialNumber_;
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public boolean hasSerialNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public java.lang.String getSerialNumber() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serialNumber_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSerialNumberBytes() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serialNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTROLLER_CODE_FIELD_NUMBER = 2;
    private volatile java.lang.Object controllerCode_;
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public boolean hasControllerCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public java.lang.String getControllerCode() {
      java.lang.Object ref = controllerCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          controllerCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string controller_code = 2;</code>
     */
    public com.google.protobuf.ByteString
        getControllerCodeBytes() {
      java.lang.Object ref = controllerCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        controllerCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACCOUNTID_FIELD_NUMBER = 3;
    private int accountid_;
    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    public boolean hasAccountid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    public int getAccountid() {
      return accountid_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, controllerCode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, accountid_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, controllerCode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, accountid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request) obj;

      boolean result = true;
      result = result && (hasSerialNumber() == other.hasSerialNumber());
      if (hasSerialNumber()) {
        result = result && getSerialNumber()
            .equals(other.getSerialNumber());
      }
      result = result && (hasControllerCode() == other.hasControllerCode());
      if (hasControllerCode()) {
        result = result && getControllerCode()
            .equals(other.getControllerCode());
      }
      result = result && (hasAccountid() == other.hasAccountid());
      if (hasAccountid()) {
        result = result && (getAccountid()
            == other.getAccountid());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSerialNumber()) {
        hash = (37 * hash) + SERIAL_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSerialNumber().hashCode();
      }
      if (hasControllerCode()) {
        hash = (37 * hash) + CONTROLLER_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getControllerCode().hashCode();
      }
      if (hasAccountid()) {
        hash = (37 * hash) + ACCOUNTID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountid();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_DeRegisterSteamController_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_DeRegisterSteamController_Request)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_DeRegisterSteamController_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_DeRegisterSteamController_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        serialNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        controllerCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        accountid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_DeRegisterSteamController_Request_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serialNumber_ = serialNumber_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.controllerCode_ = controllerCode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.accountid_ = accountid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request.getDefaultInstance()) return this;
        if (other.hasSerialNumber()) {
          bitField0_ |= 0x00000001;
          serialNumber_ = other.serialNumber_;
          onChanged();
        }
        if (other.hasControllerCode()) {
          bitField0_ |= 0x00000002;
          controllerCode_ = other.controllerCode_;
          onChanged();
        }
        if (other.hasAccountid()) {
          setAccountid(other.getAccountid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object serialNumber_ = "";
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public boolean hasSerialNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public java.lang.String getSerialNumber() {
        java.lang.Object ref = serialNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serialNumber_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSerialNumberBytes() {
        java.lang.Object ref = serialNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serialNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serialNumber_ = getDefaultInstance().getSerialNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object controllerCode_ = "";
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public boolean hasControllerCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public java.lang.String getControllerCode() {
        java.lang.Object ref = controllerCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            controllerCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public com.google.protobuf.ByteString
          getControllerCodeBytes() {
        java.lang.Object ref = controllerCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          controllerCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder setControllerCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        controllerCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder clearControllerCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        controllerCode_ = getDefaultInstance().getControllerCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string controller_code = 2;</code>
       */
      public Builder setControllerCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        controllerCode_ = value;
        onChanged();
        return this;
      }

      private int accountid_ ;
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public boolean hasAccountid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public int getAccountid() {
        return accountid_;
      }
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public Builder setAccountid(int value) {
        bitField0_ |= 0x00000004;
        accountid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public Builder clearAccountid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accountid_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_DeRegisterSteamController_Request)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_DeRegisterSteamController_Request)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_DeRegisterSteamController_Request>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_DeRegisterSteamController_Request>() {
      public CAccountHardware_DeRegisterSteamController_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_DeRegisterSteamController_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_DeRegisterSteamController_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_DeRegisterSteamController_Request> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_DeRegisterSteamController_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_DeRegisterSteamController_Response)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CAccountHardware_DeRegisterSteamController_Response}
   */
  public  static final class CAccountHardware_DeRegisterSteamController_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_DeRegisterSteamController_Response)
      CAccountHardware_DeRegisterSteamController_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_DeRegisterSteamController_Response.newBuilder() to construct.
    private CAccountHardware_DeRegisterSteamController_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_DeRegisterSteamController_Response() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_DeRegisterSteamController_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_DeRegisterSteamController_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_DeRegisterSteamController_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_DeRegisterSteamController_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_DeRegisterSteamController_Response)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_DeRegisterSteamController_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_DeRegisterSteamController_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_DeRegisterSteamController_Response_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_DeRegisterSteamController_Response)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_DeRegisterSteamController_Response)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_DeRegisterSteamController_Response>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_DeRegisterSteamController_Response>() {
      public CAccountHardware_DeRegisterSteamController_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_DeRegisterSteamController_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_DeRegisterSteamController_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_DeRegisterSteamController_Response> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_DeRegisterSteamController_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_SetPersonalizationFile_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_SetPersonalizationFile_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string serial_number = 1;</code>
     */
    boolean hasSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    java.lang.String getSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    com.google.protobuf.ByteString
        getSerialNumberBytes();

    /**
     * <code>optional uint64 publishedfileid = 2;</code>
     */
    boolean hasPublishedfileid();
    /**
     * <code>optional uint64 publishedfileid = 2;</code>
     */
    long getPublishedfileid();

    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    boolean hasAccountid();
    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    int getAccountid();
  }
  /**
   * Protobuf type {@code CAccountHardware_SetPersonalizationFile_Request}
   */
  public  static final class CAccountHardware_SetPersonalizationFile_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_SetPersonalizationFile_Request)
      CAccountHardware_SetPersonalizationFile_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_SetPersonalizationFile_Request.newBuilder() to construct.
    private CAccountHardware_SetPersonalizationFile_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_SetPersonalizationFile_Request() {
      serialNumber_ = "";
      publishedfileid_ = 0L;
      accountid_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_SetPersonalizationFile_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              serialNumber_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              publishedfileid_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              accountid_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SetPersonalizationFile_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SetPersonalizationFile_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request.Builder.class);
    }

    private int bitField0_;
    public static final int SERIAL_NUMBER_FIELD_NUMBER = 1;
    private volatile java.lang.Object serialNumber_;
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public boolean hasSerialNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public java.lang.String getSerialNumber() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serialNumber_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSerialNumberBytes() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serialNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PUBLISHEDFILEID_FIELD_NUMBER = 2;
    private long publishedfileid_;
    /**
     * <code>optional uint64 publishedfileid = 2;</code>
     */
    public boolean hasPublishedfileid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 publishedfileid = 2;</code>
     */
    public long getPublishedfileid() {
      return publishedfileid_;
    }

    public static final int ACCOUNTID_FIELD_NUMBER = 3;
    private int accountid_;
    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    public boolean hasAccountid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 accountid = 3;</code>
     */
    public int getAccountid() {
      return accountid_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, publishedfileid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, accountid_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, publishedfileid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, accountid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request) obj;

      boolean result = true;
      result = result && (hasSerialNumber() == other.hasSerialNumber());
      if (hasSerialNumber()) {
        result = result && getSerialNumber()
            .equals(other.getSerialNumber());
      }
      result = result && (hasPublishedfileid() == other.hasPublishedfileid());
      if (hasPublishedfileid()) {
        result = result && (getPublishedfileid()
            == other.getPublishedfileid());
      }
      result = result && (hasAccountid() == other.hasAccountid());
      if (hasAccountid()) {
        result = result && (getAccountid()
            == other.getAccountid());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSerialNumber()) {
        hash = (37 * hash) + SERIAL_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSerialNumber().hashCode();
      }
      if (hasPublishedfileid()) {
        hash = (37 * hash) + PUBLISHEDFILEID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPublishedfileid());
      }
      if (hasAccountid()) {
        hash = (37 * hash) + ACCOUNTID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountid();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_SetPersonalizationFile_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_SetPersonalizationFile_Request)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SetPersonalizationFile_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SetPersonalizationFile_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        serialNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        publishedfileid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        accountid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SetPersonalizationFile_Request_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serialNumber_ = serialNumber_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.publishedfileid_ = publishedfileid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.accountid_ = accountid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request.getDefaultInstance()) return this;
        if (other.hasSerialNumber()) {
          bitField0_ |= 0x00000001;
          serialNumber_ = other.serialNumber_;
          onChanged();
        }
        if (other.hasPublishedfileid()) {
          setPublishedfileid(other.getPublishedfileid());
        }
        if (other.hasAccountid()) {
          setAccountid(other.getAccountid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object serialNumber_ = "";
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public boolean hasSerialNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public java.lang.String getSerialNumber() {
        java.lang.Object ref = serialNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serialNumber_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSerialNumberBytes() {
        java.lang.Object ref = serialNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serialNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serialNumber_ = getDefaultInstance().getSerialNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }

      private long publishedfileid_ ;
      /**
       * <code>optional uint64 publishedfileid = 2;</code>
       */
      public boolean hasPublishedfileid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 publishedfileid = 2;</code>
       */
      public long getPublishedfileid() {
        return publishedfileid_;
      }
      /**
       * <code>optional uint64 publishedfileid = 2;</code>
       */
      public Builder setPublishedfileid(long value) {
        bitField0_ |= 0x00000002;
        publishedfileid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 publishedfileid = 2;</code>
       */
      public Builder clearPublishedfileid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        publishedfileid_ = 0L;
        onChanged();
        return this;
      }

      private int accountid_ ;
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public boolean hasAccountid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public int getAccountid() {
        return accountid_;
      }
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public Builder setAccountid(int value) {
        bitField0_ |= 0x00000004;
        accountid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 accountid = 3;</code>
       */
      public Builder clearAccountid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accountid_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_SetPersonalizationFile_Request)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_SetPersonalizationFile_Request)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_SetPersonalizationFile_Request>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_SetPersonalizationFile_Request>() {
      public CAccountHardware_SetPersonalizationFile_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_SetPersonalizationFile_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_SetPersonalizationFile_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_SetPersonalizationFile_Request> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_SetPersonalizationFile_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_SetPersonalizationFile_Response)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CAccountHardware_SetPersonalizationFile_Response}
   */
  public  static final class CAccountHardware_SetPersonalizationFile_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_SetPersonalizationFile_Response)
      CAccountHardware_SetPersonalizationFile_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_SetPersonalizationFile_Response.newBuilder() to construct.
    private CAccountHardware_SetPersonalizationFile_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_SetPersonalizationFile_Response() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_SetPersonalizationFile_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SetPersonalizationFile_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SetPersonalizationFile_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_SetPersonalizationFile_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_SetPersonalizationFile_Response)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SetPersonalizationFile_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SetPersonalizationFile_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_SetPersonalizationFile_Response_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_SetPersonalizationFile_Response)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_SetPersonalizationFile_Response)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_SetPersonalizationFile_Response>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_SetPersonalizationFile_Response>() {
      public CAccountHardware_SetPersonalizationFile_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_SetPersonalizationFile_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_SetPersonalizationFile_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_SetPersonalizationFile_Response> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_SetPersonalizationFile_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_GetPersonalizationFile_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_GetPersonalizationFile_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string serial_number = 1;</code>
     */
    boolean hasSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    java.lang.String getSerialNumber();
    /**
     * <code>optional string serial_number = 1;</code>
     */
    com.google.protobuf.ByteString
        getSerialNumberBytes();

    /**
     * <code>optional uint32 accountid = 2;</code>
     */
    boolean hasAccountid();
    /**
     * <code>optional uint32 accountid = 2;</code>
     */
    int getAccountid();
  }
  /**
   * Protobuf type {@code CAccountHardware_GetPersonalizationFile_Request}
   */
  public  static final class CAccountHardware_GetPersonalizationFile_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_GetPersonalizationFile_Request)
      CAccountHardware_GetPersonalizationFile_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_GetPersonalizationFile_Request.newBuilder() to construct.
    private CAccountHardware_GetPersonalizationFile_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_GetPersonalizationFile_Request() {
      serialNumber_ = "";
      accountid_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_GetPersonalizationFile_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              serialNumber_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              accountid_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_GetPersonalizationFile_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_GetPersonalizationFile_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request.Builder.class);
    }

    private int bitField0_;
    public static final int SERIAL_NUMBER_FIELD_NUMBER = 1;
    private volatile java.lang.Object serialNumber_;
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public boolean hasSerialNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public java.lang.String getSerialNumber() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serialNumber_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string serial_number = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSerialNumberBytes() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serialNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACCOUNTID_FIELD_NUMBER = 2;
    private int accountid_;
    /**
     * <code>optional uint32 accountid = 2;</code>
     */
    public boolean hasAccountid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 accountid = 2;</code>
     */
    public int getAccountid() {
      return accountid_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, accountid_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, serialNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, accountid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request) obj;

      boolean result = true;
      result = result && (hasSerialNumber() == other.hasSerialNumber());
      if (hasSerialNumber()) {
        result = result && getSerialNumber()
            .equals(other.getSerialNumber());
      }
      result = result && (hasAccountid() == other.hasAccountid());
      if (hasAccountid()) {
        result = result && (getAccountid()
            == other.getAccountid());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSerialNumber()) {
        hash = (37 * hash) + SERIAL_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSerialNumber().hashCode();
      }
      if (hasAccountid()) {
        hash = (37 * hash) + ACCOUNTID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountid();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_GetPersonalizationFile_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_GetPersonalizationFile_Request)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_GetPersonalizationFile_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_GetPersonalizationFile_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        serialNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        accountid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_GetPersonalizationFile_Request_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serialNumber_ = serialNumber_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.accountid_ = accountid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request.getDefaultInstance()) return this;
        if (other.hasSerialNumber()) {
          bitField0_ |= 0x00000001;
          serialNumber_ = other.serialNumber_;
          onChanged();
        }
        if (other.hasAccountid()) {
          setAccountid(other.getAccountid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object serialNumber_ = "";
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public boolean hasSerialNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public java.lang.String getSerialNumber() {
        java.lang.Object ref = serialNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serialNumber_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSerialNumberBytes() {
        java.lang.Object ref = serialNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serialNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serialNumber_ = getDefaultInstance().getSerialNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial_number = 1;</code>
       */
      public Builder setSerialNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serialNumber_ = value;
        onChanged();
        return this;
      }

      private int accountid_ ;
      /**
       * <code>optional uint32 accountid = 2;</code>
       */
      public boolean hasAccountid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 accountid = 2;</code>
       */
      public int getAccountid() {
        return accountid_;
      }
      /**
       * <code>optional uint32 accountid = 2;</code>
       */
      public Builder setAccountid(int value) {
        bitField0_ |= 0x00000002;
        accountid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 accountid = 2;</code>
       */
      public Builder clearAccountid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accountid_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_GetPersonalizationFile_Request)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_GetPersonalizationFile_Request)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_GetPersonalizationFile_Request>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_GetPersonalizationFile_Request>() {
      public CAccountHardware_GetPersonalizationFile_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_GetPersonalizationFile_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_GetPersonalizationFile_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_GetPersonalizationFile_Request> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CAccountHardware_GetPersonalizationFile_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CAccountHardware_GetPersonalizationFile_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 publishedfileid = 1;</code>
     */
    boolean hasPublishedfileid();
    /**
     * <code>optional uint64 publishedfileid = 1;</code>
     */
    long getPublishedfileid();
  }
  /**
   * Protobuf type {@code CAccountHardware_GetPersonalizationFile_Response}
   */
  public  static final class CAccountHardware_GetPersonalizationFile_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CAccountHardware_GetPersonalizationFile_Response)
      CAccountHardware_GetPersonalizationFile_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CAccountHardware_GetPersonalizationFile_Response.newBuilder() to construct.
    private CAccountHardware_GetPersonalizationFile_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CAccountHardware_GetPersonalizationFile_Response() {
      publishedfileid_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CAccountHardware_GetPersonalizationFile_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              publishedfileid_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_GetPersonalizationFile_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_GetPersonalizationFile_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response.Builder.class);
    }

    private int bitField0_;
    public static final int PUBLISHEDFILEID_FIELD_NUMBER = 1;
    private long publishedfileid_;
    /**
     * <code>optional uint64 publishedfileid = 1;</code>
     */
    public boolean hasPublishedfileid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 publishedfileid = 1;</code>
     */
    public long getPublishedfileid() {
      return publishedfileid_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, publishedfileid_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, publishedfileid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response)) {
        return super.equals(obj);
      }
      SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response other = (SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response) obj;

      boolean result = true;
      result = result && (hasPublishedfileid() == other.hasPublishedfileid());
      if (hasPublishedfileid()) {
        result = result && (getPublishedfileid()
            == other.getPublishedfileid());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPublishedfileid()) {
        hash = (37 * hash) + PUBLISHEDFILEID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPublishedfileid());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAccountHardware_GetPersonalizationFile_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CAccountHardware_GetPersonalizationFile_Response)
        SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_GetPersonalizationFile_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_GetPersonalizationFile_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response.class, SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response.Builder.class);
      }

      // Construct using SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        publishedfileid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesAccounthardwareSteamclient.internal_static_CAccountHardware_GetPersonalizationFile_Response_descriptor;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response getDefaultInstanceForType() {
        return SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response.getDefaultInstance();
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response build() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response buildPartial() {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response result = new SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.publishedfileid_ = publishedfileid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response) {
          return mergeFrom((SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response other) {
        if (other == SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response.getDefaultInstance()) return this;
        if (other.hasPublishedfileid()) {
          setPublishedfileid(other.getPublishedfileid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long publishedfileid_ ;
      /**
       * <code>optional uint64 publishedfileid = 1;</code>
       */
      public boolean hasPublishedfileid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 publishedfileid = 1;</code>
       */
      public long getPublishedfileid() {
        return publishedfileid_;
      }
      /**
       * <code>optional uint64 publishedfileid = 1;</code>
       */
      public Builder setPublishedfileid(long value) {
        bitField0_ |= 0x00000001;
        publishedfileid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 publishedfileid = 1;</code>
       */
      public Builder clearPublishedfileid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        publishedfileid_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CAccountHardware_GetPersonalizationFile_Response)
    }

    // @@protoc_insertion_point(class_scope:CAccountHardware_GetPersonalizationFile_Response)
    private static final SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response();
    }

    public static SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CAccountHardware_GetPersonalizationFile_Response>
        PARSER = new com.google.protobuf.AbstractParser<CAccountHardware_GetPersonalizationFile_Response>() {
      public CAccountHardware_GetPersonalizationFile_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CAccountHardware_GetPersonalizationFile_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CAccountHardware_GetPersonalizationFile_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CAccountHardware_GetPersonalizationFile_Response> getParserForType() {
      return PARSER;
    }

    public SteammessagesAccounthardwareSteamclient.CAccountHardware_GetPersonalizationFile_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_RegisterSteamController_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_RegisterSteamController_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_RegisterSteamController_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_RegisterSteamController_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_CompleteSteamControllerRegistration_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_CompleteSteamControllerRegistration_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_CompleteSteamControllerRegistration_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_CompleteSteamControllerRegistration_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Accounts_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Accounts_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_SteamControllerSetConfig_ControllerConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_SteamControllerSetConfig_ControllerConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_SteamControllerSetConfig_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_SteamControllerSetConfig_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_SteamControllerSetConfig_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_SteamControllerSetConfig_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_SteamControllerGetConfig_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_SteamControllerGetConfig_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_SteamControllerGetConfig_ControllerConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_SteamControllerGetConfig_ControllerConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_SteamControllerGetConfig_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_SteamControllerGetConfig_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_DeRegisterSteamController_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_DeRegisterSteamController_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_DeRegisterSteamController_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_DeRegisterSteamController_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_SetPersonalizationFile_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_SetPersonalizationFile_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_SetPersonalizationFile_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_SetPersonalizationFile_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_GetPersonalizationFile_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_GetPersonalizationFile_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CAccountHardware_GetPersonalizationFile_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CAccountHardware_GetPersonalizationFile_Response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n/steammessages_accounthardware.steamcli" +
      "ent.proto\032,steammessages_unified_base.st" +
      "eamclient.proto\"b\n0CAccountHardware_Regi" +
      "sterSteamController_Request\022\025\n\rserial_nu" +
      "mber\030\001 \001(\t\022\027\n\017controller_code\030\002 \001(\t\"3\n1C" +
      "AccountHardware_RegisterSteamController_" +
      "Response\"n\n<CAccountHardware_CompleteSte" +
      "amControllerRegistration_Request\022\025\n\rseri" +
      "al_number\030\001 \001(\t\022\027\n\017controller_code\030\002 \001(\t" +
      "\"?\n=CAccountHardware_CompleteSteamContro",
      "llerRegistration_Response\"j\n8CAccountHar" +
      "dware_QueryAccountsRegisteredToSerial_Re" +
      "quest\022\025\n\rserial_number\030\001 \001(\t\022\027\n\017controll" +
      "er_code\030\002 \001(\t\"m\n9CAccountHardware_QueryA" +
      "ccountsRegisteredToSerial_Accounts\022\021\n\tac" +
      "countid\030\001 \001(\r\022\035\n\025registration_complete\030\002" +
      " \001(\010\"\211\001\n9CAccountHardware_QueryAccountsR" +
      "egisteredToSerial_Response\022L\n\010accounts\030\001" +
      " \003(\0132:.CAccountHardware_QueryAccountsReg" +
      "isteredToSerial_Accounts\"\200\001\n:CAccountHar",
      "dware_SteamControllerSetConfig_Controlle" +
      "rConfig\022\023\n\013appidorname\030\001 \001(\t\022\027\n\017publishe" +
      "dfileid\030\002 \001(\004\022\024\n\014templatename\030\003 \001(\t\"\214\002\n1" +
      "CAccountHardware_SteamControllerSetConfi" +
      "g_Request\022\025\n\rserial_number\030\001 \001(\t\022\027\n\017cont" +
      "roller_code\030\002 \001(\t\022\021\n\taccountid\030\003 \001(\r\022S\n\016" +
      "configurations\030\004 \003(\0132;.CAccountHardware_" +
      "SteamControllerSetConfig_ControllerConfi" +
      "g\022\032\n\017controller_type\030\005 \001(\005:\0012\022#\n\024only_fo" +
      "r_this_serial\030\006 \001(\010:\005false\"4\n2CAccountHa",
      "rdware_SteamControllerSetConfig_Response" +
      "\"\314\001\n1CAccountHardware_SteamControllerGet" +
      "Config_Request\022\025\n\rserial_number\030\001 \001(\t\022\027\n" +
      "\017controller_code\030\002 \001(\t\022\021\n\taccountid\030\003 \001(" +
      "\r\022\023\n\013appidorname\030\004 \001(\t\022\032\n\017controller_typ" +
      "e\030\005 \001(\005:\0012\022#\n\024only_for_this_serial\030\006 \001(\010" +
      ":\005false\"\227\001\n:CAccountHardware_SteamContro" +
      "llerGetConfig_ControllerConfig\022\023\n\013appido" +
      "rname\030\001 \001(\t\022\027\n\017publishedfileid\030\002 \001(\004\022\024\n\014" +
      "templatename\030\003 \001(\t\022\025\n\rserial_number\030\004 \001(",
      "\t\"\211\001\n2CAccountHardware_SteamControllerGe" +
      "tConfig_Response\022S\n\016configurations\030\001 \003(\013" +
      "2;.CAccountHardware_SteamControllerGetCo" +
      "nfig_ControllerConfig\"w\n2CAccountHardwar" +
      "e_DeRegisterSteamController_Request\022\025\n\rs" +
      "erial_number\030\001 \001(\t\022\027\n\017controller_code\030\002 " +
      "\001(\t\022\021\n\taccountid\030\003 \001(\r\"5\n3CAccountHardwa" +
      "re_DeRegisterSteamController_Response\"t\n" +
      "/CAccountHardware_SetPersonalizationFile" +
      "_Request\022\025\n\rserial_number\030\001 \001(\t\022\027\n\017publi",
      "shedfileid\030\002 \001(\004\022\021\n\taccountid\030\003 \001(\r\"2\n0C" +
      "AccountHardware_SetPersonalizationFile_R" +
      "esponse\"[\n/CAccountHardware_GetPersonali" +
      "zationFile_Request\022\025\n\rserial_number\030\001 \001(" +
      "\t\022\021\n\taccountid\030\002 \001(\r\"K\n0CAccountHardware" +
      "_GetPersonalizationFile_Response\022\027\n\017publ" +
      "ishedfileid\030\001 \001(\0042\373\014\n\017AccountHardware\022\330\001" +
      "\n\027RegisterSteamController\0221.CAccountHard" +
      "ware_RegisterSteamController_Request\0322.C" +
      "AccountHardware_RegisterSteamController_",
      "Response\"V\202\265\030RRecords a serial number an" +
      "d the calling user\'s account info for wa" +
      "rranty purposes.\022\327\001\n#CompleteSteamContro" +
      "llerRegistration\022=.CAccountHardware_Comp" +
      "leteSteamControllerRegistration_Request\032" +
      ">.CAccountHardware_CompleteSteamControll" +
      "erRegistration_Response\"1\202\265\030-Marks a con" +
      "troller\'s registration as complete\022\333\001\n#Q" +
      "ueryAccountsRegisteredToController\0229.CAc" +
      "countHardware_QueryAccountsRegisteredToS",
      "erial_Request\032:.CAccountHardware_QueryAc" +
      "countsRegisteredToSerial_Response\"=\202\265\0309S" +
      "ends back a list of accounts registered " +
      "to a controller.\022\274\001\n SetDesiredControlle" +
      "rConfigForApp\0222.CAccountHardware_SteamCo" +
      "ntrollerSetConfig_Request\0323.CAccountHard" +
      "ware_SteamControllerSetConfig_Response\"/" +
      "\202\265\030+Sets a desired controller config for" +
      " an app\022\274\001\n GetDesiredControllerConfigFo" +
      "rApp\0222.CAccountHardware_SteamControllerG",
      "etConfig_Request\0323.CAccountHardware_Stea" +
      "mControllerGetConfig_Response\"/\202\265\030+Gets " +
      "a desired controller config for an app\022\245" +
      "\001\n\031DeRegisterSteamController\0223.CAccountH" +
      "ardware_DeRegisterSteamController_Reques" +
      "t\0324.CAccountHardware_DeRegisterSteamCont" +
      "roller_Response\"\035\202\265\030\031De registers a cont" +
      "roller\022\273\001\n SetControllerPersonalizationF" +
      "ile\0220.CAccountHardware_SetPersonalizatio" +
      "nFile_Request\0321.CAccountHardware_SetPers",
      "onalizationFile_Response\"2\202\265\030.Stores the" +
      " file ID of the personalization file\022\271\001\n" +
      " GetControllerPersonalizationFile\0220.CAcc" +
      "ountHardware_GetPersonalizationFile_Requ" +
      "est\0321.CAccountHardware_GetPersonalizatio" +
      "nFile_Response\"0\202\265\030,Gets the file ID of " +
      "the personalization file\0325\202\265\0301A service " +
      "to use account hardware related methodsB" +
      "\003\200\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          SteammessagesUnifiedBaseSteamclient.getDescriptor(),
        }, assigner);
    internal_static_CAccountHardware_RegisterSteamController_Request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CAccountHardware_RegisterSteamController_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_RegisterSteamController_Request_descriptor,
        new java.lang.String[] { "SerialNumber", "ControllerCode", });
    internal_static_CAccountHardware_RegisterSteamController_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CAccountHardware_RegisterSteamController_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_RegisterSteamController_Response_descriptor,
        new java.lang.String[] { });
    internal_static_CAccountHardware_CompleteSteamControllerRegistration_Request_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CAccountHardware_CompleteSteamControllerRegistration_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_CompleteSteamControllerRegistration_Request_descriptor,
        new java.lang.String[] { "SerialNumber", "ControllerCode", });
    internal_static_CAccountHardware_CompleteSteamControllerRegistration_Response_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CAccountHardware_CompleteSteamControllerRegistration_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_CompleteSteamControllerRegistration_Response_descriptor,
        new java.lang.String[] { });
    internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Request_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Request_descriptor,
        new java.lang.String[] { "SerialNumber", "ControllerCode", });
    internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Accounts_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Accounts_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Accounts_descriptor,
        new java.lang.String[] { "Accountid", "RegistrationComplete", });
    internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Response_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_QueryAccountsRegisteredToSerial_Response_descriptor,
        new java.lang.String[] { "Accounts", });
    internal_static_CAccountHardware_SteamControllerSetConfig_ControllerConfig_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CAccountHardware_SteamControllerSetConfig_ControllerConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_SteamControllerSetConfig_ControllerConfig_descriptor,
        new java.lang.String[] { "Appidorname", "Publishedfileid", "Templatename", });
    internal_static_CAccountHardware_SteamControllerSetConfig_Request_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CAccountHardware_SteamControllerSetConfig_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_SteamControllerSetConfig_Request_descriptor,
        new java.lang.String[] { "SerialNumber", "ControllerCode", "Accountid", "Configurations", "ControllerType", "OnlyForThisSerial", });
    internal_static_CAccountHardware_SteamControllerSetConfig_Response_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CAccountHardware_SteamControllerSetConfig_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_SteamControllerSetConfig_Response_descriptor,
        new java.lang.String[] { });
    internal_static_CAccountHardware_SteamControllerGetConfig_Request_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_CAccountHardware_SteamControllerGetConfig_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_SteamControllerGetConfig_Request_descriptor,
        new java.lang.String[] { "SerialNumber", "ControllerCode", "Accountid", "Appidorname", "ControllerType", "OnlyForThisSerial", });
    internal_static_CAccountHardware_SteamControllerGetConfig_ControllerConfig_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_CAccountHardware_SteamControllerGetConfig_ControllerConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_SteamControllerGetConfig_ControllerConfig_descriptor,
        new java.lang.String[] { "Appidorname", "Publishedfileid", "Templatename", "SerialNumber", });
    internal_static_CAccountHardware_SteamControllerGetConfig_Response_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_CAccountHardware_SteamControllerGetConfig_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_SteamControllerGetConfig_Response_descriptor,
        new java.lang.String[] { "Configurations", });
    internal_static_CAccountHardware_DeRegisterSteamController_Request_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_CAccountHardware_DeRegisterSteamController_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_DeRegisterSteamController_Request_descriptor,
        new java.lang.String[] { "SerialNumber", "ControllerCode", "Accountid", });
    internal_static_CAccountHardware_DeRegisterSteamController_Response_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_CAccountHardware_DeRegisterSteamController_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_DeRegisterSteamController_Response_descriptor,
        new java.lang.String[] { });
    internal_static_CAccountHardware_SetPersonalizationFile_Request_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_CAccountHardware_SetPersonalizationFile_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_SetPersonalizationFile_Request_descriptor,
        new java.lang.String[] { "SerialNumber", "Publishedfileid", "Accountid", });
    internal_static_CAccountHardware_SetPersonalizationFile_Response_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_CAccountHardware_SetPersonalizationFile_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_SetPersonalizationFile_Response_descriptor,
        new java.lang.String[] { });
    internal_static_CAccountHardware_GetPersonalizationFile_Request_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_CAccountHardware_GetPersonalizationFile_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_GetPersonalizationFile_Request_descriptor,
        new java.lang.String[] { "SerialNumber", "Accountid", });
    internal_static_CAccountHardware_GetPersonalizationFile_Response_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_CAccountHardware_GetPersonalizationFile_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CAccountHardware_GetPersonalizationFile_Response_descriptor,
        new java.lang.String[] { "Publishedfileid", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.serviceDescription);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    SteammessagesUnifiedBaseSteamclient.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
